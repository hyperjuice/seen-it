
Post.create!([
  {name: "Issue 1: Binary Search Trees", content: "\n\n<p><img src=\"/assets/email/bst-ecb2448554d262e1449ded33aa0c8b5b.png\" alt=\"\"></p>\n\n<h2>Why review binary search trees?</h2>\n\n<p>From a piece on <a href=\"http://dandreamsofcoding.com/2012/11/25/how-to-prepare-for-technical-interviews/\">preparing for technical interviews by Dan Blumenthal</a>, Director of Engineering at TripAdvisor:</p>\n\n<p><em>\"Basic data structures and algorithms are favorite sources for interview questions. Arrays, Linked Lists, *</em>Binary Search Trees*<em>, Hash Tables, Sets, and Graphs show up all the time\"</em></p>\n\n<h2>What you need to know</h2>\n\n<p>A binary search tree (<a href=\"http://www.amazon.com/gp/product/0262033844/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0262033844&amp;linkCode=as2&amp;tag=a200-20\">CLRS chapter 12</a>) is a data structure that can provide O(log(n)) worst-case complexity for element insertion, search and deletion.</p>\n\n<p>How do BSTs accomplish this O(log(n)) performance? By doing two things: (1) maintaining the <em>ordering invariant</em>—<strong>at any node <em>n</em> in the tree with key <em>k</em>, all keys of the elements in <em>n</em>'s left subtree are strictly less than <em>k</em>, while all keys of the elements in <em>n</em>'s right subtree are strictly greater than *k</strong>*, and (2) keeping the tree's max height .</p>\n\n<p>Some important attributes of these trees:</p>\n\n<ul>\n<li>BST keys must be unique—no duplicates</li>\n<li>BST keys must be comparable</li>\n<li>O(log(n)) worst-case performance requires</li>\n</ul>\n\n<p>Here are some steps you should take toward gaining a deep understanding of binary search trees:</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=V_3BM0ykITM\" target=\"_blank\"><img src=\"/assets/email/bst-lecture-5432c7c741e673e1b0f76f7d31ff8205.png\" border=\"0\" style=\"width:450;\"></a></p>\n\n<ol>\n<li>If you have never heard of Binary Search Trees, you should set aside the 45 minutes to watch this <a href=\"http://www.youtube.com/watch?v=V_3BM0ykITM\">UC Berkeley video lecture on Binary Search Trees</a> or read these <a href=\"http://www.cs.cmu.edu/%7Ewlovas/15122-r11/lectures/17-bst.pdf\">course notes</a> from a CMU lecture.</li>\n<li>Look up at least two ways of maintaining a balanced binary search tree—that's how you get the O(log(n)) operation performance. Start with <a href=\"http://en.wikipedia.org/wiki/Self-balancing_binary_search_tree#Implementations\">this Wikipedia article</a> as a jumping off point, <strong>AVL trees</strong> and <strong>red-black</strong> trees are good choices to focus on.</li>\n<li>Do this week's problem!</li>\n</ol>\n\n<h1>Problem of the week</h1>\n\n<p>We're having so much fun with binary search trees already, why stop!   Questions similar to this week's problem have been <a href=\"http://www.glassdoor.com/Interview/binary-search-tree-interview-questions-SRCH_KT0,18.htm\">spotted at both Google and Amazon</a>.</p>\n\n<p>For this week, complete these tasks:</p>\n\n<ol>\n<li>Explain what a binary search tree is and what to consider when implementing one.</li>\n<li>\n<strong>Write a function that returns whether a given binary tree is a valid binary search tree</strong>. Use your favorite programming language. For extra credit, write your response on paper or your <a href=\"http://www.amazon.com/gp/product/B0002LCU1Y/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B0002LCU1Y&amp;linkCode=as2&amp;tag=a200-20\">gigantic Mark Zuckerberg-approved whiteboard</a>. You likely won't have an IDE at your next interview.</li>\n</ol>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/1", tag_id: nil},
  {name: "Issue 2: Merge Sort", content: "\n\n<p><a href=\"/assets/email/mergesort-animated-1ce783200b440a90dc1ba2c11dfc2e2a.gif\" target=\"_blank\"><img src=\"/assets/email/mergesort-animated-1ce783200b440a90dc1ba2c11dfc2e2a.gif\" border=\"0\" style=\"width:400;\"></a></p>\n\n<h2>Why review merge sort?</h2>\n\n<p>From a piece on <a href=\"http://dandreamsofcoding.com/2012/11/25/how-to-prepare-for-technical-interviews/\">preparing for technical interviews by Dan Blumenthal</a>, Director of Engineering at TripAdvisor:</p>\n\n<p><em>\"You’ll likely be asked about algorithms and complexity theory. If someone asks you to name a sorting algorithm, \"bubble sort\" shouldn’t be your first answer.\"</em></p>\n\n<p>A quick Google search reveals that sorting and merging questions have been spotted at Amazon, Palantir and Twitter.</p>\n\n<h2>What you need to know</h2>\n\n<p><strong>Merge sort</strong> (<a href=\"http://www.amazon.com/gp/product/0262033844/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0262033844&amp;linkCode=as2&amp;tag=a200-20\">CLRS chapter 2</a>) is one of the few sorting algorithms you may need to implement during a coding interview. Other likely candidates are quicksort and insertion sort, which will be covered in future emails.</p>\n\n<p>The concept is simple: Define a recursive function that (1) <strong>divides an array in half</strong>, (2) calls itself to <strong>sort both halves separately</strong>, and (3) <strong>merges the two resultant arrays</strong> after. Once the two sorted halves have been shuffled together, return the resulting array.</p>\n\n<p>Some things to keep in mind:</p>\n\n<ul>\n<li>The average and worst-case time complexities of merge sort are O(n log n). If you have a pre-processing check to see if the list is already sorted, you could have a best case of O(n). But in the words of MIT professor Charles Leiserson, best cases are pretty \"bogus\".</li>\n<li>Merge sort implementations are usually broken up into two distinct parts: (1) a recursive <tt>mergeSort</tt> function, and (2) a simple array-merging <tt>merge</tt> function.</li>\n<li>Sorting, in general, takes at least O(n log n) time—the fastest sorting algorithm in existence that handles arbitrary data would take O(n log n) time.</li>\n</ul>\n\n<p>Here are some steps you should take toward gaining a deep understanding of merge sort:</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=JPyuH4qXLZ0#t=17m11s\" target=\"_blank\"><img src=\"/assets/email/mergesort-lecture-6addf8a6b6fac662a6b4c214476d51d9.png\" border=\"0\" style=\"width:450;\"></a></p>\n\n<ol>\n<li>If you have never heard of Merge Sort, you should set aside the 50 minutes to watch this <a href=\"http://www.youtube.com/watch?v=JPyuH4qXLZ0#t=17m11s\">MIT Charles Leiserson video lecture on Merge Sort</a> or read these <a href=\"http://www.cs.mcgill.ca/%7Edprecup/courses/IntroCS/Lectures/comp250-lecture11.pdf\">course notes</a> from a McGill lecture.</li>\n<li>Read about the time / space complexity tradeoffs of merge sort, (and check out those merge sort animations!): <a href=\"http://www.sorting-algorithms.com/merge-sort\">http://www.sorting-algorithms.com/merge-sort</a>\n</li>\n<li>Look up how to do a merge sort in-place, without using any extra memory.</li>\n</ol>\n\n<h1>Problem of the week - <em><font color=\"red\">Holiday</font> <font color=\"green\">Edition</font></em>\n</h1>\n\n<p>We're having so much fun merging arrays of numbers, why stop now!</p>\n\n<p>For this week, complete these tasks:</p>\n\n<ol>\n<li>Explain what merge sort is and what to consider when implementing it.</li>\n<li>Explain how <strong><font color=\"red\">Santa Claus</font></strong> might use merge sort to help with <strong><font color=\"green\">Christmas</font></strong> (extra points for mental gymnastics).</li>\n<li>\n<strong>Write a function that merges an array of already sorted arrays, producing one large, still sorted array</strong>. Use your favorite programming language. For extra credit, write your response on paper or your <a href=\"http://www.amazon.com/gp/product/B0002LCU1Y/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B0002LCU1Y&amp;linkCode=as2&amp;tag=a200-20\">gigantic Mark Zuckerberg-approved whiteboard</a>. You likely won't have an IDE at your next interview.</li>\n</ol>\n\n<p>For example, your input might be:</p>\n\n<pre><code>[[0, 5, 8, 9], [1, 2, 7], [10]]\n</code></pre>\n\n<p>And you should return:</p>\n\n<pre><code>[0, 1, 2, 5, 7, 8, 9, 10]\n</code></pre>\n\n<p>Give it a spin, write some code, <strong>limit yourself to one hour</strong> and submit your code. There are a few different approaches you could take to organize your solution.</p>\n\n<p>What is the runtime complexity of your solution? How about space? Do you think there could be faster or more space efficient solutions?</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/2", tag_id: nil},
  {name: "Issue 3: Linked Lists", content: "\n\n<p><img src=\"http://i.imgur.com/Zj9UK.png\" border=\"0\" style=\"width:400;\"></p>\n\n<h2>Why review linked lists?</h2>\n\n<p>Linked lists show up in many programming interviews—often you will be asked to implement a variation of the standard linked list data structure or perform a more interesting operation on a simple linked list.</p>\n\n<h2>What you need to know</h2>\n\n<p>A <strong>linked list</strong> (<a href=\"http://www.amazon.com/gp/product/0262033844/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0262033844&amp;linkCode=as2&amp;tag=a200-20\">CLRS section 10.2</a>) is a data structure in which objects are arranged in a linear order. While arrays maintain a linear ordering through its indices, linked lists store their ordering with a pointer field <code>next</code> in each object.</p>\n\n<p>The simple singly-linked list consists of <strong>nodes</strong> with two fields:</p>\n\n<ol>\n<li>A <code>key</code>\n</li>\n<li>A pointer <code>next</code> to the next node, or to <code>NIL</code> if it's the tail node</li>\n</ol>\n\n<p>Doubly linked lists add one more field: a pointer to the <em>previous</em> node, often named <code>prev</code>.</p>\n\n<p><img src=\"http://i.imgur.com/ZhCKI.png\" border=\"0\" style=\"width:400;\"></p>\n\n<p>The linked-list itself often keeps track of the <code>head</code> node and provides various operations:</p>\n\n<ul>\n<li>\n<code>search(key)</code> - O(n) - which returns the found node with that <code>key</code> or <code>NIL</code> if not found</li>\n<li>\n<code>insert(x)</code> - O(1) - which splices node <code>x</code> onto the front of the list</li>\n<li>\n<code>delete(x)</code> - O(1) - which splices node <code>x</code> out of the list. Assuming the list is doubly-linked, this is usually done by re-setting the pointers of <code>x</code>'s <code>prev</code> and <code>next</code> elements to point to each other</li>\n<li>\n<code>delete(key)</code> - O(n) - which runs the O(n) search(key) then the O(1) delete(x)</li>\n</ul>\n\n<p>There are a few variations on the linked list you should be aware of:</p>\n\n<ol>\n<li>Single or double - if a list is singly-linked, there is only a <code>next</code> pointer. If it is doubly-linked, there are <strong>both</strong> <code>prev</code> and <code>next</code> pointers.</li>\n<li>Sorted or unsorted - a sorted linked list maintains an ordering of node <code>key</code>s</li>\n<li>Circular - a list in which the <code>next</code> pointer of the list's <code>tail</code> element points to the <code>head</code> element</li>\n<li>Separate classes for lists and nodes (as described above) or just nodes - sometimes defining a linked list <code>Node</code> class is all you'll need for an interview question, so it's unnecessary to go through the trouble of defining a <code>List</code> class</li>\n</ol>\n\n<p>If you are prompted to implement or perform operations on linked list in an interview, be sure you clarify what variation of the data structure you are dealing with.</p>\n\n<p>Some things to keep in mind:</p>\n\n<ul>\n<li>If you need to iterate through the linked list of size <code>n</code> to find an element during an operation, your operation will be at least O(n)</li>\n<li>Things that can speed up your operations: making your list doubly-linked, maintaining a <code>tail</code> pointer, </li>\n</ul>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p><a href=\"http://www.youtube.com/watch?v=htzJdKoEmO0\" target=\"_blank\"><img src=\"http://i.imgur.com/keVEL.png\" border=\"0\" style=\"width:450;\"></a></p>\n\n<ol>\n<li>If you have never heard of Linked Lists, you should set aside the 52 minutes to watch this <a href=\"http://www.youtube.com/watch?v=htzJdKoEmO0\">UC Berkeley lecture on linked lists</a> or read these <a href=\"http://www.cs.cornell.edu/courses/cs2110/2011fa/Lectures/L06-Lists/L06-Lists.pdf\">lecture notes</a> from a Cornell course</li>\n<li>Do some reading online about Sentinel nodes (<a href=\"http://en.wikipedia.org/wiki/Sentinel_node\">Wikipedia</a>, <a href=\"http://stackoverflow.com/questions/5384358/how-does-a-sentinel-node-offer-benefits-over-null\">Stack Overflow</a>) and figure out why they might be useful in certain circumstances</li>\n<li>Read about the <a href=\"http://en.wikipedia.org/wiki/Linked_list#Tradeoffs\">tradeoffs between linked lists and other data structures</a>.</li>\n</ol>\n\n<h1>Problem of the week - linked list lightning round</h1>\n\n<p>We're having so much fun with linked lists, why stop now!</p>\n\n<p>For this week, complete these tasks:</p>\n\n<ol>\n<li>Explain what a linked list is and what to consider when implementing one.</li>\n<li>Implement a simple singly-linked list data structure in your favorite language.</li>\n</ol>\n\n<p>Then, implement two of the three following linked list interview questions:</p>\n\n<ol>\n<li>Write a function to remove a list's 3rd from last element. <strong>Challenge</strong>: can you do it in a single list traversal?</li>\n<li>Write a function to remove all duplicates from a linked list. <strong>Challenge</strong>: can you do it without storing any extra data?</li>\n<li>Write a function to detect a loop in a linked list.</li>\n</ol>\n\n<p>Spend no more than one hour attempting these problems. The challenge followups are a bit tricky, but see if you can come up with the solution to them on your own.</p>\n\n<p>If not, feel free to look up approaches to the challenge portions and implement them anyway. Often interviewers will guide you to the insight required if you don't get it on your own, just to see if you can understand it and implement it anyway.</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/3", tag_id: nil},
  {name: "Issue 4: DFS / Tree Traversals", content: "\n\n<p><img src=\"http://i.imgur.com/MTcd7.gif\" border=\"0\"></p>\n\n<h2>Why review tree traversal?</h2>\n\n<p><strong>Trees and tree traversals</strong> show up in a surprisingly large number of job interviews. Even if you have a good understanding of the basic tree traversal algorithms, practicing hands-on with tree algorithms can make you more comfortable when they are a part of more complex problems.</p>\n\n<h2>What you need to know</h2>\n\n<p>Depth-first <strong>tree traversals</strong> (<a href=\"http://www.amazon.com/gp/product/0262033844/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0262033844&amp;linkCode=as2&amp;tag=a202-20\">covered in CLRS section 12.1</a>) are methods for visiting each node in a tree exactly once.</p>\n\n<h3>The big three methods for depth-first tree traversal</h3>\n\n<p>The big three tree traversal methods are simple to remember when defined recursively, and their names are well-known—fair game for interviews, so be sure to know them.</p>\n\n<h4>Pre-order (root before)</h4>\n\n<ol>\n<li>\n<strong>Visit</strong> (e.g., print or modify) the root.</li>\n<li>Traverse the <strong>left</strong> subtree pre-order.</li>\n<li>Traverse the <strong>right</strong> subtree pre-order.</li>\n</ol>\n\n<h4>In-order (root in the middle)</h4>\n\n<ol>\n<li>Traverse the <strong>left</strong> subtree in-order.</li>\n<li>\n<strong>Visit</strong> the root.</li>\n<li>Traverse the <strong>right</strong> subtree in-order.</li>\n</ol>\n\n<h4>Post-order (root after)</h4>\n\n<ol>\n<li>Traverse the <strong>left</strong> subtree post-order.</li>\n<li>Traverse the <strong>right</strong> subtree post-order.</li>\n<li>\n<strong>Visit</strong> the root.</li>\n</ol>\n\n<h3>Usage</h3>\n\n<p><strong>Pre-order</strong> traversal is sometimes used to <em>copy</em> a binary search tree—create the root node and then attach the copied children. <strong>In-order</strong> traversal is commonly used to print out binary search tree nodes in their specified order.</p>\n\n<h3>Implementing</h3>\n\n<p>Tree traversal algorithms are usually implemented recursively—you might notice how the traversal definitions above reference themselves.</p>\n\n<p>Pseudo-code for pre-order traversal (<a href=\"http://en.wikipedia.org/wiki/Tree_traversal#Pre-order\">via Wikipedia</a>):</p>\n\n<pre><code>preorder(node):\n  if node == null then return\n  visit(node)\n  preorder(node.left)\n  preorder(node.right)\n</code></pre>\n\n<p>If you are prompted to implement or perform operations on tree in an interview, be sure you clarify what variation of the data structure you are dealing with. We covered <strong>binary search trees</strong> a few weeks ago—clarify whether something is a binary search tree or not before jumping in on writing a solution. There may be optimizations or tricky solutions that are possible if it's a binary search tree.</p>\n\n<h3>Time and space</h3>\n\n<p>These traversal methods visit each node only once—O(n) time complexity.</p>\n\n<p>In terms of space, the recursive (and most iterative) solutions require space on the call stack, to the tune of O(tree height). In a balanced tree, that space complexity will be O(log n). <a href=\"http://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/\">There are algorithms</a> to traverse a tree without a stack or recursion, but I suspect you won't be asked that in an interview.</p>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p><a href=\"http://www.youtube.com/watch?v=evwGnROlB58\" target=\"_blank\"><img src=\"http://i.imgur.com/bPryz.png\" border=\"0\" style=\"width:450;\"></a></p>\n\n<ol>\n<li>If you haven't previously learned about or implemented tree traversal methods, you should set aside the 54 minutes to watch this <a href=\"http://www.youtube.com/watch?v=evwGnROlB58\">UC Berkeley lecture on trees and traversals</a> or read these <a href=\"http://ocw.mit.edu/courses/civil-and-environmental-engineering/1-204-computer-algorithms-in-systems-engineering-spring-2010/lecture-notes/MIT1_204S10_lec06.pdf\">lecture notes</a> from an MIT civil and environmental engineering course, starting at slide #11</li>\n<li>Take a look at some <a href=\"http://en.wikipedia.org/wiki/Tree_traversal#Pre-order\">iterative implementations</a> of tree traversals. Ponder why you need to use a stack to implement this iteratively.</li>\n</ol>\n\n<h1>Problem of the week - Tree Traversal</h1>\n\n<p>We're having so much fun with depth-first tree traversal methods, why stop now!</p>\n\n<p>For this week, complete these tasks:</p>\n\n<ol>\n<li>\n<strong>Explain what the big three depth-first tree traversals are</strong> and what to consider when implementing them.</li>\n<li>Implement a simple binary (<em>non-search</em>) tree node data structure in your favorite programming language and write the following methods: (1) print nodes pre-order, (2) print nodes in-order, (3) print nodes post-order.</li>\n<li>Write a function that, given two nodes and a tree root, finds the two nodes' <strong>lowest common ancestor</strong>. That is, the function should find the ancestor that both nodes share that is furthest away from the root.</li>\n</ol>\n\n<p>Start out trying #3 allowing each node to have a pointer to its parent. <strong>Challenge</strong>: can you do it without parent pointers? What would the time and space complexities be for your implementations?</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/4", tag_id: nil},
  {name: "Issue 5: Tries", content: "\n\n<p><img src=\"http://i.imgur.com/GVZRS1A.png\" border=\"0\"></p>\n\n<h2>Why review tries?</h2>\n\n<p><strong>Tries</strong>, pronounced like the word \"try\", show up in a surprisingly large number of programming interview problems—usually in text processing situations. The term trie comes from the word re<strong>trie</strong>val.</p>\n\n<h2>What you need to know</h2>\n\n<p><strong>Tries</strong>, or <strong>prefix trees</strong> (<a href=\"http://www.amazon.com/gp/product/0262033844/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0262033844&amp;linkCode=as2&amp;tag=a202-20\">covered briefly in CLRS section 14</a>) are a special kind of tree used in situations where there is a lot of overlap between keys.</p>\n\n<p>Imagine you are tasked with storing the entire English language dictionary and performing <strong>word auto-completion based on it</strong>.</p>\n\n<p>Notice there is a lot of overlap in certain words: <strong>cat</strong>, <strong>catalog</strong>, <strong>cat</strong>atonic, <strong>cat</strong>ty.</p>\n\n<p>Storing the entire dictionary in a hash map from <tt>{\"word\" =&gt; true}</tt> could work for checking whether a given word is <em>in</em> the dictionary, but in certain problems it is essential to work with keys at the sub-string level.</p>\n\n<p>In the auto-completion situation, you could construct a tree structure with each letter of a word pointing to its next letter. When you hit the end of a word, you mark the node as a valid word stopping point. In doing so, you would be constructing a <strong>trie</strong>.</p>\n\n<h3>Construct and find</h3>\n\n<p>To <strong>construct</strong> a simple trie (or prefix tree):</p>\n\n<ol>\n<li>For each key, deconstruct your key <code>k</code> (usually your dictionary word) into a sequence of subkeys. For example, <code>\"catatonic\"</code> could become <code>\"c\", \"a\", \"t\", \"a\", \"t\", \"o\", \"n\", \"i\", \"c\"</code>.</li>\n<li>Starting from the root, for each remaining subkey, create and enter a new child node.</li>\n<li>When you are out of subkeys, mark the final, deepest node as a valid key.</li>\n</ol>\n\n<p>To perform a <strong>search</strong> on a trie:</p>\n\n<ol>\n<li>For each subkey (or letter), enter the child node for that subkey. If there is none, the search has failed.</li>\n<li>Once you're out of subkeys, if the node is marked as a valid key ending point, <strong>do something</strong>.</li>\n</ol>\n\n<p>In a simple dictionary spell checker <code>is_valid_word</code> search, that <strong>something</strong> might just be returning true, or returning the word stored as the node's value.</p>\n\n<p>In the case of a word auto-completer, you might perform a search of child nodes to find a valid word to suggest for auto-completion. You might even make your search take word usage frequency into account to make your suggestions even better (<a href=\"http://www.damnyouautocorrect.com/\">or, in Apple's case, worse?</a>).</p>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/3oxtnXv.png\" style=\"width:200px\"></center>\n\n<h3>Usage</h3>\n\n<p>Tries are often used for autocomplete dictionaries and spell checkers, and a special type of trie known as a suffix tree (which Knuth crowned as \"Algorithm of the Year 1973\") can be used to power full-text search. Tries also often show up in bioinformatics algorithms.</p>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p></p>\n<center><a href=\"http://www.youtube.com/watch?v=BXeIu54mUg0\" target=\"_blank\"><img src=\"http://i.imgur.com/tcgIydq.png\" border=\"0\" style=\"width:450;\"></a></center>\n\n<ol>\n<li>If you haven't previously learned about or implemented tries, you should crank your computer's volume all the way up and set aside the 12 minutes to watch this <a href=\"http://www.youtube.com/watch?v=BXeIu54mUg0\">video on implementing a Trie in Python</a> or read these <a href=\"https://docs.google.com/viewer?a=v&amp;q=cache:8XKCBkvNg7EJ:www.cs.umd.edu/class/fall2005/cmsc132/lecs/lec29.ppt+&amp;hl=en&amp;gl=us&amp;pid=bl&amp;srcid=ADGEEShrbk7k3iMT7ZA3V4CYBVrfCx1LJE-yKc7RyokpFa30jBXly0wYT3eBmkpEt6z10sRuImxUQoYDndH97oU5IDfSdnDLlBTuTBmmhnyVPP3hO697qdfskz7njPPTYE_f4VsCAnQp&amp;sig=AHIEtbSG0tP0TvMMtMwYZ8G0hVmj8EJW1g\">lecture notes</a> from a University of Maryland course.</li>\n<li>Take a look at some discussion about tries' <a href=\"http://en.wikipedia.org/wiki/Trie\">applications, advantages and disadvantages</a>. If you are interested, learn a bit about how <a href=\"http://en.wikipedia.org/wiki/Suffix_tree\">suffix trees</a> can be used for text search scenarios and how they can be wrangled to support <a href=\"http://en.wikipedia.org/wiki/Generalized_suffix_tree\">multiple words</a>.</li>\n<li>Read this excellent <strong><a href=\"http://whiteboxcomputing.com/java/prefix_tree/\">simple explanation of trie implementation</a></strong>, paying particular attention to the section on choosing a data structure for storing child node references.</li>\n</ol>\n\n<h1>Problem of the week - Autocompletion</h1>\n\n<p>This week's task is as simple or hard as you'd like it to be.</p>\n\n<ol>\n<li>Research different variants of the trie and explain in your own words what to consider when implementing one</li>\n<li><strong>Write an auto-completer.</strong></li>\n</ol>\n\n<p>An auto-completer? What does that mean? It's up to you! It could be as simple as suggesting <a href=\"http://www.cs.duke.edu/%7Eola/ap/linuxwords\">a few random word suffixes from the dictionary</a>, or as involved as supporting various spelling errors, integrating word frequency information, or something evil like suggesting the worst possible yet still technically correct suffix.</p>\n\n<p>Extra bonus points this week for interactive solutions posted to <a href=\"http://jsfiddle.net\">JSFiddle</a> or elsewhere online.</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/5", tag_id: nil},
  {name: "Issue 6: Stacks", content: "\n\n<p><img src=\"http://i.imgur.com/fABk4.gif\" border=\"0\"></p>\n\n<h2>Why review stacks?</h2>\n\n<p>A good handle on <strong>stacks</strong> will come in handy in two common interview situations:</p>\n\n<ol>\n<li>Questions <em>about</em> stacks, implementing stack operations and variations on the stack</li>\n<li>Solutions to problems that require using stacks as a tool</li>\n</ol>\n\n<h2>What you need to know</h2>\n\n<p>Stacks are an abstract data type (<a href=\"http://programmers.stackexchange.com/questions/148747/abstract-data-type-and-data-structure\">as opposed to a data structure</a>) for storing and retreiving elements in Last-in First-out order.</p>\n\n<p>Stacks provide two basic operations:</p>\n\n<ol>\n<li>\n<code>push</code>, which places a given element at the top of the stack</li>\n<li>\n<code>pop</code>, which removes and returns the element at the top of the stack</li>\n<li>(sometimes) <code>peek</code>, which returns the element at the top of the stack <em>without removing it</em>\n</li>\n</ol>\n\n<p>Push, pop and peek all operate in O(1) (constant) time, since you maintain a direct pointer to the top of the list.</p>\n\n<p>How simple!</p>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/pcnb6tf.png\" width=\"200/\"></center>\n\n<h3>Implementation</h3>\n\n<p>Stacks are usually implemented using either a linked list or array behind the scenes:</p>\n\n<ol>\n<li>Using a linked list—define a stack node data type with two fields: the node's <code>data</code> and a pointer to the <code>next</code> node.</li>\n<li>Using an array—maintain where the current top is. Even if the array is dynamically resized, push and pop <a href=\"http://stackoverflow.com/a/4854065/136134\">still operate in O(1) amortized time</a>.</li>\n</ol>\n\n<h3>Usage</h3>\n\n<ol>\n<li>Backtracking—stacks are useful as breadcrumbs in search algorithms. When your algorithm detects its current path has failed, pop the path of failure off of the stack and choose a different one.</li>\n<li>Implementing algorithms well-suited for recursion without recursion (<a href=\"http://mitpress.mit.edu/sicp/full-text/sicp/book/node110.html\">as discussed in SICP</a>). E.g., printing <strong>Binary Search Tree</strong> keys in sorted order without recursion (like our problem from a few issues ago), or solving a Towers of Hanoi puzzle without recursion, as in this week's challenge.</li>\n</ol>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p></p>\n<center><a href=\"http://vimeo.com/31139428\" target=\"_blank\"><img src=\"http://i.imgur.com/lqf6Vha.png\" border=\"0\" style=\"width:450;\"></a></center>\n\n<ol>\n<li>If you haven't learned much about stacks or when they're used before, take the 11 minutes to watch <a href=\"http://vimeo.com/31139428\">this video lecture on stacks from a high school AP CS course</a>, maybe the first CS lecture I've ever seen with formal wear in it. Otherwise, try <a href=\"http://ocw.mit.edu/courses/civil-and-environmental-engineering/1-204-computer-algorithms-in-systems-engineering-spring-2010/lecture-notes/MIT1_204S10_lec06.pdf\">these lecture notes</a> from an MIT civil and environmental engineering computer algorithms course</li>\n<li>Read a bit of the <a href=\"http://en.wikipedia.org/wiki/Stack_(abstract_data_type)\">Wikipedia article on stacks</a> and pay particular attention to their description of <a href=\"http://en.wikipedia.org/wiki/Stack_(abstract_data_type)#Basic_architecture_of_a_stack\">stacks being used for allocating and accessing memory</a>.</li>\n<li>Complete this week's challenge problems!</li>\n</ol>\n\n<h1>Problem of the week - A Stack of Stack Problems</h1>\n\n<ol>\n<li>Research stacks and write about one interesting use case for stacks.</li>\n<li>Write a data structure that provides the operations of the stack—<code>push</code>, <code>pop</code>, and <code>peek</code>\n</li>\n<li>\n<strong>Write a Towers of Hanoi solver</strong>, without using recursion.</li>\n</ol>\n\n<p>In the <a href=\"http://en.wikipedia.org/wiki/Tower_of_Hanoi\">Towers of Hanoi</a> puzzle, you have three towers of rings—<code>tower 1</code>, <code>tower 2</code>, and <code>tower 3</code>.</p>\n\n<p><img src=\"http://i.imgur.com/t9Oso6H.jpg\" width=\"400/\"></p>\n\n<p><strong>Rings can only be placed on top of rings bigger than them.</strong> The goal is to transfer the rings from tower 1 (with <code>n</code> rings) to tower 2 (empty) without breaking the rule that smaller rings must always only be on top of bigger rings.</p>\n\n<p><img src=\"http://i.imgur.com/NXVvOPv.gif\" width=\"400/\"></p>\n\n<p>Write a solver for Towers of Hanoi in your favorite programming language. You can choose the form of your solution:</p>\n\n<ol>\n<li>Return a list of the operations that would be required to move from tower 1 to tower 2.</li>\n<li>Graphically show the steps of a solution to move from tower 1 to tower 2.</li>\n</ol>\n\n<p>Give it a shot for an hour or so. If you get stuck, feel free to look up a general approach online. <a href=\"http://amzn.com/1479274836?tag=a202-20\">Elements of Programming Interviews has a great explanation on page 218</a>.</p>\n\n<p><strong>Extra bonus points this week for solutions that visualize the stacks posted to <a href=\"http://jsfiddle.net\">JSFiddle</a> or elsewhere online.</strong></p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/6", tag_id: nil},
  {name: "Issue 7: Singleton", content: "\n\n<p>Or, the loneliest of the design patterns.</p>\n\n<p><img src=\"http://i.imgur.com/yZMqZ.gif\" border=\"0\"></p>\n\n<h2>Why review the Singleton pattern?</h2>\n\n<p>Design pattern questions show up in many interviews, especially for more senior engineers. If you're interviewing for internships or straight out of college, mastery of design patterns is a very positive sign, but not knowing them usually won't hurt you. For more senior engineering positions, knowledge of design patterns is a must.</p>\n\n<p>Though controversial, the <strong>singleton</strong> design pattern shows up in many interviews and codebases, and is often a good starting point for object-oriented design dicussion. In <a href=\"http://amzn.com/098478280X?tag=a202-20\">Cracking the Coding Interview</a>, under the table \"Absolute must-have knowledge\", the two design patterns listed are <strong>singleton</strong> and <strong>factory</strong> (which we'll review in a future issue).</p>\n\n<p>Recognizing the singleton pattern when you see it and knowing how and when to supplant it with something more flexible can also come in handy during tough refactorings.</p>\n\n<h2>What you need to know</h2>\n\n<p>The <strong>singleton</strong> (<a href=\"http://en.wikipedia.org/wiki/Singleton_pattern\">Wikipedia</a>) is a design pattern that restricts instantiation of a class to <strong>one object</strong>.</p>\n\n<p>In other words, you create a class that maintains a reference to the only instance of itself.</p>\n\n<p>The singleton's key value propositions:</p>\n\n<ol>\n<li>Ensuring there is <strong>only one instance</strong> of a class</li>\n<li>Giving a <strong>global point of access</strong> for that class</li>\n<li>(optional) Using this single point of access to control when initialization happens</li>\n</ol>\n\n<h3>How to use it</h3>\n\n<p>Here's a UML diagram of an example singleton class:</p>\n\n<p><img src=\"http://i.imgur.com/34lKDe3.png\" alt=\"\"></p>\n\n<p>The most important things to notice:</p>\n\n<ol>\n<li>The constructor (<code>Singleton() : void</code>) is <strong>private</strong>. This lets the Singleton class ensure no outside code can create another instance. In some languages, <a href=\"http://blog.pixelbreaker.com/actionscript-3-0/as30-better-singletons\">such as AS3</a>, constructors can't be declared private, so other methods are used to enforce the singleton invariant.</li>\n<li>The singleton <code>instance</code> object can either be (1) <strong>lazy initialized</strong> in the <code>getInstance()</code> function or (2) <strong>eager initialized</strong> in the <code>instance</code> field declaration</li>\n</ol>\n\n<h3>When to use it</h3>\n\n<p>As one StackOverflow poster <a href=\"http://stackoverflow.com/questions/228164/on-design-patterns-when-to-use-the-singleton\">put it</a>, there are \"very few acceptable reasons to use a Singleton\". Singletons often get over-used, as we'll see in the Drawbacks section. </p>\n\n<p>Common singletons you might come across:</p>\n\n<ul>\n<li>Shared resources that get accessed often from all over the codebase, e.g., a single handle for a <strong>database connection</strong>, a simple <strong>logger</strong>, a shared print spooler</li>\n<li>Read-only singletons, e.g., configuration information that should only be written to at startup time</li>\n</ul>\n\n<h3>Drawbacks and alternatives</h3>\n\n<p><em>(Or, why <a href=\"https://sites.google.com/site/steveyegge2/singleton-considered-stupid\">Steve Yegge lies awake at night pondering how much electricity the Singleton pattern has wasted during its existence</a>.)</em></p>\n\n<h4>Singletons are difficult to unit test</h4>\n\n<p>See this post from Google's testing team about <a href=\"http://googletesting.blogspot.com/2008/05/tott-using-dependancy-injection-to.html\">why singletons are difficult to test</a>. They also show how to use a replacement for the static singleton accessor, <strong>dependency injection</strong>, that is easier to test. In short, you pass a reference to the single instance of the former singleton class through to the constructor for any class that wants to use the former singleton.</p>\n\n<h4>Singletons are inflexible</h4>\n\n<p>Before creating a singleton class, be sure it will <em>always</em> be a singleton. If a few months down the line you decide you want more than one instance of the class, you may have a heck of a cleanup job to do.</p>\n\n<p>As <a href=\"https://sites.google.com/site/steveyegge2/singleton-considered-stupid\">Steve Yegge puts it</a>:</p>\n\n<p>\"<em>Someday you will be amazed that, by gosh, you really DO need another implementation of that dang PrintSpooler class, and it should have been an interface, a factory, and a set of implementation classes. D'oh!</em>\"</p>\n\n<h4>Singletons are \"basically just a memory leak\"</h4>\n\n<p>It's difficult to know when to deallocate a singleton. As Steve Yegge puts it, \"<em>nobody's going to call you and say \"nobody's going to be using you for a while!</em>\"</p>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p></p>\n<center><a href=\"http://www.newthinktank.com/2012/09/singleton-design-pattern-tutorial/\" target=\"_blank\"><img src=\"http://i.imgur.com/sV1vk0P.png\" border=\"0\" style=\"width:450;\"></a></center>\n\n<ol>\n<li>If you've never used the singleton pattern before, take the 18 minutes to watch <a href=\"http://www.newthinktank.com/2012/09/singleton-design-pattern-tutorial/\">this video on singleton usage</a> from a guy who sounds a lot like Andy from The Office. Otherwise, try <a href=\"http://www.cs.colorado.edu/%7Ekena/classes/6448/f07/lectures/22/22-SingletonCommand.pdf\">these lecture notes</a> from a UC Boulder object-oriented design course.</li>\n<li>Read a bit of the <a href=\"http://en.wikipedia.org/wiki/Singleton_pattern\">Wikipedia article on the singleton</a> and pay particular attention to the description of <a href=\"http://en.wikipedia.org/wiki/Singleton_pattern#The_solution_of_Bill_Pugh\">singleton thread safety</a> when using the singleton pattern in concurrent Java applications.</li>\n</ol>\n\n<h1>Problem of the week - Singletons considered <em>okay</em>\n</h1>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/RouawO1.png\" width=\"100/\"></center>\n\n<ol>\n<li>Write a simple singleton class in your favorite programming language with an example usage.</li>\n<li>Solve the Sorted array binary search problem:</li>\n</ol>\n\n<p>Given a sorted array of integers <code>array</code> and an integer <code>key</code>, return the index of the <em>first</em> instance of <code>key</code> in the <code>array</code>. If <code>key</code> is not present in <code>array</code>, you should return <code>-1</code>.</p>\n\n<p>For example, given the array <code>[-10, -2, 1, 5, 5, 8, 20]</code> and key <code>5</code>, you should return the index <code>3</code>.</p>\n\n<p>Your solution should be a <a href=\"http://en.wikipedia.org/wiki/Binary_search_algorithm\">binary search</a>, that is, it should run in <code>O(log n)</code> time.</p>\n\n<p>Though it's straightforward, if you get stuck, <a href=\"http://amzn.com/1479274836?tag=a202-20\">Elements of Programming Interviews</a> covers the problem and solution in section 8.1. Still code it up.</p>\n\n<p><strong>Extra bonus points for solutions that visualize the problem posted to <a href=\"http://jsfiddle.net\">JSFiddle</a> or elsewhere online.</strong></p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/7", tag_id: nil},
  {name: "Issue 8: Software Design", content: "\n\n<p></p>\n<center>\n<img src=\"http://i.imgur.com/xKIxXaZ.gif\" height=\"300/\"><img src=\"http://i.imgur.com/nib1J.gif\" height=\"300/\">\n</center>\n\n<h2>Why review and practice software design?</h2>\n\n<p>Questions about designing software systems show up in many different interviews, espeically at large companies that maintain very large systems. Open ended software design questions are <a href=\"http://www.careercup.com/page?pid=object-oriented-design-interview-questions\">often asked at</a> Amazon, Apple and Google.</p>\n\n<p>Whether these questions should be asked at interviews at all is <a href=\"http://www.nomachetejuggling.com/2010/04/06/avoiding-the-big-design-interview-question/\">controversial</a>, as some engineers feel software is better evolved from a small set of requirements and built out as new functionality is required. Regardless, these questions get asked often, and can give your interviewer a way to see how you handle explicitly breaking a problem down into parts.</p>\n\n<h3>Breaking things down</h3>\n\n<p>How would you make a game of chess?</p>\n\n<p>How would you make a text editor?</p>\n\n<p>At first, these questions can seem indimidatingly big. It's perfectly normal to feel overwhelmed the first time you approach questions about how you would implement a large software system—heck, there are thousands of lines of code in many chess games and text editors (or a million in the case of emacs).</p>\n\n<p>Fortunately, making design decisions about breaking things down before diving deep into implementation details is a muscle you can exercise.</p>\n\n<p>Aside from completing this issue's problem, a great way to practice is to habitually think about systems and how you would model it in software. Next time you use a piece of software, think, <strong>how would I go about making that?</strong> What decisions would I have to make along the way?</p>\n\n<h2>Learning—One Hour of Designing Software</h2>\n\n<p></p>\n<center><a href=\"http://www.youtube.com/watch?v=COGYpAokXbg&amp;list=EC818D7B4539EED6D3&amp;index=2\" target=\"_blank\"><img src=\"http://i.imgur.com/nyPMYp0.png\" border=\"0\" style=\"width:450;\"></a></center>\n\n<p>If you haven't implemented many full software systems before, watch this 1 hour and 20 minute <a href=\"http://www.youtube.com/watch?v=COGYpAokXbg&amp;list=EC818D7B4539EED6D3&amp;index=2\">unit from Peter Norvig's Deisgn of Computer Architecture course</a>. Norvig covers problem breakdown, designing a solution, testing components of a system and coding it up. As my brother notes, it's a <em>\"basic example, but showed how thoughtful the process of design can be.\"</em></p>\n\n<p>If you can't make it through Norvig's lectures, try <a href=\"http://www.cs.wustl.edu/%7Eschmidt/PDF/design-principles4.pdf\">these lecture notes</a> from a Vanderbuilt University lecturer's systems architecture course.</p>\n\n<h1>Problem of the week - Design Decisions</h1>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/HiNChaz.gif\" width=\"225/\"></center>\n\n<p>Scenario: You are on a team that's designing a system which, given (a) a budget, (b) family size and (c) a list of favorite meals, will <strong>construct a good weekly shopping list for the family</strong>.</p>\n\n<p>Your task:</p>\n\n<ol>\n<li>\n<strong>Write down two or three clarifying questions</strong> you would ask an interviewer about this design problem. Then <strong>come up with answers</strong> that you think would be reasonable.</li>\n<li>\n<strong>Design the architecture</strong> (i.e. most important classes, methods and data structures) for such a system. Feel free to use a whiteboard or online tool such as <a href=\"http://www.gliffy.com/\">Gliffy</a>. Spend less than 30 minutes on this task, then complete the followup questions in (3)</li>\n<li>How would you test different parts of your solution? What are some sample cases you had in mind?</li>\n</ol>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/8", tag_id: nil},
  {name: "Issue 9: Quicksort", content: "\n\n<p></p>\n<center><img src=\"http://i.imgur.com/mYGrtLM.gif\" height=\"300/\"></center>\n\n<p><em>\"Just grab a thing and compare the other things with it.\"</em> - Tony Hoare, inventor of quicksort</p>\n\n<p><strong>Quicksort</strong> (<a href=\"http://www.amazon.com/gp/product/0262033844/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0262033844&amp;linkCode=as2&amp;tag=a202-20\">CLRS page 146</a>) is a sorting algorithm with a very good run time in practice, both <strong>(1)</strong> beating out many other O(n log n) sorting algorithms in run time performance and <strong>(2)</strong> allowing its operations to be done in-place, requiring no extra space.</p>\n\n<ul>\n<li>Best case: <strong>O(n log n)</strong> comparisons</li>\n<li>Worst case: <strong>O( n^2 )</strong> comparisons</li>\n<li>Average case: <strong>O(n log n)</strong> comparisons</li>\n</ul>\n\n<p>Though the worst case is n^2 — this behavior is rare.</p>\n\n<h2>Implementing quicksort</h2>\n\n<p>To quicksort, you:</p>\n\n<ol>\n<li>Pick a <strong>pivot</strong> element from the array.</li>\n<li>Ensure everything to the <strong>left</strong> of the pivot is less than the pivot. Ensure everything to the <strong>right</strong> is greater than the pivot. This is known as <strong>partitioning</strong>.</li>\n<li>Recursively sort the left and right subarrays.</li>\n<li>Place the pivot between the two now-sorted subarrays.</li>\n</ol>\n\n<p>The base case of the recursive operation is a list of length 0 or 1. It's already sorted!</p>\n\n<p>Implementations of quicksort are sometimes split into two functions:</p>\n\n<ol>\n<li>A <code>partition</code> method (taking care of step 2 above) which takes a <code>pivot</code> and an array and ensures everything to the left is less than and everything to the right is greater than the pivot</li>\n<li>A <code>quicksort(array)</code> method for choosing a pivot, partitioning, recursively calling itself and placing the pivot back in between the results</li>\n</ol>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/sPfcNa5.gif\"></center>\n\n<h2>Consideration</h2>\n\n<p>Any element would work for the pivot in quicksort, but there is a catch—</p>\n\n<p>Choosing the <strong>leftmost element</strong> for the partition causes worst-case behavior in <strong>already sorted</strong> arrays—which is a very common use case for sorting.</p>\n\n<p>Often times implementations will choose the middle or a random element. Choosing a random pivot element can help you avoid having to encounter worst case scenarios in your patterned data in the first place.</p>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p></p>\n<center><a href=\"http://www.youtube.com/watch?v=vK_q-C-kXhs\" target=\"_blank\"><img src=\"http://i.imgur.com/Xuxhw3z.png\" border=\"0\" style=\"width:450;\"></a></center>\n\n<ol>\n<li>If you haven't previously learned about or implemented quicksort, you should set aside the 12 minutes to watch this <a href=\"http://www.youtube.com/watch?v=vK_q-C-kXhs\">MIT intro to algorithms lecture on implementing a quicksort</a> or read these <a href=\"http://www.cs.cmu.edu/%7Efp/courses/15122-s11/lectures/08-qsort.pdf\">lecture notes</a> from a CMU course.</li>\n<li>Take a look at some discussion about quicksort's <a href=\"http://en.wikipedia.org/wiki/Quicksort\">considerations</a> and <a href=\"http://en.wikipedia.org/wiki/Quicksort#In-place_version\">in-place implementation differences</a>.</li>\n<li>Let's also use quicksort as an excuse to <a href=\"http://www.sorting-algorithms.com/\">look at all of these pretty sorting animations again</a>.</li>\n<li>Read this <a href=\"http://stackoverflow.com/questions/7942897/quicksort-java-causes-stackoverflow-at-array-length-60k\">solution to someone's <strong>actual stack overflow on Stack Overflow</strong></a> by choosing a random pivot to avoid worst case partitioning.</li>\n</ol>\n\n<p></p>\n<center><a href=\"http://stackoverflow.com/questions/7942897/quicksort-java-causes-stackoverflow-at-array-length-60k\"><img src=\"http://i.imgur.com/xRglD8J.jpg\"></a></center>\n\n<h1>Problem of the week - Quicksort</h1>\n\n<ol>\n<li>Write an answer to the common interview question: <strong>what makes quicksort different from merge sort?</strong>\n</li>\n<li>Implement recursive quicksort <strong>(a)</strong> choosing the leftmost element as a pivot, <strong>(b)</strong> choosing the middle element as a pivot, and <strong>(c)</strong> choosing a random element as a pivot. Don't worry about storage.</li>\n<li>\n<strong>(Bonus)</strong> Measure how many comparisons your quicksorts do on different arrays: already sorted, all the same element, randomized.</li>\n</ol>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/9", tag_id: nil},
  {name: "Issue 10: Closures", content: "\n\n<p></p>\n<center><img src=\"http://i.imgur.com/7gmB870.gif\" height=\"300/\"></center>\n\n<p></p>\n<center>\n<i>\"Hey, what's going on out there?\"</i> - A function in a closure</center>\n\n<p>A <strong>closure</strong> (or <strong>function closure</strong>) is a block of code which meets three criteria. It can, as <a href=\"http://innig.net/software/ruby/closures-in-ruby\">well-described by Paul Cantrell</a>:</p>\n\n<ul>\n<li><p>be passed around as a value</p></li>\n<li><p>be executed on demand by anyone who has that value</p></li>\n<li><p>refer to variables from the context in which it was created (i.e. it is closed with respect to variable access, in the mathematical sense of the word \"closed\").</p></li>\n</ul>\n\n<p>Closures are an increasingly standard language feature first implemented in the programming language Scheme in 1975. Since then, closures can be found in Lisp, ML, Smalltalk, C#, Ruby (<a href=\"http://innig.net/software/ruby/closures-in-ruby\">well... it's complicated</a>), Javascript, and, more explicitly with the introduction of version 8, Java.</p>\n\n<h2>Why learn about closures?</h2>\n\n<p>Interviewers often ask questions about the <a href=\"http://en.wikipedia.org/wiki/Lexical_scope#Lexical_scoping\">lexical scope</a> of variables and other identifiers in example pieces of code.</p>\n\n<p>Especially—</p>\n\n<h3>Scope in Javascript, or the \"last-value problem\"</h3>\n\n<p>If you profess to have Javascript experience, interview questions similar to the one <a href=\"http://frontendcoder.wordpress.com/2013/01/29/learning-javascript-via-interview-questions-closures/\">written about here</a> will often come up:</p>\n\n<pre><code>function initButtons() {\n    var body = document.body,\n        button, i;\n\n    for (i = 0; i &lt; 5; i++) {\n        button = document.createElement(\"button\");\n        button.innerHTML = \"Button \" + i;\n        button.addEventListener(\"click\", function (e) {\n            alert(i);\n        }, false);\n        body.appendChild(button);\n    }\n}\n</code></pre>\n\n<p><em>When this function is called...</em></p>\n\n<p><strong>What will be displayed?</strong></p>\n\n<p><strong>What will happen when you click on each button?</strong></p>\n\n<h2><a href=\"http://jsfiddle.net/9KASp/\">Try it out here (JSFiddle)</a></h2>\n\n<h3>What's going on there?</h3>\n\n<p>The key closure \"gotcha\" you come across Javascript and ActionScript 3 is this—the <code>function(){}</code> defined in <code>addEventListener</code> will be accessing the variables in the outer <code>function initButtons()</code> scope, not the <code>for</code> loop <em>block-level</em> scope—unlike some other languages, <strong>Javascript does not have block-level (for, if, while, etc.) scope</strong>.</p>\n\n<p>The closure captures its surrounding scope, as in, if you modified the variable inside the closure, and another closure executed later referenced that variable, the change within the first closure should show up inside the second one. As one of my brothers puts it, \"closures are one of the many reasons that it's best to avoid mutability when doing clever things\".</p>\n\n<p>Even if a variable is not of a <code>pointer</code> type, your enclosed function will be looking at and modifying the variable in the enclosing scope directly. Closures actually <strong>capture the scope</strong>, not just a snapshot of the variables in that scope.</p>\n\n<p>This scope question is a favorite of interviewers because it is seen as a shortcut to differentiate between intermediate and advanced Javascript developers. The idea is, however right or wrong, if you've done a <em>lot</em> of programming in Javascript, you'll have been bitten by the function / block scoping distinction while using closures in Javascript in the past.</p>\n\n<h5>Getting around it</h5>\n\n<p>To work around this issue, you can exploit the fact that closures can capture <strong>function-level</strong> scope while closures within (for, if, while, etc.) blocks can not (because there is no block-level scope).</p>\n\n<p>In <a href=\"http://frontendcoder.wordpress.com/2013/01/29/learning-javascript-via-interview-questions-closures/\">Nathaniel Lee's post</a>, he describes a common solution to this problem:</p>\n\n<pre><code>    button.addEventListener(\"click\", function (j) {\n        return function (e) {\n            alert(j);\n        };\n    }(i), false);\n</code></pre>\n\n<p>Nathaniel defines and calls a function that simply returns our original function—but passes in <code>i</code> to the outer function as a parameter. Since this outer function is immediately called (the <code>}(i)</code> portion), addEventListener() receives a function that references <code>j</code>, the current value of <code>i</code>—0, 1, 2, 3, or 4.</p>\n\n<h2>How are closures implemented?</h2>\n\n<p>Closures are usually implemented with a data structure that contains (1) a pointer to the function code and (2) a representation of the function's lexical environment at the time of closure creation.</p>\n\n<p>Closures require that the variables they reference stay around until the time the closure is executed (in the example above, the variable <code>i</code> would need to stick around until we click a button). Typically, languages that support closures use garbage collection as a mechanism to retain referenced chunks of memory. Languages that use a linear stack-based execution and memory model face a greater challenge in implementing closures, known as the <a href=\"http://en.wikipedia.org/wiki/Funarg_problem\">Funarg, or \"functional argument\" problem</a>.</p>\n\n<h2>What are closures often used for?</h2>\n\n<p>Closures are used for a number of things, including many basic language constructs. Here is an excellent <a href=\"http://msdn.microsoft.com/en-us/magazine/ff696765.aspx\">writeup and list of examples</a>.</p>\n\n<p>In terms of what you might come across during interviews, particularly important to note are:</p>\n\n<ol>\n<li>The <a href=\"http://www.yuiblog.com/blog/2007/06/12/module-pattern/\">Javascript <strong>module</strong> pattern</a>—in this, closures are used to store private variables and methods while public properties and methods are returned as an object (for those unfamiliar with Javascript, essentially a dictionary / associative array).</li>\n<li>Using closures to create \"counter\" functions and for constructing <a href=\"http://en.wikipedia.org/wiki/Memoization\">memoizing</a> versions of functions</li>\n</ol>\n\n<h2>Steps to a more comprehensive understanding</h2>\n\n<p></p>\n<center><a href=\"https://www.youtube.com/watch?v=0zVizaCOhME\" target=\"_blank\"><img src=\"http://i.imgur.com/rVB9MxX.png\" border=\"0\" style=\"width:450;\"></a></center>\n\n<ol>\n<li>Spend a bit of time and skip around this two-hour long <a href=\"https://www.youtube.com/watch?v=0zVizaCOhME\">Google Tech Talk on the implementation of Closures for Java</a>. While a bit long, it does an excellent job of covering features of closures and considerations in implementation (and has some awesome picture-in-picture video effects). Otherwise, <a href=\"http://faculty.cs.gwu.edu/%7Eclarkson/courses/csci4223/2013sp/lec/lec12.pdf\">these lecture notes from a GW course on programming languages</a> provide a nice explanation of closures in Standard ML. I couldn't find a suitable lecture video on closures this week—if anyone finds one, let me know <a href=\"http://twitter.com/interviewcoding\">@interviewcoding</a> and I'll retweet it.</li>\n<li>Take a look at the <a href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29\">Wikipedia article on Closures</a> and, if you're especially interested, this comp.lang.javascript <a href=\"http://jibbering.com/faq/notes/closures/\">description of closure implementation in ECMAScript (Javascript)</a>. The Wikipedia article's section on <a href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29#Closure_leaving\">closure-leaving</a> highlights some key differences between languages. The section on closure-like constructs highlights <a href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29#Closure-like_constructs\">some disgusting things</a> you can do to emulate full closures.</li>\n<li>If you have some <strong>Javascript</strong> experience, read through Nathaniel's closure <a href=\"http://frontendcoder.wordpress.com/2013/01/29/learning-javascript-via-interview-questions-closures/\">interview question</a> again to confirm you understand the block scoping issue and workaround. If you're more of a <strong>Ruby-ist</strong>, <a href=\"http://innig.net/software/ruby/closures-in-ruby\">this sample code</a> will illustrate some of the finer points of scope in Ruby.</li>\n</ol>\n\n<h1>Problem of the week - Reversed Are Words These</h1>\n\n<p>This problem is a simpler one, so you can give it a shot <em>right now</em>. Write a function which, given a sentence like this:</p>\n\n<pre><code>    Coding for Interviews contains too many gifs.\n</code></pre>\n\n<p>Returns the sentence with the order of the words reversed, like so:</p>\n\n<pre><code>    gifs. many too contains Interviews for Coding\n</code></pre>\n\n<p>The catch is: your function should use <code>O(1)</code> space. <em>What is your algorithm's time complexity?</em></p>\n\n<p>If you get stuck, you can find a solution in <a href=\"http://amzn.com/1479274836?tag=a202-20\">Elements of Programming Interviews</a> page 197.</p>\n\n<p>Since this is a simpler problem, <strong>submit by next Tuesday</strong>. I will send out a short update issue with your solutions and <strong>another problem</strong> (and save the next topic review for the following week).</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/10", tag_id: nil},
  {name: "Issue 11: Practice Resources", content: "", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/11", tag_id: nil},
  {name: "Issue 12: Problem: Max Consecutive Sum", content: "", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/12", tag_id: nil},
  {name: "Issue 13: Problem: Spiral Matrix Traversal", content: "\n\n<p>This week's question is kind of like this:</p>\n\n<p><img src=\"http://i.imgur.com/9oIJ6Kh.gif\" alt=\"\"></p>\n\n<p>Or this:</p>\n\n<p><img src=\"http://i.imgur.com/pKny60a.gif\" alt=\"\"></p>\n\n<p>This question is <a href=\"https://github.com/blakeembrey/code-problems/tree/master/problems/spiral\">courtesy of Blake Embrey</a>'s wonderful GitHub repository of code problems (and solutions, but no cheating!)</p>\n\n<h1>Spiral</h1>\n\n<p>Write a function that accepts four arguments. The first two arguments are the size of the grid (<em>h x w</em>), filled with ascending integers from left to right, top to bottom, starting from 1. The next two arguments are is the starting positions, the row (<em>r</em>) and column (<em>c</em>).</p>\n\n<p>Return an array of integers obtained by spiraling outward anti-clockwise from the <em>r</em> and <em>c</em>, starting upward.</p>\n\n<pre><code>f(5, 5, 3, 3)\n\n// Should return: \n// [ 13, 8, 7, 12, 17, 18, 19,\n// 194, 9, 4, 3, 2, 1, 6,\n// 11, 16, 21, 22, 23, 24,\n// 25, 20, 15, 10, 5 ]\n\nf(2, 4, 1, 2) // [ 2, 1, 5, 6, 7, 3, 8, 4 ]\n</code></pre>\n\n<p>The following graphics show the grid in question and the spiral generated, beginning at cell (3, 3).</p>\n\n<p><img src=\"http://i.imgur.com/jR8s2An.png\" alt=\"Grid 1\"></p>\n\n<p><img src=\"http://i.imgur.com/CuTJMwv.png\" alt=\"Grid 2\"></p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/13", tag_id: nil},
  {name: "Issue 14: Problem: Level-order Print", content: "\n\n<p>The king of level-order tree traversal:</p>\n\n<p><img src=\"http://i.imgur.com/LCEqgYE.gif\"></p>\n\n<p><img src=\"http://i.imgur.com/oOd4cua.gif\"></p>\n\n<p>In a past week we covered <strong>The Big Three</strong> tree traversals: <strong>pre-order</strong>, <strong>in-order</strong> and <strong>post-order</strong>. But this week's traversal is fairly common, too—and often <a href=\"http://www.careercup.com/question?id=8635794\">shows up</a> in <a href=\"http://stackoverflow.com/questions/5567102/how-to-print-a-binary-tree-level-by-level-interview-question\">interviews</a>.</p>\n\n<p>This week's question is to <strong>print a binary tree of integers in level order</strong>.</p>\n\n<p>Level-order printing means printing each row of the tree from left to right, from root row to the deepest row. After each row, print a newline.</p>\n\n<p>For example:</p>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/rzqZghF.png\" width=\"450/\"></center>\n\n<p><strong>Bonus</strong>: Can you make one version that supports binary trees, and another that can handle <em>any <a href=\"http://en.wikipedia.org/wiki/K-ary_tree\">K-ary tree</a></em>?</p>\n\n<p><strong>Double karma bonus</strong>: Can you submit your solution to <a href=\"https://github.com/blakeembrey/code-problems/tree/master/problems/tree-level-order-print\">this problem's entry</a> in Blake Embrey's code problems repository?</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/14", tag_id: nil},
  {name: "Issue 15: Problem: 8 Queens", content: "\n\n<p><img src=\"http://i.imgur.com/BVCAYEx.gif\" alt=\"\"></p>\n\n<p><img src=\"http://upload.wikimedia.org/wikipedia/commons/1/1f/Eight-queens-animation.gif\" alt=\"\"></p>\n\n<p>This week's question has been spotted <a href=\"http://www.careercup.com/question?id=13014684\">at Google</a>, <a href=\"http://www.careercup.com/question?id=2407\">Qualcomm</a>, and functional programming courses all over.</p>\n\n<p>The problem is to collect all solutions to <strong>the 8 queens problem</strong>.</p>\n\n<h2>Wait, what?</h2>\n\n<p><strong>What is chess?</strong> <a href=\"http://en.wikipedia.org/wiki/Chess\">See Wikipedia</a> (\"A two-player strategy board game played on a checkered gameboard with 64 squares arranged in an 8x8 grid\")</p>\n\n<p><strong>What is a queen?</strong> The queen is arguably the most powerful piece in chess. It can move and capture pieces diagonally, vertically and horizontally at any distance.</p>\n\n<p><strong>What is the 8 queens problem?</strong> The 8 queens problem is to find a set of placements for 8 queens on an 8x8 chessboard where <strong>none of the queens could capture each other</strong> in one move.</p>\n\n<p><strong>What is the N queens problem?</strong> The N queens problem is the more general version of the 8 queens problem (an NxN board and N pieces).</p>\n\n<p><a href=\"http://www.brainmetrix.com/8-queens/\">Try placing 8 queens yourself here</a> (the best I have gotten is 7!)</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=V4qSux-M8N4\">Watch a neat 3D problem solution animation</a></p>\n\n<p><a href=\"http://www.durangobill.com/N_Queens.html\">See a table of the number of solutions for various Ns</a></p>\n\n<h2>What should my solution look like?</h2>\n\n<p>Example signature:</p>\n\n<pre><code>/**\n  * Returns nested array of valid placements\n  * Solutions (list) # -&gt; Columns (list) -&gt;\n  * Queen placed on row # (int)\n  */\npublic static int[][] getPlacements(int n)\n</code></pre>\n\n<p>E.g., my solution's placements for 8 queens, or getPlacements(8):</p>\n\n<pre><code>Number of placements is 92\nPlacement 0: [0, 4, 7, 5, 2, 6, 1, 3]\nPlacement 1: [0, 5, 7, 2, 6, 3, 1, 4]\nPlacement 2: [0, 6, 3, 5, 7, 1, 4, 2]\nPlacement 3: [0, 6, 4, 7, 1, 3, 5, 2]\nPlacement 4: [1, 3, 5, 7, 2, 0, 6, 4]\nPlacement 5: [1, 4, 6, 0, 2, 7, 5, 3]\nPlacement 6: [1, 4, 6, 3, 0, 7, 5, 2]\n...\n</code></pre>\n\n<p><strong>Bonus</strong>: can you make an <strong>awesome web visualization</strong> of your solver? Since everyone loves visualizations, best visualization <strong>wins free access codes to the CFI archive</strong>!</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/15", tag_id: nil},
  {name: "Issue 16: Bit Manipulation", content: "\n\n<p>This week's exercise is to write two bit manipulation helper functions <strong>using only bitwise + bit shift operators</strong>:</p>\n\n<pre><code>public static boolean getBit(int number, int index)\n\npublic static int setBit(int number, int index, boolean set)\n</code></pre>\n\n<p><strong>Note: indices in binary representations start from the right hand side.</strong></p>\n\n<p><em>Get Bit</em> returns whether the bit at a given index is set (a 1 in binary representation).</p>\n\n<p><em>Set Bit</em> modifies the integer <code>number</code> by making the bit at <code>index</code> set (1) or clear (0).</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/16", tag_id: nil},
  {name: "Issue 17: Reading Standard Libraries", content: "\n\n<p>This week's problem is to write an email validator. Given an email address, your solution should verify whether it is, indeed, a <a href=\"http://en.wikipedia.org/wiki/Email_address\">valid email address</a>.</p>\n\n<p>Sample function signature:</p>\n\n<pre><code>bool isValidEmailAddress(String emailAddress)\n</code></pre>\n\n<p><a href=\"https://www.codeeval.com/open_challenges/35/\">Test your solution out on CodeEval</a>—if you go this route, your solution will be slightly different—reading emails from STDIN. Sneaky trick from a CFI member to grab the test cases, <em>with CodeEval the trick is to write code that just prints out all the lines in sys.stdin</em></p>\n\n<p>You may choose to use a regular expression for this (<a href=\"http://amzn.com/0596528124?tag=a200-20\">here's my favorite book on the topic</a>, <a href=\"http://regexlib.com/CheatSheet.aspx\">here's a solid cheat sheet</a>, and here's the magnificent Zed Shaw's <a href=\"http://regex.learncodethehardway.org/book/\">Learn Regex the Hard Way</a>).</p>\n\n<p>Some sample valid email addresses (<a href=\"http://en.wikipedia.org/wiki/Email_address#Valid_email_addresses\">via Wikipedia</a>):</p>\n\n<ul>\n<li>niceandsimple@example.com</li>\n<li>very.common@example.com</li>\n<li>a.little.lengthy.but.fine@dept.example.com</li>\n</ul>\n\n<p>And invalid:</p>\n\n<ul>\n<li>Abc.example.com</li>\n<li>A@b@c@example.com</li>\n</ul>\n\n<p>Can your solution handle some weirder, technically valid ones?</p>\n\n<ul>\n<li>disposable.style.email.with+symbol@example.com</li>\n<li>postbox@com (top-level domains are valid hostnames)</li>\n<li>admin@mailserver1 (local domain name with no TLD)</li>\n<li>\"()&lt;&gt;[]:,;@\\\\\"!\#$%&amp;'*+-/=?^_`{}| ~.a\"@example.org (normally disallowed special characters are allowed within double quotation marks, and double quotation marks can be escaped...)</li>\n</ul>\n\n<p></p>\n<center><img src=\"http://i.imgur.com/7E2gjkD.gif\"></center>\n\n<p>Give it a shot, see how far you can get in 30 minutes. Email validation can be trickier than you might expect!</p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/17", tag_id: nil},
  {name: "Issue 18: Dynamic Programming", content: "\n\n<p></p>\n<center><img src=\"http://i.imgur.com/ArrTEFx.gif\" width=\"250/\"></center>\n\n<p>Talking with group members who successfully got jobs at Google, Amazon and Microsoft about the most important things they did to prepare, one thing that stood out was that they kept track of the problems they failed at while practicing and after interviews. <a href=\"http://amzn.com/098478280X?tag=a200-20\">Cracking the Coding Interview</a>'s timeline and preparation map also notes: \"Create a list to track mistakes you've made solving problems\". It's important to hammer on your blind spots to improve your interview prospects.</p>\n\n<h3>A tough topic</h3>\n\n<p>For a handful of group members I spoke with during mentorship calls, a particularly difficult topic to improve on has been <strong>Dynamic Programming</strong>. While putting together the Coding for Interviews course (<a href=\"https://www.udemy.com/programming-code-interview/?couponCode=MEMBER-JAN-2014\">list member discount <strong>MEMBER-JAN-2014</strong></a> valid until the   end of January), this was one of the toughest topics to write about—it's a problem approach strategy I've struggled to become proficient with myself.</p>\n\n<p>Don't be too scared by the name—the term \"dynamic programming\" was <a href=\"http://courses.cs.vt.edu/%7Ecs4104/murali/Fall09/lectures/lecture-15-dynamic-programming.pdf\">invented in the 1950s</a> to make the topic sound impressive during a defense administration hostile to mathematical research. <em>Dynamic programming</em> was considered a term \"not even a Congressman could object to\"—because \"it's impossible to use <em>dynamic</em> in a pejorative sense\".</p>\n\n<p><strong>The good news</strong> is that, like bit manipulation problems, dynamic programming problems show up fairly rarely in interiews because of how difficult and time consuming they can be to solve, code up and test. <em>The bad news</em> is that sometimes you'll get these questions asked anyway.</p>\n\n<h3>Learning it</h3>\n\n<p>While I perused a number of dynamic programming tutorials and university lectures and notes on dynamic programming, I found that (1) <strong>writing</strong> about dynamic programming and (2) <strong>trying dynamic programming practice problems</strong> were the most effective activities I did to get better at approaching DP problems.</p>\n\n<p>So let's get that done right now!</p>\n\n<h2>Dynamic programming: a hands-on approach</h2>\n\n<ol>\n<li>Research and read up on dynamic programming while doing activity #2 below. <a href=\"http://codingforinterviews.com/dppdf\">Here's your <strong>free copy of the DP cheat sheet</strong></a> (<a href=\"http://codingforinterviews.com/dp\">scribd</a>) I've written to post to the Coding for Interviews Udemy course (which you can join with <a href=\"https://www.udemy.com/programming-code-interview/?couponCode=MEMBER-JAN-2014\">list member discount <strong>MEMBER-JAN-2014</strong></a>)</li>\n<li>In a <a href=\"http://gist.github.com\">gist</a> using Markdown, write your own \"explain it like I'm 5\" description of dynamic programming. Guiding questions: (1) <strong>what is dynamic programming?</strong> (2) how can you <strong>recognize</strong> a dynamic programming problem? (3) <strong>how do you solve</strong> a dynamic programming problem?</li>\n<li>Solve and submit your solution to <strong>this week's dynamic programming practice problem</strong>\n</li>\n</ol>\n\n<h1>This week's challenge: Making Change</h1>\n\n<p></p>\n<center><img style=\"width:100;\" src=\"http://i.imgur.com/bOB1IVI.jpg\"></center>\n\n<p>This week's problem (<a href=\"https://github.com/codingforinterviews/practice-problems/tree/master/coin_change\">github</a>, <a href=\"https://www.hackerrank.com/contests/programming-interview-questions/challenges/coin-change\">CFI HackerRank</a>) is to enumerate <strong>how many ways a given list of coins can be used</strong> to make change for a given cash amount (in cents).</p>\n\n<p>So, for example, given the amount <code>4</code>(¢) and coins of values <code>[1, 2, 3]</code> (1¢, 2¢ and 3¢), your program would output <strong><code>4</code></strong>—the count of the four solutions:</p>\n\n<ol>\n<li>1¢, 1¢, 1¢, 1¢</li>\n<li>1¢, 1¢, 2¢</li>\n<li>1¢, 3¢</li>\n<li>2¢, 2¢</li>\n</ol>\n\n<p>Sample function signature: <code>public int coinChangePossibleSolutions(int amount, int[] denominations)</code></p>\n\n<p><a href=\"https://www.hackerrank.com/contests/programming-interview-questions/challenges/coin-change\">Try this problem out on the Coding for Interviews HackerRank section</a>.</p>\n\n<p><em>Special thanks to CFI problem team members Alan, Asim and Austin for writing and reviewing practice problems.</em></p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/18", tag_id: nil},
  {name: "Issue 19: Programming Language Paradigms", content: "\n\n<p></p>\n<center><img src=\"http://i.imgur.com/JPROc9B.png\" width=\"400/\"></center>\n\n<p>Programming language questions often come up during the technical chit-chat quizzing portions of interviews. Some common questions you'll hear:</p>\n\n<ol>\n<li>\n<strong>What do you like</strong> about your programming language? What <em>don't</em> you like about it?</li>\n<li>\n<em>Compare and contrast</em> language X with language Y.</li>\n<li>What's the difference in how inheritance is implemented in Java and Javascript?</li>\n</ol>\n\n<p>Especially for more experienced candidates out there who have a few programming languages listed on their resume, it's worthwhile to mentally place your favorite programming language among other languages out there.</p>\n\n<p></p>\n<center><a href=\"https://en.wikipedia.org/wiki/List_of_multi-paradigm_programming_languages\"><img src=\"http://i.imgur.com/RYYAPRe.png\" width=\"200/\"></a></center>\n\n<p><a href=\"https://en.wikipedia.org/wiki/List_of_multi-paradigm_programming_languages\">Programming language paradigms</a> are ways of categorizing the features and shared attributes of various programming languages. Most languages are considered multi-paradigm, in that they support multiple styles of programming.</p>\n\n<h1>This week's challenge: The Big 3 Language Questions</h1>\n\n<ul>\n<li>Research and read up on the main programming language paradigms while writing answers to the questions below. Here's a <strong><a href=\"http://codingforinterviews.com/paradigmspdf\">free copy of the programming language paradigms cheat sheet</a></strong> (<a href=\"http://www.scribd.com/doc/204669540/Free-Programming-Language-Paradigms-Cheat-Sheet\">scribd</a>) from the <a href=\"http://codingforinterviews.com/course\">Coding for Interviews Udemy course</a>\n</li>\n<li>In a <a href=\"http://gist.github.com\">gist</a> using Markdown, write up answers to the following questions:</li>\n</ul>\n\n<ol>\n<li>What do you like about your most often used programming language?</li>\n<li>What <em>don't</em> you like about it, and why?</li>\n<li>What paradigms does your language support?</li>\n</ol>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/19", tag_id: nil},
  {name: "Issue 20: Breadth-First Search", content: "\n\n<p>Breadth-first search is a tree traversal algorithm that visits the nodes of a tree <strong>level by level</strong>, increasing the depth after each row's traversal.</p>\n\n<h2>What is BFS used for?</h2>\n\n<p>You'll come across BFS in a few common situations—</p>\n\n<ol>\n<li>finding the <strong>shortest path</strong> between two nodes in a graph—like LinkedIn finding the friends-of-friends.</li>\n<li>\n<strong>filesystem traversal</strong>—while UNIX find is a pre-order depth-first search, some prefer breadth-first for faster searches in certain situations (<a href=\"https://groups.google.com/forum/#!topic/gnu.emacs.sources/cpetntP4Ziw\">like this Emacs-er from 1999</a>)</li>\n<li>generally <strong>printing hierarchies</strong> in rank-order... e.g., if you wanted to print a tree of military officers by their level in the rank hierarchy</li>\n</ol>\n\n<h2>What does it look like?</h2>\n\n<p><a href=\"http://www.youtube.com/watch?v=Ug2hLQv6WeY\">Pop quiz, hot-shot</a>! You have a tree. And your task is to verbally breadth-first traverse it. What do you do?</p>\n\n<p><img src=\"http://i.imgur.com/CdYi6qm.png\"></p>\n\n<p>Well, a breadth-first printing of the tree would be <code>1 2 3 4 5</code>. Each row, you visit the nodes from left to right.</p>\n\n<h2>How do you perform a BFS?</h2>\n\n<p>When you’re performing a breadth-first traversal, you need some sort of way to keep track of where you’ve been (otherwise, looking at a given node, you wouldn’t know which node to visit next).</p>\n\n<p>One way is to <strong>use a queue</strong> to maintain a list of nodes to visit next, remove the nodes and their add children to the end of the queue as you visit them.</p>\n\n<p>The general steps:</p>\n\n<ol>\n<li>\n<strong>Add the root node</strong> to the queue</li>\n<li>While there are still any nodes in the queue:\n\n<ul>\n<li>\n<strong>Remove and visit</strong> the front node in the queue</li>\n<li>\n<strong>Add</strong> each of the current node's <strong>children</strong> to the queue</li>\n</ul>\n</li>\n</ol>\n\n<p>Here's an animated version (from <a href=\"http://en.wikipedia.org/wiki/Breadth-first_search\">Wikipedia on BFS</a>)—<strong><font color=\"gray\">gray nodes</font></strong> are the ones remaining in the queue. <strong>Black nodes</strong> are the ones which have been visited.</p>\n\n<p><img src=\"http://i.imgur.com/dkdJzSx.gif\"></p>\n\n<h3>BFS -&gt; DFS with just one swap</h3>\n\n<p>If you <strong>swap out the queue</strong> in that algorithm <strong>for a stack</strong>, you'd get a depth-first search. Can you wrap your head around why that is?</p>\n\n<h3>In graphs to avoid cycles</h3>\n\n<p>Unlike trees, graphs can have <strong>cycles</strong>—paths from a given node around to itself. When you're performing a breadth-first search of a graph, you will want to avoid getting caught up in these cycles, as they can cause the algorithm to never terminate (though, unlike depth-first searches, it will continue to traverse the entire graph).</p>\n\n<p>To counter this, a common approach is to <strong>mark visited graph nodes</strong> as you go along and ignore them when encountered later. This marking can be done either as an attribute on the node or by maintaining a set of visited nodes.</p>\n\n<h1>This week's challenge: The Sta<i>queue</i>\n</h1>\n\n<p>This week's challenge—not directly related to BFS—is to <strong>implement a queue using two stacks</strong>.</p>\n\n<p><em>Queues</em> are a <strong>first-in-first-out</strong> data structure that we just saw used as a \"next to visit\" data store in breadth-first search.</p>\n\n<p><em>Stacks</em> are a <strong>last-in-first-out</strong> data structure used in depth-first search, and can often be used to implement recursive algorithms iteratively (because the call stack is, itself, a stack).</p>\n\n<p>For this problem, you are to create a queue using two stacks. So your <code>Queue</code> will support the operations:</p>\n\n<ul>\n<li>\n<code>enqueue(item)</code>, which inserts an item into the queue</li>\n<li>\n<code>dequeue()</code>, which removes and returns the oldest item in the queue</li>\n</ul>\n\n<p>Your two <code>Stack</code>s (which your programming language may have available already, otherwise you can create your own pretty easily) have the following operations:</p>\n\n<ul>\n<li>\n<code>push(item)</code>, which inserts an item at the top of the stack</li>\n<li>\n<code>pop()</code>, which removes and returns the top item of the stack</li>\n</ul>\n\n<p>Let's say we just tried using one stack as a queue, pushing instead of enqueueing:</p>\n\n<p><img src=\"http://i.imgur.com/WwEoOmI.gif\" width=\"200/\"></p>\n\n<p>Not so easy! (BTW—we'll see the wonderful source of these animations with next week's solutions).</p>\n\n<p><strong>Can you figure out a way to make a queue using two stacks?</strong> Give it a shot, if you get stuck, try drawing some pictures or working through sample inputs with your work-in-progress. Good luck!</p>\n\n<p><strong>Time complexity</strong>: what is the time complexity of your solution? An <code>O(m)</code> solution is possible, where <code>m</code> is the number of enqueue and dequeue operations performed. Can you figure one out? Hint—does it matter if an operation is expensive the first time you do it, and then really cheap afterwards?</p>\n\n<p><strong>Bonus points</strong> for solutions with visualizations!</p>\n\n<p><strong>Extra bonus followup</strong>: Use your fancy new <code>Queue</code> to hold integers, but now add an <code>O(1)</code> time <code>getMinimum</code> operation, which returns the smallest integer in the queue. What are the extra space requirements for this operation?</p>\n\n<p><em>Thanks to group members Asim Ihsan, Andrew Yates and Greg Jordan for their feedback on this issue!</em></p>\n\n", user_id: nil, difficulty: "", link: "http://codingforinterviews.com/archive/paradigmsareconstructed@gmail.com-1bc404/issue/20", tag_id: nil},
  {name: "Lowest common Ancestor (http://www.geeksforgeeks.org/lowest-common-ancestor-binary-tree-set-1/)", content: "1) Lowest common Ancestor (http://www.geeksforgeeks.org/lowest-common-ancestor-binary-tree-set-1/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: " A unsorted array of integers is given; you need to find the max product formed my multiplying three numbers.   (You cannot sort the array, watch out when there are negative numbers)", content: "2)  A unsorted array of integers is given; you need to find the max product formed my multiplying three numbers.   (You cannot sort the array, watch out when there are negative numbers)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Left View of a tree (http://www.geeksforgeeks.org/print-left-view-binary-tree/)", content: "3) Left View of a tree (http://www.geeksforgeeks.org/print-left-view-binary-tree/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Reversing of Arrays (http://www.geeksforgeeks.org/write-a-program-to-reverse-an-array/)", content: "4) Reversing of Arrays (http://www.geeksforgeeks.org/write-a-program-to-reverse-an-array/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Cache Line, Cache internal concept, RR scheduling", content: "5) Cache Line, Cache internal concept, RR scheduling", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Print the middle of a given linked list (http://www.geeksforgeeks.org/write-a-c-function-to-print-the-middle-of-the-linked-list/)", content: "6) Print the middle of a given linked list (http://www.geeksforgeeks.org/write-a-c-function-to-print-the-middle-of-the-linked-list/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Pair wise swap of elements in linked list (http://www.geeksforgeeks.org/pairwise-swap-elements-of-a-given-linked-list/)", content: "7) Pair wise swap of elements in linked list (http://www.geeksforgeeks.org/pairwise-swap-elements-of-a-given-linked-list/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "HashMap internals (http://javarevisited.blogspot.in/2011/02/how-hashmap-works-in-java.html)", content: "8) HashMap internals (http://javarevisited.blogspot.in/2011/02/how-hashmap-works-in-java.html)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Double checking Singleton (http://javarevisited.blogspot.in/2014/05/double-checked-locking-on-singleton-in-java.html) ", content: "9) Double checking Singleton (http://javarevisited.blogspot.in/2014/05/double-checked-locking-on-singleton-in-java.html) ", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Factory Pattern (http://javarevisited.blogspot.in/2011/12/factory-design-pattern-java-example.html)", content: "10) Factory Pattern (http://javarevisited.blogspot.in/2011/12/factory-design-pattern-java-example.html)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Print a given matrix in spiral form (http://www.geeksforgeeks.org/print-a-given-matrix-in-spiral-form/)", content: "11) Print a given matrix in spiral form (http://www.geeksforgeeks.org/print-a-given-matrix-in-spiral-form/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "DFS on Graph and its representation (http://www.geeksforgeeks.org/graph-and-its-representations/, http://ideone.com/TA4ldc)", content: "12) DFS on Graph and its representation (http://www.geeksforgeeks.org/graph-and-its-representations/, http://ideone.com/TA4ldc)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Object Oriented concept, Polymorphism , Method overloading, method overriding, Difference between abstraction and encapsulation, Aggregation and Composition", content: "13) Object Oriented concept, Polymorphism , Method overloading, method overriding, Difference between abstraction and encapsulation, Aggregation and Composition", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Print nth last node in linked list", content: "14) Print nth last node in linked list", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Delete a given node in Linked List under given constraints (http://www.geeksforgeeks.org/delete-a-given-node-in-linked-list-under-given-constraints/)", content: "15) Delete a given node in Linked List under given constraints (http://www.geeksforgeeks.org/delete-a-given-node-in-linked-list-under-given-constraints/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Implement Stack using Queues(http://www.geeksforgeeks.org/implement-stack-using-queue/)", content: "16) Implement Stack using Queues(http://www.geeksforgeeks.org/implement-stack-using-queue/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Find if two rectangles overlap (http://www.geeksforgeeks.org/find-two-rectangles-overlap/)", content: "17) Find if two rectangles overlap (http://www.geeksforgeeks.org/find-two-rectangles-overlap/)", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Multithreading concepts", content: "18) Multithreading concepts", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Given an array of integers, update the index with multiplication of previous and next integers,\n", content: "19) Given an array of integers, update the index with multiplication of previous and next integers,\n<pre>\r\n   e.g. Input: 2 , 3, 4, 5, 6\r\n        Output: 2*3, 2*4, 3*5, 4*6, 5*6 </pre>", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Difference of creating threads in Java using Thread and Runnable ", content: "20) Difference of creating threads in Java using Thread and Runnable ", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "How hashset is implemented in Java internally.", content: "21) How hashset is implemented in Java internally.", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "DeadLock example code (Producer & Consumer Code) ", content: "22) DeadLock example code (Producer & Consumer Code) ", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Find the number which is not repeated in Array of integers, others are present for two times.\n", content: "23) Find the number which is not repeated in Array of integers, others are present for two times.\n<pre>\r\ne.g. Input : 23, 34,56,21,21,56,78,23, 34\t\t\r\n\t Output: 23\r\n\t Hint: USE XOR </pre>", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Serialization and related concepts.", content: "24) Serialization and related concepts.", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "Comparators in TreeSet", content: "25) Comparators in TreeSet", user_id: nil, difficulty: "", link: "http://www.geeksforgeeks.org/top-25-interview-questions/", tag_id: nil},
  {name: "What did you learn yesterday/this week?", content: "What did you learn yesterday/this week?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What excites or interests you about coding?", content: "What excites or interests you about coding?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is a recent technical challenge you experienced and how did you solve it?", content: "What is a recent technical challenge you experienced and how did you solve it?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What UI, Security, Performance, SEO, Maintainability or Technology considerations do you make while building a web application or site?", content: "What UI, Security, Performance, SEO, Maintainability or Technology considerations do you make while building a web application or site?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Talk about your preferred development environment.", content: "Talk about your preferred development environment.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Which version control systems are you familiar with?", content: "Which version control systems are you familiar with?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Can you describe your workflow when you create a web page?", content: "Can you describe your workflow when you create a web page?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "If you have 5 different stylesheets, how would you best integrate them into the site?", content: "If you have 5 different stylesheets, how would you best integrate them into the site?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Can you describe the difference between progressive enhancement and graceful degradation?", content: "Can you describe the difference between progressive enhancement and graceful degradation?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How would you optimize a website's assets/resources?", content: "How would you optimize a website's assets/resources?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How many resources will a browser download from a given domain at a time?\n\n\nWhat are the exceptions?\n\n", content: "How many resources will a browser download from a given domain at a time?\n\n\nWhat are the exceptions?\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Name 3 ways to decrease page load (perceived or actual load time).", content: "Name 3 ways to decrease page load (perceived or actual load time).", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "If you jumped on a project and they used tabs and you used spaces, what would you do?", content: "If you jumped on a project and they used tabs and you used spaces, what would you do?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe how you would create a simple slideshow page.", content: "Describe how you would create a simple slideshow page.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "If you could master one technology this year, what would it be?", content: "If you could master one technology this year, what would it be?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain the importance of standards and standards bodies.", content: "Explain the importance of standards and standards bodies.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is Flash of Unstyled Content? How do you avoid FOUC?", content: "What is Flash of Unstyled Content? How do you avoid FOUC?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain what ARIA and screenreaders are, and how to make a website accessible.", content: "Explain what ARIA and screenreaders are, and how to make a website accessible.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain some of the pros and cons for CSS animations versus JavaScript animations.", content: "Explain some of the pros and cons for CSS animations versus JavaScript animations.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What does a doctype do?", content: "What does a doctype do?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between standards mode and quirks mode?", content: "What's the difference between standards mode and quirks mode?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between HTML and XHTML?", content: "What's the difference between HTML and XHTML?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Are there any problems with serving pages as application/xhtml+xml?", content: "Are there any problems with serving pages as application/xhtml+xml?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How do you serve a page with content in multiple languages?", content: "How do you serve a page with content in multiple languages?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What kind of things must you be wary of when design or developing for multilingual sites?", content: "What kind of things must you be wary of when design or developing for multilingual sites?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are data- attributes good for?", content: "What are data- attributes good for?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Consider HTML5 as an open web platform. What are the building blocks of HTML5?", content: "Consider HTML5 as an open web platform. What are the building blocks of HTML5?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe the difference between a cookie, sessionStorage and localStorage.", content: "Describe the difference between a cookie, sessionStorage and localStorage.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe the difference between <script>, <script async> and <script defer>.", content: "Describe the difference between <script>, <script async> and <script defer>.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Why is it generally a good idea to position CSS <link>s between <head></head> and JS <script>s just before </body>? Do you know any exceptions?", content: "Why is it generally a good idea to position CSS <link>s between <head></head> and JS <script>s just before </body>? Do you know any exceptions?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is progressive rendering?", content: "What is progressive rendering?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Have you used different HTML templating languages before?", content: "Have you used different HTML templating languages before?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is the difference between classes and ID's in CSS?", content: "What is the difference between classes and ID's in CSS?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between \"resetting\" and \"normalizing\" CSS? Which would you choose, and why?", content: "What's the difference between \"resetting\" and \"normalizing\" CSS? Which would you choose, and why?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe Floats and how they work.", content: "Describe Floats and how they work.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe z-index and how stacking context is formed.", content: "Describe z-index and how stacking context is formed.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe BFC(Block Formatting Context) and how it works.", content: "Describe BFC(Block Formatting Context) and how it works.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are the various clearing techniques and which is appropriate for what context?", content: "What are the various clearing techniques and which is appropriate for what context?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain CSS sprites, and how you would implement them on a page or site.", content: "Explain CSS sprites, and how you would implement them on a page or site.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are your favourite image replacement techniques and which do you use when?", content: "What are your favourite image replacement techniques and which do you use when?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How would you approach fixing browser-specific styling issues?", content: "How would you approach fixing browser-specific styling issues?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How do you serve your pages for feature-constrained browsers?\n\n\nWhat techniques/processes do you use?\n\n", content: "How do you serve your pages for feature-constrained browsers?\n\n\nWhat techniques/processes do you use?\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are the different ways to visually hide content (and make it available only for screen readers)?", content: "What are the different ways to visually hide content (and make it available only for screen readers)?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Have you ever used a grid system, and if so, what do you prefer?", content: "Have you ever used a grid system, and if so, what do you prefer?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Have you used or implemented media queries or mobile specific layouts/CSS?", content: "Have you used or implemented media queries or mobile specific layouts/CSS?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Are you familiar with styling SVG?", content: "Are you familiar with styling SVG?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How do you optimize your webpages for print?", content: "How do you optimize your webpages for print?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are some of the \"gotchas\" for writing efficient CSS?", content: "What are some of the \"gotchas\" for writing efficient CSS?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are the advantages/disadvantages of using CSS preprocessors?\n\n\nDescribe what you like and dislike about the CSS preprocessors you have used.\n\n", content: "What are the advantages/disadvantages of using CSS preprocessors?\n\n\nDescribe what you like and dislike about the CSS preprocessors you have used.\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How would you implement a web design comp that uses non-standard fonts?", content: "How would you implement a web design comp that uses non-standard fonts?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain how a browser determines what elements match a CSS selector.", content: "Explain how a browser determines what elements match a CSS selector.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe pseudo-elements and discuss what they are used for. ", content: "Describe pseudo-elements and discuss what they are used for. ", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain your understanding of the box model and how you would tell the browser in CSS to render your layout in different box models.", content: "Explain your understanding of the box model and how you would tell the browser in CSS to render your layout in different box models.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What does * { box-sizing: border-box; } do? What are its advantages?", content: "What does * { box-sizing: border-box; } do? What are its advantages?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "List as many values for the display property that you can remember.", content: "List as many values for the display property that you can remember.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between inline and inline-block?", content: "What's the difference between inline and inline-block?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between a relative, fixed, absolute and statically positioned element?", content: "What's the difference between a relative, fixed, absolute and statically positioned element?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "The 'C' in CSS stands for Cascading.  How is priority determined in assigning styles (a few examples)?  How can you use this system to your advantage?", content: "The 'C' in CSS stands for Cascading.  How is priority determined in assigning styles (a few examples)?  How can you use this system to your advantage?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What existing CSS frameworks have you used locally, or in production? How would you change/improve them?", content: "What existing CSS frameworks have you used locally, or in production? How would you change/improve them?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Have you played around with the new CSS Flexbox or Grid specs?", content: "Have you played around with the new CSS Flexbox or Grid specs?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How is responsive design different from adaptive design?", content: "How is responsive design different from adaptive design?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Have you ever worked with retina graphics? If so, when and what techniques did you use?", content: "Have you ever worked with retina graphics? If so, when and what techniques did you use?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Is there any reason you'd want to use translate() instead of absolute positioning, or vice-versa? And why?", content: "Is there any reason you'd want to use translate() instead of absolute positioning, or vice-versa? And why?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain event delegation", content: "Explain event delegation", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain how this works in JavaScript", content: "Explain how this works in JavaScript", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain how prototypal inheritance works", content: "Explain how prototypal inheritance works", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What do you think of AMD vs CommonJS?", content: "What do you think of AMD vs CommonJS?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain why the following doesn't work as an IIFE: function foo(){ }();.\n\n\nWhat needs to be changed to properly make it an IIFE?\n\n", content: "Explain why the following doesn't work as an IIFE: function foo(){ }();.\n\n\nWhat needs to be changed to properly make it an IIFE?\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between a variable that is: null, undefined or undeclared?\n\n\nHow would you go about checking for any of these states?\n\n", content: "What's the difference between a variable that is: null, undefined or undeclared?\n\n\nHow would you go about checking for any of these states?\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is a closure, and how/why would you use one?", content: "What is a closure, and how/why would you use one?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's a typical use case for anonymous functions?", content: "What's a typical use case for anonymous functions?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How do you organize your code? (module pattern, classical inheritance?)", content: "How do you organize your code? (module pattern, classical inheritance?)", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between host objects and native objects?", content: "What's the difference between host objects and native objects?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Difference between: function Person(){}, var person = Person(), and var person = new Person()?", content: "Difference between: function Person(){}, var person = Person(), and var person = new Person()?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between .call and .apply?", content: "What's the difference between .call and .apply?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain Function.prototype.bind.", content: "Explain Function.prototype.bind.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "When would you use document.write()?", content: "When would you use document.write()?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between feature detection, feature inference, and using the UA string?", content: "What's the difference between feature detection, feature inference, and using the UA string?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain AJAX in as much detail as possible.", content: "Explain AJAX in as much detail as possible.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain how JSONP works (and how it's not really AJAX).", content: "Explain how JSONP works (and how it's not really AJAX).", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Have you ever used JavaScript templating?\n\n\nIf so, what libraries have you used?\n\n", content: "Have you ever used JavaScript templating?\n\n\nIf so, what libraries have you used?\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain \"hoisting\".", content: "Explain \"hoisting\".", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Describe event bubbling.", content: "Describe event bubbling.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's the difference between an \"attribute\" and a \"property\"?", content: "What's the difference between an \"attribute\" and a \"property\"?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Why is extending built-in JavaScript objects not a good idea?", content: "Why is extending built-in JavaScript objects not a good idea?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Difference between document load event and document ready event?", content: "Difference between document load event and document ready event?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is the difference between == and ===?", content: "What is the difference between == and ===?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain the same-origin policy with regards to JavaScript.", content: "Explain the same-origin policy with regards to JavaScript.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Make this work:", content: "Make this work:", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Why is it called a Ternary expression, what does the word \"Ternary\" indicate?", content: "Why is it called a Ternary expression, what does the word \"Ternary\" indicate?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is \"use strict\";? what are the advantages and disadvantages to using it?", content: "What is \"use strict\";? what are the advantages and disadvantages to using it?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Create a for loop that iterates up to 100 while outputting \"fizz\" at multiples of 3, \"buzz\" at multiples of 5 and \"fizzbuzz\" at multiples of 3 and 5\n", content: "Create a for loop that iterates up to 100 while outputting \"fizz\" at multiples of 3, \"buzz\" at multiples of 5 and \"fizzbuzz\" at multiples of 3 and 5\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?", content: "Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Why would you use something like the load event? Does this event have disadvantages? Do you know any alternatives, and why would you use those?", content: "Why would you use something like the load event? Does this event have disadvantages? Do you know any alternatives, and why would you use those?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain what a single page app is and how to make one SEO-friendly.", content: "Explain what a single page app is and how to make one SEO-friendly.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is the extent of your experience with Promises and/or their polyfills?", content: "What is the extent of your experience with Promises and/or their polyfills?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are the pros and cons of using Promises instead of callbacks?", content: "What are the pros and cons of using Promises instead of callbacks?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are some of the advantages/disadvantages of writing JavaScript code in a language that compiles to JavaScript?", content: "What are some of the advantages/disadvantages of writing JavaScript code in a language that compiles to JavaScript?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are some advantages/disadvantages to testing your code?", content: "What are some advantages/disadvantages to testing your code?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What tools would you use to test your code's functionality?", content: "What tools would you use to test your code's functionality?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is the difference between a unit test and a functional/integration test?", content: "What is the difference between a unit test and a functional/integration test?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What is the purpose of a code style linting tool?", content: "What is the purpose of a code style linting tool?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What tools would you use to find a performance bug in your code?", content: "What tools would you use to find a performance bug in your code?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are some ways you may improve your website's scrolling performance?", content: "What are some ways you may improve your website's scrolling performance?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain the difference between layout, painting and compositing.", content: "Explain the difference between layout, painting and compositing.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Traditionally, why has it been better to serve site assets from multiple domains?", content: "Traditionally, why has it been better to serve site assets from multiple domains?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Do your best to describe the process from the time you type in a website's URL to it finishing loading on your screen.", content: "Do your best to describe the process from the time you type in a website's URL to it finishing loading on your screen.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are the differences between Long-Polling, Websockets and Server-Sent Events?", content: "What are the differences between Long-Polling, Websockets and Server-Sent Events?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Explain the following request and response headers:\n\n\nDiff. between Expires, Date, Age and If-Modified-...\nDo Not Track\nCache-Control\nTransfer-Encoding\nETag\nX-Frame-Options\n\n", content: "Explain the following request and response headers:\n\n\nDiff. between Expires, Date, Age and If-Modified-...\nDo Not Track\nCache-Control\nTransfer-Encoding\nETag\nX-Frame-Options\n\n", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are HTTP actions? List all HTTP actions that you know, and explain them.", content: "What are HTTP actions? List all HTTP actions that you know, and explain them.", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's a cool project that you've recently worked on?", content: "What's a cool project that you've recently worked on?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are some things you like about the developer tools you use?", content: "What are some things you like about the developer tools you use?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "Do you have any pet projects? What kind?", content: "Do you have any pet projects? What kind?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What's your favorite feature of Internet Explorer?", content: "What's your favorite feature of Internet Explorer?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "How do you like your coffee?", content: "How do you like your coffee?", user_id: nil, difficulty: "", link: "https://github.com/h5bp/Front-end-Developer-Interview-Questions", tag_id: nil},
  {name: "What are the differences between null and undefined?", content: "What are the differences between null and undefined?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the differences between == and ===?", content: "What are the differences between == and ===?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would you compare two objects in JavaScript?", content: "How would you compare two objects in JavaScript?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "11+ true false related questions that will trick you.", content: "11+ true false related questions that will trick you.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "As [] is true, [] == true should also be true. right?", content: "As [] is true, [] == true should also be true. right?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you write a method on instance of a date which will give you next day?", content: "How could you write a method on instance of a date which will give you next day?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "If you want to use an arbitrary object as value of this, how will you do that?", content: "If you want to use an arbitrary object as value of this, how will you do that?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Write a simple function to tell whether 2 is passed as parameter or not?", content: "Write a simple function to tell whether 2 is passed as parameter or not?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you use Math.max to find the max value in an array?", content: "How could you use Math.max to find the max value in an array?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What the heck is this in JavaScript?", content: "What the heck is this in JavaScript?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "21 quick questions that will trick you.", content: "21 quick questions that will trick you.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you set a prefix before everything you log? for example, if you log('my message') it will log: \"(app) my message\"", content: "How could you set a prefix before everything you log? for example, if you log('my message') it will log: \"(app) my message\"", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What will you see in the console for the following example?", content: "What will you see in the console for the following example?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Look at the code below, you have a for loop if you have setTimeout inside it. If log the loop counter inside setTimeout, what will be logged?", content: "Look at the code below, you have a for loop if you have setTimeout inside it. If log the loop counter inside setTimeout, what will be logged?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Look at the code below, I have a property in a object and I am creating a new object where I am setting it to a new value. If I delete that property what will i get if I try to access that property?", content: "Look at the code below, I have a property in a object and I am creating a new object where I am setting it to a new value. If I delete that property what will i get if I try to access that property?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Does JavaScript pass parameter by value or by reference?", content: "Does JavaScript pass parameter by value or by reference?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you implement cache to save calculation time for a recursive fibonacci function?", content: "How could you implement cache to save calculation time for a recursive fibonacci function?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you cache execution of any function?", content: "How could you cache execution of any function?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "If you need to implement the following chaining with call back, how will you implement it?", content: "If you need to implement the following chaining with call back, how will you implement it?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you implement moveLeft animation?", content: "How could you implement moveLeft animation?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would you implement currying for any functions? ", content: "How would you implement currying for any functions? ", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What does float do?", content: "What does float do?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How can you clear sides of a floating element?\n\n\nHow can you clear sides of a floating element?\n\n", content: "How can you clear sides of a floating element?\n\n\nHow can you clear sides of a floating element?\n\n", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "some tricky questions in rapid fire style\n\n\nDoes css properties are case sensitive?\nWhy css selectors mixed up with cases don't apply the styles?\nDoes margin-top or margin-bottom has effect on inline element?\nDoes padding-top or padding-bottom has effect on inline element?\nDoes padding-left or padding-right or margin-left or margin-right has effect on inline element?\nIf you have a <p> element with font-size: 10rem, will the text be responsive when the user resizes / drags the browser window?\nThe pseudo class :checked will select inputs with type radio or checkbox, but not\nIn a HTML document, the pseudo class :root always refers to the element.\nThe translate() function can move the position of an element on the z-axis.\n\n", content: "some tricky questions in rapid fire style\n\n\nDoes css properties are case sensitive?\nWhy css selectors mixed up with cases don't apply the styles?\nDoes margin-top or margin-bottom has effect on inline element?\nDoes padding-top or padding-bottom has effect on inline element?\nDoes padding-left or padding-right or margin-left or margin-right has effect on inline element?\nIf you have a <p> element with font-size: 10rem, will the text be responsive when the user resizes / drags the browser window?\nThe pseudo class :checked will select inputs with type radio or checkbox, but not\nIn a HTML document, the pseudo class :root always refers to the element.\nThe translate() function can move the position of an element on the z-axis.\n\n", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Which one would you prefer among px, em % or pt and why?", content: "Which one would you prefer among px, em % or pt and why?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How absolute, relative, fixed and static position differ?", content: "How absolute, relative, fixed and static position differ?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the differences between visibility hidden and display none?", content: "What are the differences between visibility hidden and display none?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the differences between inline, block and inline-block?", content: "What are the differences between inline, block and inline-block?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the properties related to box model?", content: "What are the properties related to box model?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Does overflow: hidden create a new block formatting context?", content: "Does overflow: hidden create a new block formatting context?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you apply css rules specific to a media?\n\n\nWhat is the use of only?\nDoes the screen keyword apply to the device's physical screen or the browser's viewport?\n\n", content: "How could you apply css rules specific to a media?\n\n\nWhat is the use of only?\nDoes the screen keyword apply to the device's physical screen or the browser's viewport?\n\n", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the some pseudo classed u have used?", content: "What are the some pseudo classed u have used?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How do you align a p center-center inside a div?", content: "How do you align a p center-center inside a div?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How do you optimize css selectors?", content: "How do you optimize css selectors?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How can you load css resources conditionally?", content: "How can you load css resources conditionally?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Why would you use sprites?", content: "Why would you use sprites?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is specificity? How do u calculate specificity?", content: "What is specificity? How do u calculate specificity?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is shadow DOM?", content: "What is shadow DOM?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What do you know about transition?", content: "What do you know about transition?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the different css filter you can use?", content: "What are the different css filter you can use?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the reasons to use preprocessor?", content: "What are the reasons to use preprocessor?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "\nShow you couple of style example and you have to tell what does it do.", content: "\nShow you couple of style example and you have to tell what does it do.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How descendant css selectors are matched? get answer\n", content: "How descendant css selectors are matched? get answer\n", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would u implement modularity in css?", content: "How would u implement modularity in css?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "If something doesn't work in a specific browser (IE8), you would u approach this problem?", content: "If something doesn't work in a specific browser (IE8), you would u approach this problem?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How do you test cross-browser compatibility of your site?", content: "How do you test cross-browser compatibility of your site?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is the greatest hack you did in css so far?", content: "What is the greatest hack you did in css so far?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is grid layout?", content: "What is grid layout?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How can you make a site responsive?", content: "How can you make a site responsive?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Why reset css is useful? or how normalize.css works?", content: "Why reset css is useful? or how normalize.css works?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What do you know about text shadows, box shadows?", content: "What do you know about text shadows, box shadows?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Verify a prime number?", content: "Verify a prime number?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Find all prime factors of a number?", content: "Find all prime factors of a number?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Get nth Fibonacci number?", content: "Get nth Fibonacci number?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Find the greatest common divisor of two numbers?", content: "Find the greatest common divisor of two numbers?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Remove duplicate members from an array?", content: "Remove duplicate members from an array?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "merge two sorted array?", content: "merge two sorted array?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Swap two numbers without using a temp variable?", content: "Swap two numbers without using a temp variable?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Reverse a string in JavaScript?", content: "Reverse a string in JavaScript?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would you reverse words in a sentence?", content: "How would you reverse words in a sentence?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Reverse words in place?", content: "Reverse words in place?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Find the first non repeating char in a string?", content: "Find the first non repeating char in a string?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Remove duplicate characters from a sting?", content: "Remove duplicate characters from a sting?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How will you verify a word as palindrome?", content: "How will you verify a word as palindrome?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Generate random between 5 to 7 by using defined function.", content: "Generate random between 5 to 7 by using defined function.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Find missing number from unsorted array of integers.", content: "Find missing number from unsorted array of integers.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Get two numbers that equal to a given number?", content: "Get two numbers that equal to a given number?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Find the largest sum of any two elements?", content: "Find the largest sum of any two elements?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Total number of zeros from 1 upto n?", content: "Total number of zeros from 1 upto n?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Check whether a given string is a substring of bigger string", content: "Check whether a given string is a substring of bigger string", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Get permutaitons of a string", content: "Get permutaitons of a string", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Is there any difference between window and document?", content: "Is there any difference between window and document?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Does document.onload and window.onload fire at the same time?", content: "Does document.onload and window.onload fire at the same time?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Is attribute similar to property?", content: "Is attribute similar to property?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the different ways to get an element from DOM?", content: "What are the different ways to get an element from DOM?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is the fastest way to select elements by using css selectors?", content: "What is the fastest way to select elements by using css selectors?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How come, I can't use forEach or similar array methods on a NodeList?", content: "How come, I can't use forEach or similar array methods on a NodeList?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "If you need to implement getElementByAttribute, how would you implement it?", content: "If you need to implement getElementByAttribute, how would you implement it?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would you add a class to an element by query selector?", content: "How would you add a class to an element by query selector?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could I verify whether one element is child of another?", content: "How could I verify whether one element is child of another?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is the best way to create a DOM element? Set innherHTML or use createElement?", content: "What is the best way to create a DOM element? Set innherHTML or use createElement?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is createDocumentFragment and why you might use it?", content: "What is createDocumentFragment and why you might use it?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is reflow? What causes reflow? How could you reduce reflow?", content: "What is reflow? What causes reflow? How could you reduce reflow?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is repaint and when does this happen?", content: "What is repaint and when does this happen?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you make sure to run some JavaScript when DOM is ready like $(document).ready?", content: "How could you make sure to run some JavaScript when DOM is ready like $(document).ready?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is event bubble? How does event flows in DOM?", content: "What is event bubble? How does event flows in DOM?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would you destroy multiple list items with one click handler?", content: "How would you destroy multiple list items with one click handler?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Create a button that is destroyed by clicking in it but two new buttons are created in it's place.", content: "Create a button that is destroyed by clicking in it but two new buttons are created in it's place.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How could you capture all clicks in a page?", content: "How could you capture all clicks in a page?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How can you get all the texts in a web page?", content: "How can you get all the texts in a web page?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is defer and async keyword does in a script tag?", content: "What is defer and async keyword does in a script tag?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "10 rapid fire questions", content: "10 rapid fire questions", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Why do u need doctype?", content: "Why do u need doctype?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is the use of data-* attribute?", content: "What is the use of data-* attribute?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How can you generate public key in html?", content: "How can you generate public key in html?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How do you change direction of html text?", content: "How do you change direction of html text?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How can you highlight text in html?", content: "How can you highlight text in html?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Can you apply css to a part of html document only?", content: "Can you apply css to a part of html document only?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Will browser make http request for the following cases?", content: "Will browser make http request for the following cases?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Which resource would be downloaded first?", content: "Which resource would be downloaded first?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is optional tag?", content: "What is optional tag?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are the differences between div and span?", content: "What are the differences between div and span?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How would you differentiate div, section and article?", content: "How would you differentiate div, section and article?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How to select svg or canvas for your site?", content: "How to select svg or canvas for your site?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "How to serve html in multiple languages?", content: "How to serve html in multiple languages?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "Explain standard and quirks mode.", content: "Explain standard and quirks mode.", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What is semantic tag?", content: "What is semantic tag?", user_id: nil, difficulty: "", link: "https://github.com/khan4019/front-end-Interview-Questions", tag_id: nil},
  {name: "What are your strengths?", content: "What are your strengths?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are your weaknesses?", content: "What are your weaknesses?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Why are you interested in working for [insert company name here]?", content: "Why are you interested in working for [insert company name here]?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Where do you see yourself in five years? Ten years?", content: "Where do you see yourself in five years? Ten years?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Why do you want to leave your current company?", content: "Why do you want to leave your current company?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Why was there a gap in your employment between [insert date] and [insert date]?", content: "Why was there a gap in your employment between [insert date] and [insert date]?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What can you offer us that someone else can not?", content: "What can you offer us that someone else can not?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are three things your former manager would like you to improve on?", content: "What are three things your former manager would like you to improve on?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Are you willing to relocate?", content: "Are you willing to relocate?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Are you willing to travel?", content: "Are you willing to travel?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Tell me about an accomplishment you are most proud of.", content: "Tell me about an accomplishment you are most proud of.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Tell me about a time you made a mistake.", content: "Tell me about a time you made a mistake.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What is your dream job?", content: "What is your dream job?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "How did you hear about this position?", content: "How did you hear about this position?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What would you look to accomplish in the first 30 days/60 days/90 days on the job?", content: "What would you look to accomplish in the first 30 days/60 days/90 days on the job?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Discuss your resume.", content: "Discuss your resume.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Discuss your educational background.", content: "Discuss your educational background.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Describe yourself.", content: "Describe yourself.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Tell me how you handled a difficult situation.", content: "Tell me how you handled a difficult situation.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Why should we hire you?", content: "Why should we hire you?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Why are you looking for a new job?", content: "Why are you looking for a new job?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Would you work holidays/weekends?", content: "Would you work holidays/weekends?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "How would you deal with an angry or irate customer?", content: "How would you deal with an angry or irate customer?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are your salary requirements? (Hint: if you’re not sure what’s a fair salary range and compensation package, research the job title and/or company on Glassdoor.)", content: "What are your salary requirements? (Hint: if you’re not sure what’s a fair salary range and compensation package, research the job title and/or company on Glassdoor.)", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Give a time when you went above and beyond the requirements for a project.", content: "Give a time when you went above and beyond the requirements for a project.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Who are our competitors?", content: "Who are our competitors?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What was your biggest failure?", content: "What was your biggest failure?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What motivates you?", content: "What motivates you?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What’s your availability?", content: "What’s your availability?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Who’s your mentor?", content: "Who’s your mentor?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Tell me about a time when you disagreed with your boss.", content: "Tell me about a time when you disagreed with your boss.", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "How do you handle pressure?", content: "How do you handle pressure?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What is the name of our CEO?", content: "What is the name of our CEO?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are your career goals?", content: "What are your career goals?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What gets you up in the morning?", content: "What gets you up in the morning?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What would your direct reports say about you?", content: "What would your direct reports say about you?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What were your bosses’ strengths/weaknesses?", content: "What were your bosses’ strengths/weaknesses?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "If I called your boss right now and asked him what is an area that you could improve on, what would he say?", content: "If I called your boss right now and asked him what is an area that you could improve on, what would he say?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Are you a leader or a follower?", content: "Are you a leader or a follower?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What was the last book you’ve read for fun?", content: "What was the last book you’ve read for fun?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are your co-worker pet peeves?", content: "What are your co-worker pet peeves?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are your hobbies?", content: "What are your hobbies?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What is your favorite website?", content: "What is your favorite website?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What makes you uncomfortable?", content: "What makes you uncomfortable?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What are some of your leadership experiences?", content: "What are some of your leadership experiences?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "How would you fire someone?", content: "How would you fire someone?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What do you like the most and least about working in this industry?", content: "What do you like the most and least about working in this industry?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Would you work 40+ hours a week?", content: "Would you work 40+ hours a week?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What questions haven’t I asked you?", content: "What questions haven’t I asked you?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "What questions do you have for me?", content: "What questions do you have for me?", user_id: nil, difficulty: "", link: "http://www.glassdoor.com/blog/common-interview-questions/", tag_id: nil},
  {name: "Course Schedule II", content: "<p></p>\n<p>\r\nThere are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n - 1</code>.</p><p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p><p>\r\nGiven the total number of courses and a list of prerequisite <b>pairs</b>, return the ordering of courses you should take to finish all courses.</p><p>There may be multiple correct orders, you just need to return one of them. If it is impossible to finish all courses, return an empty array.\r\n</p><p>For example:</p><p>There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is <code>[0,1]</code></p><p>There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is <code>[0,1,2,3]</code>. Another correct ordering is<code>[0,2,1,3]</code>.</p><p><b>Note:</b><br>\r\nThe input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs\" target=\"_blank\">how a graph is represented</a>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/course-schedule-ii/", tag_id: nil},
  {name: "Minimum Size Subarray Sum", content: "<p></p>\n<p>\r\nGiven an array of <strong>n</strong> positive integers and a positive integer <strong>s</strong>, find the minimal length of a subarray of which the sum ≥ <strong>s</strong>. If there isn't one, return 0 instead.\r\n</p><p>\r\nFor example, given the array <code>[2,3,1,2,4,3]</code> and <code>s = 7</code>,<br>\r\nthe subarray <code>[4,3]</code> has the minimal length under the problem constraint.\r\n</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/Freezen\">@Freezen</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/minimum-size-subarray-sum/", tag_id: nil},
  {name: "Implement Trie (Prefix Tree)", content: "<p></p>\n<p>\r\nImplement a trie with <code>insert</code>, <code>search</code>, and <code>startsWith</code> methods.\r\n</p><p>\r\n<b>Note:</b><br>\r\nYou may assume that all inputs are consist of lowercase letters <code>a-z</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/implement-trie-prefix-tree/", tag_id: nil},
  {name: "Course Schedule", content: "<p></p>\n<p>\r\nThere are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n - 1</code>.</p><p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p><p>\r\nGiven the total number of courses and a list of prerequisite <b>pairs</b>, is it possible for you to finish all courses?\r\n</p><p>For example:</p><p>There are a total of 2 courses to take. To take course 1 you should have finished course 0. So it is possible.</p><p>There are a total of 2 courses to take. To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.</p><p><b>Note:</b><br>\r\nThe input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs\" target=\"_blank\">how a graph is represented</a>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/course-schedule/", tag_id: nil},
  {name: "Reverse Linked List", content: "<p></p>\n<p>Reverse a singly linked list.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/reverse-linked-list/", tag_id: nil},
  {name: "Isomorphic Strings", content: "<p></p>\n<p>Given two strings <b><i>s</i></b> and <b><i>t</i></b>, determine if they are isomorphic.</p><p>Two strings are isomorphic if the characters in <b><i>s</i></b> can be replaced to get <b><i>t</i></b>.</p><p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.</p><p>For example,<br>\r\nGiven <code>\"egg\"</code>, <code>\"add\"</code>, return true.</p><p>Given <code>\"foo\"</code>, <code>\"bar\"</code>, return false.</p><p>Given <code>\"paper\"</code>, <code>\"title\"</code>, return true.</p><p><b>Note:</b><br>\r\nYou may assume both <b><i>s</i></b> and <b><i>t</i></b> have the same length.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/isomorphic-strings/", tag_id: nil},
  {name: "Count Primes", content: "<p></p>\n<p><b>Description:</b></p><p>Count the number of prime numbers less than a non-negative number, <b>n</b></p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/mithmatt\">@mithmatt</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/count-primes/", tag_id: nil},
  {name: "Remove Linked List Elements", content: "<p></p>\n<p>Remove all elements from a linked list of integers that have value <b><i>val</i></b>.</p><p>\r\n<b>Example</b><br>\r\n<i><b>Given:</b></i> 1 --&gt; 2 --&gt; 6 --&gt; 3 --&gt; 4 --&gt; 5 --&gt; 6,  <b><i>val</i></b> = 6<br>\r\n<i><b>Return:</b></i> 1 --&gt; 2 --&gt; 3 --&gt; 4 --&gt; 5\r\n</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/mithmatt\">@mithmatt</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/remove-linked-list-elements/", tag_id: nil},
  {name: "Happy Number", content: "<p></p>\n<p>Write an algorithm to determine if a number is \"happy\".</p><p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p><p><b>Example: </b>19 is a happy number</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/mithmatt\">@mithmatt</a> and <a href=\"https://leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/happy-number/", tag_id: nil},
  {name: "Bitwise AND of Numbers Range", content: "<p></p>\n<p>Given a range [m, n] where 0 \r\n\r\n</p>\n<p>\r\nFor example, given the range [5, 7], you should return 4.\r\n</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/amrsaqr\">@amrsaqr</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/bitwise-and-of-numbers-range/", tag_id: nil},
  {name: "Number of Islands", content: "<p></p>\n<p>Given a 2d grid map of <code>'1'</code>s (land) and <code>'0'</code>s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p><p><i><b>Example 1:</b></i></p><p>Answer: 1</p><p><i><b>Example 2:</b></i></p><p>Answer: 3</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/mithmatt\">@mithmatt</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/number-of-islands/", tag_id: nil},
  {name: "Binary Tree Right Side View", content: "<p></p>\n<p>Given a binary tree, imagine yourself standing on the <i>right</i> side of it, return the values of the nodes you can see ordered from top to bottom.</p><p>\r\nFor example:<br>\r\nGiven the following binary tree,<br>\r\n</p>\n<p>\r\nYou should return <code>[1, 3, 4]</code>.\r\n</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/amrsaqr\">@amrsaqr</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/binary-tree-right-side-view/", tag_id: nil},
  {name: "House Robber", content: "<p></p>\n<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p><p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <b>without alerting the police</b>.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ifanchu\">@ifanchu</a> for adding this problem and creating all test cases. Also thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding additional test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/house-robber/", tag_id: nil},
  {name: "Number of 1 Bits", content: "<p></p>\n<p>Write a function that takes an unsigned integer and returns the number of ’1' bits it has (also known as the <a href=\"http://en.wikipedia.org/wiki/Hamming_weight\">Hamming weight</a>).</p><p>For example, the 32-bit integer ’11' has binary representation <code>00000000000000000000000000001011</code>, so the function should return 3.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/number-of-1-bits/", tag_id: nil},
  {name: "Reverse Bits", content: "<p></p>\n<p>Reverse bits of a given 32 bits unsigned integer.</p><p>For example, given input 43261596 (represented in binary as <b>00000010100101000001111010011100</b>), return 964176192 (represented in binary as <b>00111001011110000010100101000000</b>).</p><p>\r\n<b>Follow up</b>:<br>\r\nIf this function is called many times, how would you optimize it?\r\n</p><p>Related problem: <a href=\"/problems/reverse-integer/\">Reverse Integer</a></p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/reverse-bits/", tag_id: nil},
  {name: "Rotate Array", content: "<p></p>\n<p>Rotate an array of <i>n</i> elements to the right by <i>k</i> steps.</p><p>For example, with <i>n</i> = 7 and <i>k</i> = 3, the array <code>[1,2,3,4,5,6,7]</code> is rotated to <code>[5,6,7,1,2,3,4]</code>. </p><p><b>Note:</b><br>\r\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n</p><p>Related problem: <a href=\"/problems/reverse-words-in-a-string-ii/\">Reverse Words in a String II</a></p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/Freezen\">@Freezen</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/rotate-array/", tag_id: nil},
  {name: "Best Time to Buy and Sell Stock IV", content: "<p></p>\n<p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p><p>Design an algorithm to find the maximum profit. You may complete at most <b>k</b> transactions.</p><p><b>Note:</b><br>\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/Freezen\">@Freezen</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/", tag_id: nil},
  {name: "Repeated DNA Sequences", content: "<p></p>\n<p>\r\nAll DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: \"ACGAATTCCG\". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.</p><p>Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.</p><p>\r\nFor example,</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/repeated-dna-sequences/", tag_id: nil},
  {name: "Reverse Words in a String II", content: "", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/reverse-words-in-a-string-ii/", tag_id: nil},
  {name: "Largest Number", content: "<p></p>\n<p>Given a list of non negative integers, arrange them such that they form the largest number.</p><p>For example, given <code>[3, 30, 34, 5, 9]</code>, the largest formed number is <code>9534330</code>.</p><p>Note: The result may be very large, so you need to return a string instead of an integer.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/largest-number/", tag_id: nil},
  {name: "Dungeon Game", content: "<p><style>\r\ntable.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n</style>\r\n\r\n</p>\n<p>The demons had captured the princess (<b>P</b>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<b>K</b>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. </p><p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. </p><p>Some of the rooms are guarded by demons, so the knight loses health (<i>negative</i> integers) upon entering these rooms; \r\nother rooms are either empty (<i>0's</i>) or contain magic orbs that increase the knight's health (<i>positive</i> integers).</p><p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. </p><p><b>Write a function to determine the knight's minimum initial health so that he is able to rescue the princess.</b></p><p>For example, given the dungeon below, the initial health of the knight must be at least <b>7</b> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p><p><b>Notes:</b>\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/stellari\">@stellari</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/dungeon-game/", tag_id: nil},
  {name: "Binary Search Tree Iterator", content: "<p></p>\n<p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p><p>Calling <code>next()</code> will return the next smallest number in the BST.</p><p><b>Note: </b><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>) memory, where <i>h</i> is the height of the tree. </p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/binary-search-tree-iterator/", tag_id: nil},
  {name: "Factorial Trailing Zeroes", content: "<p></p>\n<p>Given an integer <i>n</i>, return the number of trailing zeroes in <i>n</i>!.</p><p><b>Note: </b>Your solution should be in logarithmic time complexity.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/factorial-trailing-zeroes/", tag_id: nil},
  {name: "Excel Sheet Column Number", content: "<p></p>\n<p>Related to question <a href=\"https://oj.leetcode.com/problems/excel-sheet-column-title/\">Excel Sheet Column Title</a></p><p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p><p>For example:</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/excel-sheet-column-number/", tag_id: nil},
  {name: "Two Sum III - Data structure design", content: "", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/two-sum-iii-data-structure-design/", tag_id: nil},
  {name: "Majority Element", content: "<p></p>\n<p>Given an array of size <i>n</i>, find the majority element. The majority element is the element that appears more than <code>⌊ n/2 ⌋</code> times.</p><p>You may assume that the array is non-empty and the majority element always exist in the array.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/majority-element/", tag_id: nil},
  {name: "Excel Sheet Column Title", content: "<p></p>\n<p>Given a positive integer, return its corresponding column title as appear in an Excel sheet.</p><p>For example:</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ifanchu\">@ifanchu</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/excel-sheet-column-title/", tag_id: nil},
  {name: "Two Sum II - Input array is sorted", content: "", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/", tag_id: nil},
  {name: "Fraction to Recurring Decimal", content: "<p></p>\n<p>Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.</p><p>If the fractional part is repeating, enclose the repeating part in parentheses.</p><p>\r\nFor example,\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/Shangrila\">@Shangrila</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/fraction-to-recurring-decimal/", tag_id: nil},
  {name: "Compare Version Numbers", content: "<p></p>\n<p>Compare two version numbers <i>version1</i> and <i>version2</i>.<br>\r\nIf <i>version1</i> &gt; <i>version2</i> return 1, if <i>version1</i> &lt; <i>version2</i> return -1, otherwise return 0.</p><p>You may assume that the version strings are non-empty and contain only digits and the <code>.</code> character.<br>\r\nThe <code>.</code> character does not represent a decimal point and is used to separate number sequences.<br>\r\nFor instance, <code>2.5</code> is not \"two and a half\" or \"half way to version three\", it is the fifth second-level revision of the second first-level revision.</p><p>Here is an example of version numbers ordering:</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/compare-version-numbers/", tag_id: nil},
  {name: "Maximum Gap", content: "<p></p>\n<p>Given an unsorted array, find the maximum difference between the successive elements in its sorted form.</p><p>Try to solve it in linear time/space.</p><p>Return 0 if the array contains less than 2 elements.</p><p>You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/porker2008\">@porker2008</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/maximum-gap/", tag_id: nil},
  {name: "Missing Ranges", content: "", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/missing-ranges/", tag_id: nil},
  {name: "Find Peak Element", content: "<p></p>\n<p>A peak element is an element that is greater than its neighbors.</p><p>Given an input array where <code>num[i] ≠ num[i+1]</code>, find a peak element and return its index.</p><p>The array may contain multiple peaks, in that case return the index to any one of the peaks is fine.</p><p>You may imagine that <code>num[-1] = num[n] = -∞</code>.</p><p>For example, in array <code>[1, 2, 3, 1]</code>, 3 is a peak element and your function should return the index number 2.</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/ts\">@ts</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/find-peak-element/", tag_id: nil},
  {name: "One Edit Distance", content: "", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/one-edit-distance/", tag_id: nil},
  {name: "Intersection of Two Linked Lists", content: "<p></p>\n<p>Write a program to find the node at which the intersection of two singly linked lists begins.</p><p>For example, the following two linked lists: </p><p>begin to intersect at node c1.</p><p><b>Notes:</b>\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href=\"https://oj.leetcode.com/discuss/user/stellari\">@stellari</a> for adding this problem and creating all test cases.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/intersection-of-two-linked-lists/", tag_id: nil},
  {name: "Longest Substring with At Most Two Distinct Characters", content: "", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/", tag_id: nil},
  {name: "Read N Characters Given Read4 II - Call multiple times", content: "", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times/", tag_id: nil},
  {name: "Read N Characters Given Read4", content: "", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/read-n-characters-given-read4/", tag_id: nil},
  {name: "Binary Tree Upside Down", content: "", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/binary-tree-upside-down/", tag_id: nil},
  {name: "Min Stack", content: "<p></p>\n<p>\r\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\r\n</p>\n", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/min-stack/", tag_id: nil},
  {name: "Find Minimum in Rotated Sorted Array II", content: "<p></p>\n<p><i>Follow up</i> for \"Find Minimum in Rotated Sorted Array\":<br>\r\nWhat if <i>duplicates</i> are allowed?</p><p>Would this affect the run-time complexity? How and why?</p><p>Suppose a sorted array is rotated at some pivot unknown to you beforehand.</p><p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p><p>Find the minimum element.</p><p>The array may contain duplicates.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/", tag_id: nil},
  {name: "Find Minimum in Rotated Sorted Array", content: "<p></p>\n<p>Suppose a sorted array is rotated at some pivot unknown to you beforehand.</p><p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p><p>Find the minimum element.</p><p>You may assume no duplicate exists in the array.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/", tag_id: nil},
  {name: "Maximum Product Subarray", content: "<p></p>\n<p>\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest product.\r\n</p><p>\r\nFor example, given the array <code>[2,3,-2,4]</code>,<br>\r\nthe contiguous subarray <code>[2,3]</code> has the largest product = <code>6</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/maximum-product-subarray/", tag_id: nil},
  {name: "Reverse Words in a String", content: "<p></p>\n<p>\r\nGiven an input string, reverse the string word by word.\r\n</p><p>\r\nFor example,<br>\r\nGiven s = \"<code>the sky is blue</code>\",<br>\r\nreturn \"<code>blue is sky the</code>\".\r\n</p><p>\r\n<b><font color=\"red\">Update (2015-02-12):</font></b><br>\r\nFor C programmers: Try to solve it <i>in-place</i> in <i>O</i>(1) space.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/reverse-words-in-a-string/", tag_id: nil},
  {name: "Evaluate Reverse Polish Notation", content: "<p></p>\n<p>\r\nEvaluate the value of an arithmetic expression in <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\">Reverse Polish Notation</a>.\r\n</p><p>\r\nValid operators are <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>. Each operand may be an integer or another expression.\r\n</p><p>\r\nSome examples:<br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/evaluate-reverse-polish-notation/", tag_id: nil},
  {name: "Max Points on a Line", content: "<p></p>\n<p>Given <i>n</i> points on a 2D plane, find the maximum number of points that lie on the same straight line.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/max-points-on-a-line/", tag_id: nil},
  {name: "Sort List", content: "<p></p>\n<p>Sort a linked list in <i>O</i>(<i>n</i> log <i>n</i>) time using constant space complexity.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/sort-list/", tag_id: nil},
  {name: "Insertion Sort List", content: "<p></p>\n<p>Sort a linked list using insertion sort.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/insertion-sort-list/", tag_id: nil},
  {name: "LRU Cache", content: "<p></p>\n<p>\r\nDesign and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: <code>get</code> and <code>set</code>.\r\n</p><p>\r\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br>\r\n<code>set(key, value)</code> - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/lru-cache/", tag_id: nil},
  {name: "Binary Tree Postorder Traversal", content: "<p></p>\n<p>Given a binary tree, return the <i>postorder</i> traversal of its nodes' values.</p><p>\r\nFor example:<br>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br>\r\n</p>\n<p>\r\nreturn <code>[3,2,1]</code>.\r\n</p><p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/binary-tree-postorder-traversal/", tag_id: nil},
  {name: "Binary Tree Preorder Traversal", content: "<p></p>\n<p>Given a binary tree, return the <i>preorder</i> traversal of its nodes' values.</p><p>\r\nFor example:<br>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br>\r\n</p>\n<p>\r\nreturn <code>[1,2,3]</code>.\r\n</p><p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/binary-tree-preorder-traversal/", tag_id: nil},
  {name: "Reorder List", content: "<p></p>\n<p>\r\nGiven a singly linked list <i>L</i>: <i>L</i><sub>0</sub>→<i>L</i><sub>1</sub>→…→<i>L</i><sub><i>n</i>-1</sub>→<i>L</i><sub>n</sub>,<br>\r\nreorder it to: <i>L</i><sub>0</sub>→<i>L</i><sub><i>n</i></sub>→<i>L</i><sub>1</sub>→<i>L</i><sub><i>n</i>-1</sub>→<i>L</i><sub>2</sub>→<i>L</i><sub><i>n</i>-2</sub>→…\r\n</p><p>You must do this in-place without altering the nodes' values.</p><p>\r\nFor example,<br>\r\nGiven <code>{1,2,3,4}</code>, reorder it to <code>{1,4,2,3}</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/reorder-list/", tag_id: nil},
  {name: "Linked List Cycle II", content: "<p></p>\n<p>\r\nGiven a linked list, return the node where the cycle begins. If there is no cycle, return <code>null</code>.\r\n</p><p>\r\nFollow up:<br>\r\nCan you solve it without using extra space?\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/linked-list-cycle-ii/", tag_id: nil},
  {name: "Linked List Cycle", content: "<p></p>\n<p>\r\nGiven a linked list, determine if it has a cycle in it.\r\n</p><p>\r\nFollow up:<br>\r\nCan you solve it without using extra space?\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/linked-list-cycle/", tag_id: nil},
  {name: "Word Break II", content: "<p></p>\n<p>\r\nGiven a string <i>s</i> and a dictionary of words <i>dict</i>, add spaces in <i>s</i> to construct a sentence where each word is a valid dictionary word.\r\n</p><p>\r\nReturn all such possible sentences.\r\n</p><p>\r\nFor example, given<br>\r\n<i>s</i> = <code>\"catsanddog\"</code>,<br>\r\n<i>dict</i> = <code>[\"cat\", \"cats\", \"and\", \"sand\", \"dog\"]</code>.\r\n</p><p>\r\nA solution is <code>[\"cats and dog\", \"cat sand dog\"]</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/word-break-ii/", tag_id: nil},
  {name: "Word Break", content: "<p></p>\n<p>\r\nGiven a string <i>s</i> and a dictionary of words <i>dict</i>, determine if <i>s</i> can be segmented into a space-separated sequence of one or more dictionary words.\r\n</p><p>For example, given<br>\r\n<i>s</i> = <code>\"leetcode\"</code>,<br>\r\n<i>dict</i> = <code>[\"leet\", \"code\"]</code>.\r\n</p><p>\r\nReturn true because <code>\"leetcode\"</code> can be segmented as <code>\"leet code\"</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/word-break/", tag_id: nil},
  {name: "Copy List with Random Pointer", content: "<p></p>\n<p>\r\nA linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\r\n</p><p>\r\nReturn a deep copy of the list.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/copy-list-with-random-pointer/", tag_id: nil},
  {name: "Single Number II", content: "<p></p>\n<p>\r\nGiven an array of integers, every element appears <i>three</i> times except for one. Find that single one.\r\n</p><p>\r\n<b>Note:</b><br>\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/single-number-ii/", tag_id: nil},
  {name: "Single Number", content: "<p></p>\n<p>Given an array of integers, every element appears <i>twice</i> except for one. Find that single one.</p><p>\r\n<b>Note:</b><br>\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/single-number/", tag_id: nil},
  {name: "Candy", content: "<p></p>\n<p>\r\nThere are <i>N</i> children standing in a line. Each child is assigned a rating value. \r\n</p><p>\r\nYou are giving candies to these children subjected to the following requirements:\r\n</p><p>\r\nWhat is the minimum candies you must give?\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/candy/", tag_id: nil},
  {name: "Gas Station", content: "<p></p>\n<p>\r\nThere are <i>N</i> gas stations along a circular route, where the amount of gas at station <i>i</i> is <code>gas[i]</code>.\r\n</p><p>\r\nYou have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from station <i>i</i> to its next station (<i>i</i>+1). You begin the journey with an empty tank at one of the gas stations.\r\n</p><p>\r\nReturn the starting gas station's index if you can travel around the circuit once, otherwise return -1.\r\n</p><p>\r\n<b>Note:</b><br>\r\nThe solution is guaranteed to be unique.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/gas-station/", tag_id: nil},
  {name: "Clone Graph", content: "<p></p>\n<p>\r\nClone an undirected graph. Each node in the graph contains a <code>label</code> and a list of its <code>neighbors</code>.\r\n</p><p>\r\nNodes are labeled uniquely.\r\n</p><p>\r\nAs an example, consider the serialized graph <code><font color=\"red\">{<font color=\"black\">0</font>,1,2#</font><font color=\"blue\"><font color=\"black\">1</font>,2#</font><font color=\"green\"><font color=\"black\">2</font>,2}</font></code>.\r\n</p><p>\r\nThe graph has a total of three nodes, and therefore contains three parts as separated by <code>#</code>.\r\n</p>\n<p>\r\nVisually, the graph looks like the following:\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/clone-graph/", tag_id: nil},
  {name: "Palindrome Partitioning II", content: "<p></p>\n<p>\r\nGiven a string <i>s</i>, partition <i>s</i> such that every substring of the partition is a palindrome.\r\n</p><p>\r\nReturn the minimum cuts needed for a palindrome partitioning of <i>s</i>.\r\n</p><p>\r\nFor example, given <i>s</i> = <code>\"aab\"</code>,<br>\r\nReturn <code>1</code> since the palindrome partitioning <code>[\"aa\",\"b\"]</code> could be produced using 1 cut.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/palindrome-partitioning-ii/", tag_id: nil},
  {name: "Palindrome Partitioning", content: "<p></p>\n<p>\r\nGiven a string <i>s</i>, partition <i>s</i> such that every substring of the partition is a palindrome.\r\n</p><p>\r\nReturn all possible palindrome partitioning of <i>s</i>.\r\n</p><p>\r\nFor example, given <i>s</i> = <code>\"aab\"</code>,<br>\r\n\r\nReturn\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/palindrome-partitioning/", tag_id: nil},
  {name: "Surrounded Regions", content: "<p></p>\n<p>\r\nGiven a 2D board containing <code>'X'</code> and <code>'O'</code>, capture all regions surrounded by <code>'X'</code>.</p><p>A region is captured by flipping all <code>'O'</code>s into <code>'X'</code>s in that surrounded region.\r\n</p><p>\r\nFor example,<br>\r\n</p>\n<p>\r\nAfter running your function, the board should be:\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/surrounded-regions/", tag_id: nil},
  {name: "Sum Root to Leaf Numbers", content: "<p></p>\n<p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p><p>An example is the root-to-leaf path <code>1-&gt;2-&gt;3</code> which represents the number <code>123</code>.</p><p>Find the total sum of all root-to-leaf numbers.</p><p>For example,\r\n</p>\n<p>\r\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.<br>\r\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\r\n</p><p>\r\nReturn the sum = 12 + 13 = <code>25</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/sum-root-to-leaf-numbers/", tag_id: nil},
  {name: "Longest Consecutive Sequence", content: "<p></p>\n<p>\r\nGiven an unsorted array of integers, find the length of the longest consecutive elements sequence.\r\n</p><p>\r\nFor example,<br>\r\nGiven <code>[100, 4, 200, 1, 3, 2]</code>,<br>\r\nThe longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Return its length: <code>4</code>.\r\n</p><p>\r\nYour algorithm should run in O(<i>n</i>) complexity.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/longest-consecutive-sequence/", tag_id: nil},
  {name: "Word Ladder", content: "<p></p>\n<p>\r\nGiven two words (<i>beginWord</i> and <i>endWord</i>), and a dictionary, find the length of shortest transformation sequence from <i>beginWord</i> to <i>endWord</i>, such that:\r\n</p><p>\r\nFor example,\r\n</p><p>\r\nGiven:<br>\r\n<i>start</i> = <code>\"hit\"</code><br>\r\n<i>end</i> = <code>\"cog\"</code><br>\r\n<i>dict</i> = <code>[\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]</code><br>\r\n</p><p>\r\nAs one shortest transformation is <code>\"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; \"cog\"</code>,<br>\r\nreturn its length <code>5</code>.\r\n</p><p>\r\n<b>Note:</b><br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/word-ladder/", tag_id: nil},
  {name: "Word Ladder II", content: "<p></p>\n<p>\r\nGiven two words (<i>start</i> and <i>end</i>), and a dictionary, find all shortest transformation sequence(s) from <i>start</i> to <i>end</i>, such that:\r\n</p><p>\r\nFor example,\r\n</p><p>\r\nGiven:<br>\r\n<i>start</i> = <code>\"hit\"</code><br>\r\n<i>end</i> = <code>\"cog\"</code><br>\r\n<i>dict</i> = <code>[\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]</code><br>\r\n</p><p>\r\nReturn<br>\r\n</p>\n<p>\r\n<b>Note:</b><br>\r\n</p>\n", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/word-ladder-ii/", tag_id: nil},
  {name: "Valid Palindrome", content: "<p></p>\n<p>\r\nGiven a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\r\n</p><p>\r\nFor example,<br>\r\n<code>\"A man, a plan, a canal: Panama\"</code> is a palindrome.<br>\r\n<code>\"race a car\"</code> is <i>not</i> a palindrome.\r\n</p><p>\r\n<b>Note:</b><br>\r\nHave you consider that the string might be empty? This is a good question to ask during an interview.</p><p>\r\nFor the purpose of this problem, we define empty string as valid palindrome.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/valid-palindrome/", tag_id: nil},
  {name: "Binary Tree Maximum Path Sum", content: "<p></p>\n<p>\r\nGiven a binary tree, find the maximum path sum.\r\n</p><p>\r\nThe path may start and end at any node in the tree.\r\n</p><p>\r\nFor example:<br>\r\nGiven the below binary tree,\r\n</p>\n<p>\r\nReturn <code>6</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/binary-tree-maximum-path-sum/", tag_id: nil},
  {name: "Best Time to Buy and Sell Stock III", content: "<p></p>\n<p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p><p>Design an algorithm to find the maximum profit. You may complete at most <i>two</i> transactions.</p><p><b>Note:</b><br>\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/", tag_id: nil},
  {name: "Best Time to Buy and Sell Stock II", content: "<p></p>\n<p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p><p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/", tag_id: nil},
  {name: "Best Time to Buy and Sell Stock", content: "<p></p>\n<p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p><p>If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/", tag_id: nil},
  {name: "Triangle", content: "<p></p>\n<p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p><p>\r\nFor example, given the following triangle<br>\r\n</p>\n<p>\r\nThe minimum path sum from top to bottom is <code>11</code> (i.e., <font color=\"red\">2</font> + <font color=\"red\">3</font> + <font color=\"red\">5</font> + <font color=\"red\">1</font> = 11).\r\n</p><p>\r\n<b>Note:</b><br>\r\nBonus point if you are able to do this using only <i>O</i>(<i>n</i>) extra space, where <i>n</i> is the total number of rows in the triangle.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/triangle/", tag_id: nil},
  {name: "Pascal's Triangle II", content: "<p></p>\n<p>Given an index <i>k</i>, return the <i>k</i><sup>th</sup> row of the Pascal's triangle.</p><p>\r\nFor example, given <i>k</i> = 3,<br>\r\nReturn <code>[1,3,3,1]</code>.\r\n</p><p>\r\n<b>Note:</b><br>\r\nCould you optimize your algorithm to use only <i>O</i>(<i>k</i>) extra space?\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/pascals-triangle-ii/", tag_id: nil},
  {name: "Pascal's Triangle", content: "<p></p>\n<p>Given <i>numRows</i>, generate the first <i>numRows</i> of Pascal's triangle.</p><p>\r\nFor example, given <i>numRows</i> = 5,<br>\r\nReturn\r\n</p>\n", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/pascals-triangle/", tag_id: nil},
  {name: "Populating Next Right Pointers in Each Node II", content: "<p></p>\n<p>Follow up for problem \"<i>Populating Next Right Pointers in Each Node</i>\".</p><p>What if the given tree could be any binary tree? Would your previous solution still work?</p><p>\r\n<b>Note:</b>\r\n</p>\n<p>\r\nFor example,<br>\r\nGiven the following binary tree,<br>\r\n</p>\n<p>\r\nAfter calling your function, the tree should look like:<br>\r\n</p>\n", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/", tag_id: nil},
  {name: "Populating Next Right Pointers in Each Node", content: "<p></p>\n<p>\r\nGiven a binary tree\r\n</p>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p><p>Initially, all next pointers are set to <code>NULL</code>.</p><p>\r\n<b>Note:</b>\r\n</p>\n<p>\r\nFor example,<br>\r\nGiven the following perfect binary tree,<br>\r\n</p>\n<p>\r\nAfter calling your function, the tree should look like:<br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/", tag_id: nil},
  {name: "Distinct Subsequences", content: "<p></p>\n<p>\r\nGiven a string <b>S</b> and a string <b>T</b>, count the number of distinct subsequences of <b>T</b> in <b>S</b>.\r\n</p><p>\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>\"ACE\"</code> is a subsequence of <code>\"ABCDE\"</code> while <code>\"AEC\"</code> is not).\r\n</p><p>\r\nHere is an example:<br>\r\n<b>S</b> = <code>\"rabbbit\"</code>, <b>T</b> = <code>\"rabbit\"</code>\r\n</p><p>\r\nReturn <code>3</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/distinct-subsequences/", tag_id: nil},
  {name: "Flatten Binary Tree to Linked List", content: "<p></p>\n<p>\r\nGiven a binary tree, flatten it to a linked list in-place.\r\n</p><p>\r\nFor example,<br>\r\nGiven\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/", tag_id: nil},
  {name: "Path Sum II", content: "<p></p>\n<p>\r\nGiven a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\r\n</p><p>\r\nreturn<br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/path-sum-ii/", tag_id: nil},
  {name: "Path Sum", content: "<p></p>\n<p>\r\nGiven a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\r\n</p><p>\r\nreturn true, as there exist a root-to-leaf path <code>5-&gt;4-&gt;11-&gt;2</code> which sum is 22.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/path-sum/", tag_id: nil},
  {name: "Minimum Depth of Binary Tree", content: "<p></p>\n<p>Given a binary tree, find its minimum depth.</p><p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/minimum-depth-of-binary-tree/", tag_id: nil},
  {name: "Balanced Binary Tree", content: "<p></p>\n<p>Given a binary tree, determine if it is height-balanced.\r\n</p><p>\r\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <i>every</i> node never differ by more than 1.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/balanced-binary-tree/", tag_id: nil},
  {name: "Convert Sorted List to Binary Search Tree", content: "<p></p>\n<p>Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/", tag_id: nil},
  {name: "Convert Sorted Array to Binary Search Tree", content: "<p></p>\n<p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/", tag_id: nil},
  {name: "Binary Tree Level Order Traversal II", content: "<p></p>\n<p>Given a binary tree, return the <i>bottom-up level order</i> traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).</p><p>\r\nFor example:<br>\r\nGiven binary tree <code>{3,9,20,#,#,15,7}</code>,<br>\r\n</p>\n<p>\r\nreturn its bottom-up level order traversal as:<br>\r\n</p>\n", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/", tag_id: nil},
  {name: "Construct Binary Tree from Inorder and Postorder Traversal", content: "<p></p>\n<p>Given inorder and postorder traversal of a tree, construct the binary tree.</p><p><b>Note:</b><br>\r\nYou may assume that duplicates do not exist in the tree.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/", tag_id: nil},
  {name: "Construct Binary Tree from Preorder and Inorder Traversal", content: "<p></p>\n<p>Given preorder and inorder traversal of a tree, construct the binary tree.</p><p><b>Note:</b><br>\r\nYou may assume that duplicates do not exist in the tree.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/", tag_id: nil},
  {name: "Maximum Depth of Binary Tree", content: "<p></p>\n<p>Given a binary tree, find its maximum depth.</p><p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/maximum-depth-of-binary-tree/", tag_id: nil},
  {name: "Binary Tree Zigzag Level Order Traversal", content: "<p></p>\n<p>Given a binary tree, return the <i>zigzag level order</i> traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).</p><p>\r\nFor example:<br>\r\nGiven binary tree <code>{3,9,20,#,#,15,7}</code>,<br>\r\n</p>\n<p>\r\nreturn its zigzag level order traversal as:<br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/", tag_id: nil},
  {name: "Binary Tree Level Order Traversal", content: "<p></p>\n<p>Given a binary tree, return the <i>level order</i> traversal of its nodes' values. (ie, from left to right, level by level).</p><p>\r\nFor example:<br>\r\nGiven binary tree <code>{3,9,20,#,#,15,7}</code>,<br>\r\n</p>\n<p>\r\nreturn its level order traversal as:<br>\r\n</p>\n", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/binary-tree-level-order-traversal/", tag_id: nil},
  {name: "Symmetric Tree", content: "<p></p>\n<p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p><p>\r\nFor example, this binary tree is symmetric:\r\n</p>\n<p>\r\nBut the following is not:<br>\r\n</p>\n<p>\r\n<b>Note:</b><br>\r\nBonus points if you could solve it both recursively and iteratively.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/symmetric-tree/", tag_id: nil},
  {name: "Same Tree", content: "<p></p>\n<p>\r\nGiven two binary trees, write a function to check if they are equal or not.\r\n</p><p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/same-tree/", tag_id: nil},
  {name: "Recover Binary Search Tree", content: "<p></p>\n<p>\r\nTwo elements of a binary search tree (BST) are swapped by mistake.</p><p>Recover the tree without changing its structure.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/recover-binary-search-tree/", tag_id: nil},
  {name: "Validate Binary Search Tree", content: "<p></p>\n<p>\r\nGiven a binary tree, determine if it is a valid binary search tree (BST).\r\n</p><p>\r\nAssume a BST is defined as follows:\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/validate-binary-search-tree/", tag_id: nil},
  {name: "Interleaving String", content: "<p></p>\n<p>\r\nGiven <i>s1</i>, <i>s2</i>, <i>s3</i>, find whether <i>s3</i> is formed by the interleaving of <i>s1</i> and <i>s2</i>.\r\n</p><p>\r\nFor example,<br>\r\nGiven:<br>\r\n<i>s1</i> = <code>\"aabcc\"</code>,<br>\r\n<i>s2</i> = <code>\"dbbca\"</code>,\r\n</p><p>\r\nWhen <i>s3</i> = <code>\"aadbbcbcac\"</code>, return true.<br>\r\nWhen <i>s3</i> = <code>\"aadbbbaccc\"</code>, return false.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/interleaving-string/", tag_id: nil},
  {name: "Unique Binary Search Trees", content: "<p></p>\n<p>Given <i>n</i>, how many structurally unique <b>BST's</b> (binary search trees) that store values 1...<i>n</i>?</p><p>\r\nFor example,<br>\r\nGiven <i>n</i> = 3, there are a total of 5 unique BST's.\r\n\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/unique-binary-search-trees/", tag_id: nil},
  {name: "Unique Binary Search Trees II", content: "<p></p>\n<p>Given <i>n</i>, generate all structurally unique <b>BST's</b> (binary search trees) that store values 1...<i>n</i>.</p><p>\r\nFor example,<br>\r\nGiven <i>n</i> = 3, your program should return all 5 unique BST's shown below.\r\n\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/unique-binary-search-trees-ii/", tag_id: nil},
  {name: "Binary Tree Inorder Traversal", content: "<p></p>\n<p>Given a binary tree, return the <i>inorder</i> traversal of its nodes' values.</p><p>\r\nFor example:<br>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br>\r\n</p>\n<p>\r\nreturn <code>[1,3,2]</code>.\r\n</p><p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/binary-tree-inorder-traversal/", tag_id: nil},
  {name: "Restore IP Addresses", content: "<p></p>\n<p>Given a string containing only digits, restore it by returning all possible valid IP address combinations.</p><p>\r\nFor example:<br>\r\nGiven <code>\"25525511135\"</code>,\r\n</p><p>\r\nreturn <code>[\"255.255.11.135\", \"255.255.111.35\"]</code>. (Order does not matter)\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/restore-ip-addresses/", tag_id: nil},
  {name: "Reverse Linked List II", content: "<p></p>\n<p>\r\nReverse a linked list from position <i>m</i> to <i>n</i>. Do it in-place and in one-pass.\r\n</p><p>\r\nFor example:<br>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>, <i>m</i> = 2 and <i>n</i> = 4,\r\n</p><p>\r\nreturn <code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL</code>.\r\n</p><p>\r\n<b>Note:</b><br>\r\nGiven <i>m</i>, <i>n</i> satisfy the following condition:<br>\r\n1 ≤ <i>m</i> ≤ <i>n</i> ≤ length of list.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/reverse-linked-list-ii/", tag_id: nil},
  {name: "Decode Ways", content: "<p></p>\n<p>\r\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping:\r\n</p><p>\r\nGiven an encoded message containing digits, determine the total number of ways to decode it.\r\n</p><p>\r\nFor example,<br>\r\nGiven encoded message <code>\"12\"</code>,\r\nit could be decoded as <code>\"AB\"</code> (1 2) or <code>\"L\"</code> (12).\r\n</p><p>\r\nThe number of ways decoding <code>\"12\"</code> is 2.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/decode-ways/", tag_id: nil},
  {name: "Subsets II", content: "<p></p>\n<p>\r\nGiven a collection of integers that might contain duplicates, <b><i>nums</i></b>, return all possible subsets.\r\n</p><p><b>Note:</b><br>\r\n</p>\n<p>\r\nFor example,<br>\r\nIf <b><i>nums</i></b> = <code>[1,2,2]</code>, a solution is:\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/subsets-ii/", tag_id: nil},
  {name: "Gray Code", content: "<p></p>\n<p>The gray code is a binary numeral system where two successive values differ in only one bit.</p><p>Given a non-negative integer <i>n</i> representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.</p><p>For example, given <i>n</i> = 2, return <code>[0,1,3,2]</code>. Its gray code sequence is:</p><p><b>Note:</b><br>\r\nFor a given <i>n</i>, a gray code sequence is not uniquely defined.\r\n</p><p>For example, <code>[0,2,3,1]</code> is also a valid gray code sequence according to the above definition.</p><p>For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/gray-code/", tag_id: nil},
  {name: "Merge Sorted Array", content: "<p></p>\n<p>Given two sorted integer arrays <i>nums1</i> and <i>nums2</i>, merge <i>nums2</i> into <i>nums1</i> as one sorted array.</p><p>\r\n<b>Note:</b><br>\r\nYou may assume that <i>nums1</i> has enough space (size that is greater or equal to <i>m</i> + <i>n</i>) to hold additional elements from <i>nums2</i>. The number of elements initialized in <i>nums1</i> and <i>nums2</i> are <i>m</i> and <i>n</i> respectively.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/merge-sorted-array/", tag_id: nil},
  {name: "Scramble String", content: "<p></p>\n<p>\r\nGiven a string <i>s1</i>, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\r\n</p><p>\r\nBelow is one possible representation of <i>s1</i> = <code>\"great\"</code>:\r\n</p><p>\r\nTo scramble the string, we may choose any non-leaf node and swap its two children.\r\n</p><p>\r\nFor example, if we choose the node <code>\"gr\"</code> and swap its two children, it produces a scrambled string <code>\"rgeat\"</code>.\r\n</p><p>\r\nWe say that <code>\"rgeat\"</code> is a scrambled string of <code>\"great\"</code>.\r\n</p><p>\r\nSimilarly, if we continue to swap the children of nodes <code>\"eat\"</code> and <code>\"at\"</code>, it produces a scrambled string <code>\"rgtae\"</code>.\r\n</p><p>\r\nWe say that <code>\"rgtae\"</code> is a scrambled string of <code>\"great\"</code>.\r\n</p><p>\r\nGiven two strings <i>s1</i> and <i>s2</i> of the same length, determine if <i>s2</i> is a scrambled string of <i>s1</i>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/scramble-string/", tag_id: nil},
  {name: "Partition List", content: "<p></p>\n<p>Given a linked list and a value <i>x</i>, partition it such that all nodes less than <i>x</i> come before nodes greater than or equal to <i>x</i>.\r\n</p><p>\r\nYou should preserve the original relative order of the nodes in each of the two partitions.\r\n</p><p>\r\nFor example,<br>\r\nGiven <code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2</code> and <i>x</i> = 3,<br>\r\nreturn <code>1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/partition-list/", tag_id: nil},
  {name: "Maximal Rectangle", content: "<p></p>\n<p>\r\nGiven a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/maximal-rectangle/", tag_id: nil},
  {name: "Largest Rectangle in Histogram", content: "<p></p>\n<p>\r\nGiven <i>n</i> non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\r\n</p><p>\r\n<img src=\"http://www.leetcode.com/wp-content/uploads/2012/04/histogram.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">Above is a histogram where width of each bar is 1, given height = <code>[2,1,5,6,2,3]</code>.</p><p>\r\n<img src=\"http://www.leetcode.com/wp-content/uploads/2012/04/histogram_area.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">The largest rectangle is shown in the shaded area, which has area = <code>10</code> unit.</p><p>\r\nFor example,<br>\r\nGiven height = <code>[2,1,5,6,2,3]</code>,<br>\r\nreturn <code>10</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/largest-rectangle-in-histogram/", tag_id: nil},
  {name: "Remove Duplicates from Sorted List", content: "<p></p>\n<p>\r\nGiven a sorted linked list, delete all duplicates such that each element appear only <i>once</i>.\r\n</p><p>\r\nFor example,<br>\r\nGiven <code>1-&gt;1-&gt;2</code>, return <code>1-&gt;2</code>.<br>\r\nGiven <code>1-&gt;1-&gt;2-&gt;3-&gt;3</code>, return <code>1-&gt;2-&gt;3</code>.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/remove-duplicates-from-sorted-list/", tag_id: nil},
  {name: "Remove Duplicates from Sorted List II", content: "<p></p>\n<p>\r\nGiven a sorted linked list, delete all nodes that have duplicate numbers, leaving only <i>distinct</i> numbers from the original list.\r\n</p><p>\r\nFor example,<br>\r\nGiven <code>1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5</code>, return <code>1-&gt;2-&gt;5</code>.<br>\r\nGiven <code>1-&gt;1-&gt;1-&gt;2-&gt;3</code>, return <code>2-&gt;3</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/", tag_id: nil},
  {name: "Search in Rotated Sorted Array II", content: "<p></p>\n<p>Follow up for \"Search in Rotated Sorted Array\":<br>\r\nWhat if <i>duplicates</i> are allowed?</p><p>Would this affect the run-time complexity? How and why?</p><p>Write a function to determine if a given target is in the array.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/", tag_id: nil},
  {name: "Remove Duplicates from Sorted Array II", content: "<p></p>\n<p>\r\nFollow up for \"Remove Duplicates\":<br>\r\nWhat if duplicates are allowed at most <i>twice</i>?</p><p>\r\nFor example,<br>\r\nGiven sorted array <i>nums</i> = <code>[1,1,1,2,2,3]</code>,\r\n</p><p>\r\nYour function should return length = <code>5</code>, with the first five elements of <i>nums</i> being <code>1</code>, <code>1</code>, <code>2</code>, <code>2</code> and <code>3</code>. It doesn't matter what you leave beyond the new length.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/", tag_id: nil},
  {name: "Word Search", content: "<p></p>\n<p>\r\nGiven a 2D board and a word, find if the word exists in the grid.\r\n</p><p>\r\nThe word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\r\n</p><p>\r\nFor example,<br>\r\nGiven <b>board</b> = \r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/word-search/", tag_id: nil},
  {name: "Subsets", content: "<p></p>\n<p>\r\nGiven a set of distinct integers, <i>nums</i>, return all possible subsets.\r\n</p><p><b>Note:</b><br>\r\n</p>\n<p>\r\nFor example,<br>\r\nIf <b><i>nums</i></b> = <code>[1,2,3]</code>, a solution is:\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/subsets/", tag_id: nil},
  {name: "Combinations", content: "<p></p>\n<p>\r\nGiven two integers <i>n</i> and <i>k</i>, return all possible combinations of <i>k</i> numbers out of 1 ... <i>n</i>.\r\n</p><p>\r\nFor example,<br>\r\nIf <i>n</i> = 4 and <i>k</i> = 2, a solution is:\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/combinations/", tag_id: nil},
  {name: "Minimum Window Substring", content: "<p></p>\n<p>\r\nGiven a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).\r\n</p><p>\r\nFor example,<br>\r\n<b>S</b> = <code>\"ADOBECODEBANC\"</code><br>\r\n<b>T</b> = <code>\"ABC\"</code><br>\r\n</p><p>\r\nMinimum window is <code>\"BANC\"</code>.\r\n</p><p>\r\n<b>Note:</b><br>\r\nIf there is no such window in S that covers all characters in T, return the emtpy string <code>\"\"</code>.\r\n</p><p>\r\nIf there are multiple such windows, you are guaranteed that there will always be only one unique minimum window in S.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/minimum-window-substring/", tag_id: nil},
  {name: "Sort Colors", content: "<p></p>\n<p>\r\nGiven an array with <i>n</i> objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.\r\n</p><p>\r\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\r\n</p><p>\r\n<b>Note:</b><br>\r\nYou are not suppose to use the library's sort function for this problem.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/sort-colors/", tag_id: nil},
  {name: "Search a 2D Matrix", content: "<p></p>\n<p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p><p>\r\n</p>\n<p>\r\nFor example,</p><p>\r\nConsider the following matrix:\r\n</p><p>Given <b>target</b> = <code>3</code>, return <code>true</code>.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/search-a-2d-matrix/", tag_id: nil},
  {name: "Set Matrix Zeroes", content: "<p></p>\n<p>\r\nGiven a <i>m</i> x <i>n</i> matrix, if an element is 0, set its entire row and column to 0. Do it in place.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/set-matrix-zeroes/", tag_id: nil},
  {name: "Edit Distance", content: "<p></p>\n<p>\r\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to convert <i>word1</i> to <i>word2</i>. (each operation is counted as 1 step.)\r\n</p><p>\r\nYou have the following 3 operations permitted on a word:\r\n</p><p>\r\na) Insert a character<br>\r\nb) Delete a character<br>\r\nc) Replace a character<br>\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/edit-distance/", tag_id: nil},
  {name: "Simplify Path", content: "<p></p>\n<p>Given an absolute path for a file (Unix-style), simplify it.</p><p>For example,<br>\r\n<b>path</b> = <code>\"/home/\"</code>, =&gt; <code>\"/home\"</code><br>\r\n<b>path</b> = <code>\"/a/./b/../../c/\"</code>, =&gt; <code>\"/c\"</code><br>\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/simplify-path/", tag_id: nil},
  {name: "Climbing Stairs", content: "<p></p>\n<p>You are climbing a stair case. It takes <i>n</i> steps to reach to the top.</p><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/climbing-stairs/", tag_id: nil},
  {name: "Sqrt(x)", content: "<p></p>\n<p>Implement <code>int sqrt(int x)</code>.</p><p>Compute and return the square root of <i>x</i>.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/sqrtx/", tag_id: nil},
  {name: "Text Justification", content: "<p></p>\n<p>\r\nGiven an array of words and a length <i>L</i>, format the text such that each line has exactly <i>L</i> characters and is fully (left and right) justified.\r\n</p><p>\r\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>' '</code> when necessary so that each line has exactly <i>L</i> characters.\r\n</p><p>\r\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\r\n</p><p>\r\nFor the last line of text, it should be left justified and no extra space is inserted between words.\r\n</p><p>\r\nFor example,<br>\r\n<b>words</b>: <code>[\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"]</code><br>\r\n<b>L</b>: <code>16</code>.\r\n</p><p>\r\nReturn the formatted lines as:<br>\r\n</p>\n<p>\r\n<b>Note:</b> Each word is guaranteed not to exceed <i>L</i> in length.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/text-justification/", tag_id: nil},
  {name: "Add Binary", content: "<p></p>\n<p>\r\nGiven two binary strings, return their sum (also a binary string).\r\n</p><p>\r\nFor example,<br>\r\na = <code>\"11\"</code><br>\r\nb = <code>\"1\"</code><br>\r\nReturn <code>\"100\"</code>.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/add-binary/", tag_id: nil},
  {name: "Plus One", content: "<p></p>\n<p>Given a non-negative number represented as an array of digits, plus one to the number.</p><p>The digits are stored such that the most significant digit is at the head of the list.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/plus-one/", tag_id: nil},
  {name: "Valid Number", content: "<p></p>\n<p>Validate if a given string is numeric.</p><p>\r\nSome examples:<br>\r\n<code>\"0\"</code> =&gt; <code>true</code><br>\r\n<code>\"   0.1  \"</code> =&gt; <code>true</code><br>\r\n<code>\"abc\"</code> =&gt; <code>false</code><br>\r\n<code>\"1 a\"</code> =&gt; <code>false</code><br>\r\n<code>\"2e10\"</code> =&gt; <code>true</code><br>\r\n</p><p><b>Note:</b> It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one.\r\n</p><p>\r\n<b><font color=\"red\">Update (2015-02-10):</font></b><br>\r\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button <span class=\"glyphicon glyphicon-refresh\"></span> to reset your code definition.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/valid-number/", tag_id: nil},
  {name: "Minimum Path Sum", content: "<p></p>\n<p>Given a <i>m</i> x <i>n</i> grid filled with non-negative numbers, find a path from top left to bottom right which <i>minimizes</i> the sum of all numbers along its path.</p><p><b>Note:</b> You can only move either down or right at any point in time.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/minimum-path-sum/", tag_id: nil},
  {name: "Unique Paths II", content: "<p></p>\n<p>Follow up for \"Unique Paths\":</p><p>Now consider if some obstacles are added to the grids. How many unique paths would there be?</p><p>An obstacle and empty space is marked as <code>1</code> and <code>0</code> respectively in the grid.</p><p>For example,<br>\r\n</p>\n<p>There is one obstacle in the middle of a 3x3 grid as illustrated below.</p><p>The total number of unique paths is <code>2</code>.</p><p><b>Note:</b> <i>m</i> and <i>n</i> will be at most 100.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/unique-paths-ii/", tag_id: nil},
  {name: "Unique Paths", content: "<p></p>\n<p>A robot is located at the top-left corner of a <i>m</i> x <i>n</i> grid (marked 'Start' in the diagram below).</p><p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).</p><p>How many possible unique paths are there?</p><p>\r\n<img src=\"http://leetcode.com/wp-content/uploads/2014/12/robot_maze.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">Above is a 3 x 7 grid. How many possible unique paths are there?\r\n</p><p><b>Note:</b> <i>m</i> and <i>n</i> will be at most 100.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/unique-paths/", tag_id: nil},
  {name: "Rotate List", content: "<p></p>\n<p>Given a list, rotate the list to the right by <i>k</i> places, where <i>k</i> is non-negative.</p><p>For example:<br>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code> and <i>k</i> = <code>2</code>,<br>\r\nreturn <code>4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL</code>.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/rotate-list/", tag_id: nil},
  {name: "Permutation Sequence", content: "<p></p>\n<p>The set <code>[1,2,3,…,<i>n</i>]</code> contains a total of <i>n</i>! unique permutations.</p><p>By listing and labeling all of the permutations in order,<br>\r\nWe get the following sequence (ie, for <i>n</i> = 3):\r\n</p>\n<p>Given <i>n</i> and <i>k</i>, return the <i>k</i><sup>th</sup> permutation sequence.</p><p><b>Note:</b> Given <i>n</i> will be between 1 and 9 inclusive.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/permutation-sequence/", tag_id: nil},
  {name: "Spiral Matrix II", content: "<p></p>\n<p>Given an integer <i>n</i>, generate a square matrix filled with elements from 1 to <i>n</i><sup>2</sup> in spiral order.</p><p>\r\nFor example,<br>\r\nGiven <i>n</i> = <code>3</code>,\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/spiral-matrix-ii/", tag_id: nil},
  {name: "Length of Last Word", content: "<p></p>\n<p>Given a string <i>s</i> consists of upper/lower-case alphabets and empty space characters <code>' '</code>, return the length of last word in the string.</p><p>If the last word does not exist, return 0.</p><p><b>Note:</b> A word is defined as a character sequence consists of non-space characters only.</p><p>\r\nFor example, <br>\r\nGiven <i>s</i> = <code>\"Hello World\"</code>,<br>\r\nreturn <code>5</code>.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/length-of-last-word/", tag_id: nil},
  {name: "Insert Interval", content: "<p></p>\n<p>Given a set of <i>non-overlapping</i> intervals, insert a new interval into the intervals (merge if necessary).</p><p>You may assume that the intervals were initially sorted according to their start times.</p><p>\r\n<b>Example 1:</b><br>\r\nGiven intervals <code>[1,3],[6,9]</code>, insert and merge <code>[2,5]</code> in as <code>[1,5],[6,9]</code>.\r\n</p><p>\r\n<b>Example 2:</b><br>\r\nGiven <code>[1,2],[3,5],[6,7],[8,10],[12,16]</code>, insert and merge <code>[4,9]</code> in as <code>[1,2],[3,10],[12,16]</code>.\r\n</p><p>\r\nThis is because the new interval <code>[4,9]</code> overlaps with <code>[3,5],[6,7],[8,10]</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/insert-interval/", tag_id: nil},
  {name: "Merge Intervals", content: "<p></p>\n<p>Given a collection of intervals, merge all overlapping intervals.</p><p>\r\nFor example,<br>\r\nGiven <code>[1,3],[2,6],[8,10],[15,18]</code>,<br>\r\nreturn <code>[1,6],[8,10],[15,18]</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/merge-intervals/", tag_id: nil},
  {name: "Jump Game", content: "<p></p>\n<p>\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n</p><p>\r\nEach element in the array represents your maximum jump length at that position. \r\n</p><p>\r\nDetermine if you are able to reach the last index.\r\n</p><p>\r\nFor example:<br>\r\nA = <code>[2,3,1,1,4]</code>, return <code>true</code>.\r\n</p><p>\r\nA = <code>[3,2,1,0,4]</code>, return <code>false</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/jump-game/", tag_id: nil},
  {name: "Spiral Matrix", content: "<p></p>\n<p>Given a matrix of <i>m</i> x <i>n</i> elements (<i>m</i> rows, <i>n</i> columns), return all elements of the matrix in spiral order.\r\n</p><p>\r\nFor example,<br>\r\nGiven the following matrix:\r\n</p><p>\r\nYou should return <code>[1,2,3,6,9,8,7,4,5]</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/spiral-matrix/", tag_id: nil},
  {name: "Maximum Subarray", content: "<p></p>\n<p>\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest sum.\r\n</p><p>\r\nFor example, given the array <code>[−2,1,−3,4,−1,2,1,−5,4]</code>,<br>\r\nthe contiguous subarray <code>[4,−1,2,1]</code> has the largest sum = <code>6</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/maximum-subarray/", tag_id: nil},
  {name: "N-Queens II", content: "<p></p>\n<p>Follow up for N-Queens problem.</p><p>Now, instead outputting board configurations, return the total number of distinct solutions.</p><p><img src=\"http://www.leetcode.com/wp-content/uploads/2012/03/8-queens.png\"></p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/n-queens-ii/", tag_id: nil},
  {name: "N-Queens", content: "<p></p>\n<p>The <i>n</i>-queens puzzle is the problem of placing <i>n</i> queens on an <i>n</i>×<i>n</i> chessboard such that no two queens attack each other.</p><p><img src=\"http://www.leetcode.com/wp-content/uploads/2012/03/8-queens.png\"></p><p>Given an integer <i>n</i>, return all distinct solutions to the <i>n</i>-queens puzzle.</p><p>Each solution contains a distinct board configuration of the <i>n</i>-queens' placement, where <code>'Q'</code> and <code>'.'</code> both indicate a queen and an empty space respectively.</p><p>For example,<br>\r\nThere exist two distinct solutions to the 4-queens puzzle:</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/n-queens/", tag_id: nil},
  {name: "Pow(x, n)", content: "<p></p>\n<p>Implement pow(<i>x</i>, <i>n</i>).\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/powx-n/", tag_id: nil},
  {name: "Anagrams", content: "<p></p>\n<p>Given an array of strings, return all groups of strings that are anagrams.\r\n</p><p>Note: All inputs will be in lower-case.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/anagrams/", tag_id: nil},
  {name: "Rotate Image", content: "<p></p>\n<p>You are given an <i>n</i> x <i>n</i> 2D matrix representing an image.</p><p>Rotate the image by 90 degrees (clockwise).</p><p>Follow up:<br>\r\nCould you do this in-place?</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/rotate-image/", tag_id: nil},
  {name: "Permutations II", content: "<p></p>\n<p>\r\nGiven a collection of numbers that might contain duplicates, return all possible unique permutations.\r\n</p><p>\r\nFor example,<br>\r\n<code>[1,1,2]</code> have the following unique permutations:<br>\r\n<code>[1,1,2]</code>, <code>[1,2,1]</code>, and <code>[2,1,1]</code>.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/permutations-ii/", tag_id: nil},
  {name: "Permutations", content: "<p></p>\n<p>\r\nGiven a collection of numbers, return all possible permutations.\r\n</p><p>\r\nFor example,<br>\r\n<code>[1,2,3]</code> have the following permutations:<br>\r\n<code>[1,2,3]</code>, <code>[1,3,2]</code>, <code>[2,1,3]</code>, <code>[2,3,1]</code>, <code>[3,1,2]</code>, and <code>[3,2,1]</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/permutations/", tag_id: nil},
  {name: "Jump Game II", content: "<p></p>\n<p>\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n</p><p>\r\nEach element in the array represents your maximum jump length at that position. \r\n</p><p>\r\nYour goal is to reach the last index in the minimum number of jumps.\r\n</p><p>\r\nFor example:<br>\r\nGiven array A = <code>[2,3,1,1,4]</code>\r\n</p><p>\r\nThe minimum number of jumps to reach the last index is <code>2</code>. (Jump <code>1</code> step from index 0 to 1, then <code>3</code> steps to the last index.)\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/jump-game-ii/", tag_id: nil},
  {name: "Wildcard Matching", content: "<p></p>\n<p>Implement wildcard pattern matching with support for <code>'?'</code> and <code>'*'</code>.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/wildcard-matching/", tag_id: nil},
  {name: "Multiply Strings", content: "<p></p>\n<p>Given two numbers represented as strings, return multiplication of the numbers as a string.</p><p>Note: The numbers can be arbitrarily large and are non-negative.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/multiply-strings/", tag_id: nil},
  {name: "Trapping Rain Water", content: "<p></p>\n<p>\r\nGiven <i>n</i> non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. \r\n</p><p>\r\nFor example, <br>\r\nGiven <code>[0,1,0,2,1,0,1,3,2,1,2,1]</code>, return <code>6</code>.\r\n</p><p>\r\n<img src=\"http://www.leetcode.com/wp-content/uploads/2012/08/rainwatertrap.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. <b>Thanks Marcos</b> for contributing this image!</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/trapping-rain-water/", tag_id: nil},
  {name: "First Missing Positive", content: "<p></p>\n<p>\r\nGiven an unsorted integer array, find the first missing positive integer.\r\n</p><p>\r\nFor example,<br>\r\nGiven <code>[1,2,0]</code> return <code>3</code>,<br>\r\nand <code>[3,4,-1,1]</code> return <code>2</code>.\r\n</p><p>\r\nYour algorithm should run in <i>O</i>(<i>n</i>) time and uses constant space.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/first-missing-positive/", tag_id: nil},
  {name: "Combination Sum II", content: "<p></p>\n<p>\r\nGiven a collection of candidate numbers (<b><i>C</i></b>) and a target number (<b><i>T</i></b>), find all unique combinations in <b><i>C</i></b> where the candidate numbers sums to <b><i>T</i></b>.\r\n</p><p>Each number in <b><i>C</i></b> may only be used <b>once</b> in the combination.\r\n</p><p><b>Note:</b><br>\r\n</p>\n<p>\r\nFor example, given candidate set <code>10,1,2,7,6,1,5</code> and target <code>8</code>, <br>\r\nA solution set is: <br>\r\n<code>[1, 7]</code> <br>\r\n<code>[1, 2, 5]</code> <br>\r\n<code>[2, 6]</code> <br>\r\n<code>[1, 1, 6]</code> <br>\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/combination-sum-ii/", tag_id: nil},
  {name: "Combination Sum", content: "<p></p>\n<p>\r\nGiven a set of candidate numbers (<b><i>C</i></b>) and a target number (<b><i>T</i></b>), find all unique combinations in <b><i>C</i></b> where the candidate numbers sums to <b><i>T</i></b>. \r\n</p><p>The <b>same</b> repeated number may be chosen from <b><i>C</i></b> unlimited number of times.\r\n</p><p><b>Note:</b><br>\r\n</p>\n<p>\r\nFor example, given candidate set <code>2,3,6,7</code> and target <code>7</code>, <br>\r\nA solution set is: <br>\r\n<code>[7]</code> <br>\r\n<code>[2, 2, 3]</code> <br>\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/combination-sum/", tag_id: nil},
  {name: "Count and Say", content: "<p></p>\n<p>The count-and-say sequence is the sequence of integers beginning as follows:<br>\r\n<code>1, 11, 21, 1211, 111221, ...</code>\r\n</p><p>\r\n<code>1</code> is read off as <code>\"one 1\"</code> or <code>11</code>.<br>\r\n<code>11</code> is read off as <code>\"two 1s\"</code> or <code>21</code>.<br>\r\n<code>21</code> is read off as <code>\"one 2</code>, then <code>one 1\"</code> or <code>1211</code>.<br>\r\n</p><p>\r\nGiven an integer <i>n</i>, generate the <i>n</i><sup>th</sup> sequence.\r\n</p><p>\r\nNote: The sequence of integers will be represented as a string.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/count-and-say/", tag_id: nil},
  {name: "Sudoku Solver", content: "<p></p>\n<p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p><p>Empty cells are indicated by the character <code>'.'</code>.</p><p>You may assume that there will be only one unique solution.\r\n\r\n</p>\n<p>\r\n<img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">A sudoku puzzle...</p><p>\r\n<img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">...and its solution numbers marked in red.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/sudoku-solver/", tag_id: nil},
  {name: "Valid Sudoku", content: "<p></p>\n<p>Determine if a Sudoku is valid, according to: <a href=\"http://sudoku.com.au/TheRules.aspx\">Sudoku Puzzles - The Rules</a>.</p><p>The Sudoku board could be partially filled, where empty cells are filled with the character <code>'.'</code>.</p><p>\r\n<img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\"><br>\r\n</p>\n<p style=\"font-size: 11px\">A partially filled sudoku which is valid.</p><p><b>Note:</b><br>\r\nA valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/valid-sudoku/", tag_id: nil},
  {name: "Search Insert Position", content: "<p></p>\n<p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p><p>You may assume no duplicates in the array.</p><p>\r\nHere are few examples.<br>\r\n<code>[1,3,5,6]</code>, 5 → 2<br>\r\n<code>[1,3,5,6]</code>, 2 → 1<br>\r\n<code>[1,3,5,6]</code>, 7 → 4<br>\r\n<code>[1,3,5,6]</code>, 0 → 0\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/search-insert-position/", tag_id: nil},
  {name: "Search for a Range", content: "<p></p>\n<p>Given a sorted array of integers, find the starting and ending position of a given target value.</p><p>Your algorithm's runtime complexity must be in the order of <i>O</i>(log <i>n</i>).</p><p>If the target is not found in the array, return <code>[-1, -1]</code>.</p><p>\r\nFor example,<br>\r\nGiven <code>[5, 7, 7, 8, 8, 10]</code> and target value 8,<br>\r\nreturn <code>[3, 4]</code>.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/search-for-a-range/", tag_id: nil},
  {name: "Search in Rotated Sorted Array", content: "<p></p>\n<p>Suppose a sorted array is rotated at some pivot unknown to you beforehand.</p><p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p><p>You are given a target value to search. If found in the array return its index, otherwise return -1.</p><p>You may assume no duplicate exists in the array.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/search-in-rotated-sorted-array/", tag_id: nil},
  {name: "Longest Valid Parentheses", content: "<p></p>\n<p>Given a string containing just the characters <code>'('</code> and <code>')'</code>, find the length of the longest valid (well-formed) parentheses substring.\r\n</p><p>\r\nFor <code>\"(()\"</code>, the longest valid parentheses substring is <code>\"()\"</code>, which has length = 2.\r\n</p><p>\r\nAnother example is <code>\")()())\"</code>, where the longest valid parentheses substring is <code>\"()()\"</code>, which has length = 4.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/longest-valid-parentheses/", tag_id: nil},
  {name: "Next Permutation", content: "<p></p>\n<p>\r\nImplement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\r\n</p><p>\r\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\r\n</p><p>\r\nThe replacement must be in-place, do not allocate extra memory.\r\n</p><p>\r\nHere are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.<br>\r\n<code>1,2,3</code> → <code>1,3,2</code><br>\r\n<code>3,2,1</code> → <code>1,2,3</code><br>\r\n<code>1,1,5</code> → <code>1,5,1</code><br>\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/next-permutation/", tag_id: nil},
  {name: "Substring with Concatenation of All Words", content: "<p></p>\n<p>\r\nYou are given a string, <b>s</b>, and a list of words, <b>words</b>, that are all of the same length. Find all starting indices of substring(s) in <b>s</b> that is a concatenation of each word in <b>words</b> exactly once and without any intervening characters.\r\n</p><p>\r\nFor example, given:<br>\r\n<b>s</b>: <code>\"barfoothefoobarman\"</code><br>\r\n<b>words</b>: <code>[\"foo\", \"bar\"]</code>\r\n</p><p>\r\nYou should return the indices: <code>[0,9]</code>.<br>\r\n(order does not matter).\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/substring-with-concatenation-of-all-words/", tag_id: nil},
  {name: "Divide Two Integers", content: "<p></p>\n<p>\r\nDivide two integers without using multiplication, division and mod operator.\r\n</p><p>\r\nIf it is overflow, return MAX_INT.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/divide-two-integers/", tag_id: nil},
  {name: "Implement strStr()", content: "<p></p>\n<p>\r\nImplement strStr().\r\n</p><p>\r\nReturns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\r\n</p><p>\r\n<b><font color=\"red\">Update (2014-11-02):</font></b><br>\r\nThe signature of the function had been updated to return the <i>index</i> instead of the pointer. If you still see your function signature returns a <code>char *</code> or <code>String</code>, please click the reload button <span class=\"glyphicon glyphicon-refresh\"></span> to reset your code definition.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/implement-strstr/", tag_id: nil},
  {name: "Remove Element", content: "<p></p>\n<p>Given an array and a value, remove all instances of that value in place and return the new length.\r\n</p><p>\r\nThe order of elements can be changed. It doesn't matter what you leave beyond the new length.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/remove-element/", tag_id: nil},
  {name: "Remove Duplicates from Sorted Array", content: "<p></p>\n<p>\r\nGiven a sorted array, remove the duplicates in place such that each element appear only <i>once</i> and return the new length.</p><p>\r\nDo not allocate extra space for another array, you must do this in place with constant memory.\r\n</p><p>\r\nFor example,<br>\r\nGiven input array <i>nums</i> = <code>[1,1,2]</code>,\r\n</p><p>\r\nYour function should return length = <code>2</code>, with the first two elements of <i>nums</i> being <code>1</code> and <code>2</code> respectively. It doesn't matter what you leave beyond the new length.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/remove-duplicates-from-sorted-array/", tag_id: nil},
  {name: "Reverse Nodes in k-Group", content: "<p></p>\n<p>\r\nGiven a linked list, reverse the nodes of a linked list <i>k</i> at a time and return its modified list.\r\n</p><p>\r\nIf the number of nodes is not a multiple of <i>k</i> then left-out nodes in the end should remain as it is.</p><p>You may not alter the values in the nodes, only nodes itself may be changed.</p><p>Only constant memory is allowed.</p><p>\r\nFor example,<br>\r\nGiven this linked list: <code>1-&gt;2-&gt;3-&gt;4-&gt;5</code>\r\n</p><p>\r\nFor <i>k</i> = 2, you should return: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code>\r\n</p><p>\r\nFor <i>k</i> = 3, you should return: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code>\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/reverse-nodes-in-k-group/", tag_id: nil},
  {name: "Swap Nodes in Pairs", content: "<p></p>\n<p>\r\nGiven a linked list, swap every two adjacent nodes and return its head.\r\n</p><p>\r\nFor example,<br>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4</code>, you should return the list as <code>2-&gt;1-&gt;4-&gt;3</code>.\r\n</p><p>\r\nYour algorithm should use only constant space. You may <b>not</b> modify the values in the list, only nodes itself can be changed.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/swap-nodes-in-pairs/", tag_id: nil},
  {name: "Merge k Sorted Lists", content: "<p></p>\n<p>\r\nMerge <i>k</i> sorted linked lists and return it as one sorted list. Analyze and describe its complexity.\r\n</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/merge-k-sorted-lists/", tag_id: nil},
  {name: "Generate Parentheses", content: "<p></p>\n<p>\r\nGiven <i>n</i> pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\r\n</p><p>\r\nFor example, given <i>n</i> = 3, a solution set is:\r\n</p><p>\r\n<code>\"((()))\", \"(()())\", \"(())()\", \"()(())\", \"()()()\"</code>\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/generate-parentheses/", tag_id: nil},
  {name: "Merge Two Sorted Lists", content: "<p></p>\n<p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/merge-two-sorted-lists/", tag_id: nil},
  {name: "Valid Parentheses", content: "<p></p>\n<p>Given a string containing just the characters <code>'('</code>, <code>')'</code>, <code>'{'</code>, <code>'}'</code>, <code>'['</code> and <code>']'</code>, determine if the input string is valid.</p><p>The brackets must close in the correct order, <code>\"()\"</code> and <code>\"()[]{}\"</code> are all valid but <code>\"(]\"</code> and <code>\"([)]\"</code> are not.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/valid-parentheses/", tag_id: nil},
  {name: "Remove Nth Node From End of List", content: "<p></p>\n<p>Given a linked list, remove the <i>n</i><sup>th</sup> node from the end of list and return its head.</p><p>\r\nFor example,</p><p>\r\n<b>Note:</b><br>\r\nGiven <i>n</i> will always be valid.<br>\r\nTry to do this in one pass.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/remove-nth-node-from-end-of-list/", tag_id: nil},
  {name: "4Sum", content: "<p></p>\n<p>Given an array <i>S</i> of <i>n</i> integers, are there elements <i>a</i>, <i>b</i>, <i>c</i>, and <i>d</i> in <i>S</i> such that <i>a</i> + <i>b</i> + <i>c</i> + <i>d</i> = target? Find all unique quadruplets in the array which gives the sum of target.</p><p><b>Note:</b><br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/4sum/", tag_id: nil},
  {name: "Letter Combinations of a Phone Number", content: "<p></p>\n<p>Given a digit string, return all possible letter combinations that the number could represent.\r\n</p><p>\r\nA mapping of digit to letters (just like on the telephone buttons) is given below.</p><p><img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Telephone-keypad2.svg/200px-Telephone-keypad2.svg.png\"></p><p>\r\n<b>Note:</b><br>\r\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/letter-combinations-of-a-phone-number/", tag_id: nil},
  {name: "3Sum Closest", content: "<p></p>\n<p>Given an array <i>S</i> of <i>n</i> integers, find three integers in <i>S</i> such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/3sum-closest/", tag_id: nil},
  {name: "3Sum", content: "<p></p>\n<p>Given an array <i>S</i> of <i>n</i> integers, are there elements <i>a</i>, <i>b</i>, <i>c</i> in <i>S</i> such that <i>a</i> + <i>b</i> + <i>c</i> = 0? Find all unique triplets in the array which gives the sum of zero.</p><p><b>Note:</b><br>\r\n</p>\n", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/3sum/", tag_id: nil},
  {name: "Longest Common Prefix", content: "<p></p>\n<p>Write a function to find the longest common prefix string amongst an array of strings.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/longest-common-prefix/", tag_id: nil},
  {name: "Roman to Integer", content: "<p></p>\n<p>Given a roman numeral, convert it to an integer.</p><p>Input is guaranteed to be within the range from 1 to 3999.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/roman-to-integer/", tag_id: nil},
  {name: "Integer to Roman", content: "<p></p>\n<p>Given an integer, convert it to a roman numeral.\r\n</p><p>Input is guaranteed to be within the range from 1 to 3999.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/integer-to-roman/", tag_id: nil},
  {name: "Container With Most Water", content: "<p></p>\n<p>Given <i>n</i> non-negative integers <i>a<sub>1</sub></i>, <i>a<sub>2</sub></i>, ..., <i>a<sub>n</sub></i>, where each represents a point at coordinate (<i>i</i>, <i>a<sub>i</sub></i>). <i>n</i> vertical lines are drawn such that the two endpoints of line <i>i</i> is at (<i>i</i>, <i>a<sub>i</sub></i>) and (<i>i</i>, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\r\n</p><p>Note: You may not slant the container.\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/container-with-most-water/", tag_id: nil},
  {name: "Regular Expression Matching", content: "<p></p>\n<p>Implement regular expression matching with support for <code>'.'</code> and <code>'*'</code>.</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/regular-expression-matching/", tag_id: nil},
  {name: "Palindrome Number", content: "<p></p>\n<p>Determine whether an integer is a palindrome. Do this without extra space.</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/palindrome-number/", tag_id: nil},
  {name: "String to Integer (atoi)", content: "<p></p>\n<p>Implement <span style=\"font-family:monospace\">atoi</span> to convert a string to an integer.</p><p><b>Hint:</b> Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.</p><p>\r\n<b>Notes:</b> \r\nIt is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front. </p><p>\r\n<b><font color=\"red\">Update (2015-02-10):</font></b><br>\r\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button <span class=\"glyphicon glyphicon-refresh\"></span> to reset your code definition.\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/string-to-integer-atoi/", tag_id: nil},
  {name: "Reverse Integer", content: "<p></p>\n<p>Reverse digits of an integer.</p><p style=\"font-family:monospace\">\r\n<b>Example1:</b> x =  123, return  321<br>\r\n<b>Example2:</b> x = -123, return -321\r\n</p>", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/reverse-integer/", tag_id: nil},
  {name: "ZigZag Conversion", content: "<p></p>\n<p>\r\nThe string <code>\"PAYPALISHIRING\"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\r\n</p>\n<p>\r\nWrite the code that will take a string and make this conversion given a number of rows:\r\n\r\n</p>\n", user_id: nil, difficulty: "Easy", link: "https://leetcode.com/problems/zigzag-conversion/", tag_id: nil},
  {name: "Longest Palindromic Substring", content: "<p></p>\n<p>Given a string <i>S</i>, find the longest palindromic substring in <i>S</i>. You may assume that the maximum length of <i>S</i> is 1000, and there exists one unique longest palindromic substring.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/longest-palindromic-substring/", tag_id: nil},
  {name: "Median of Two Sorted Arrays", content: "<p></p>\n<p>There are two sorted arrays <b>nums1</b> and <b>nums2</b> of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>", user_id: nil, difficulty: "Hard", link: "https://leetcode.com/problems/median-of-two-sorted-arrays/", tag_id: nil},
  {name: "Longest Substring Without Repeating Characters", content: "<p></p>\n<p>Given a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for \"abcabcbb\" is \"abc\", which the length is 3. For \"bbbbb\" the longest substring is \"b\", with the length of 1.</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/longest-substring-without-repeating-characters/", tag_id: nil},
  {name: "Add Two Numbers", content: "<p></p>\n<p>You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p><p style=\"font-family:monospace\">\r\n<b>Input:</b> (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>\r\n<b>Output:</b> 7 -&gt; 0 -&gt; 8</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/add-two-numbers/", tag_id: nil},
  {name: "Two Sum", content: "<p></p>\n<p>Given an array of integers, find two numbers such that they add up to a specific target number.</p><p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p><p>You may assume that each input would have exactly one solution.</p><p style=\"font-family:monospace\">\r\n<b>Input:</b> numbers={2, 7, 11, 15}, target=9<br>\r\n<b>Output:</b> index1=1, index2=2\r\n</p>", user_id: nil, difficulty: "Medium", link: "https://leetcode.com/problems/two-sum/", tag_id: nil},
  {name: "Steve Yegge’s Phone-Screen Coding Exercises: A simple set of programming exercises based on a blog entry by Steve Yegge", content: "<p>Steve Yegge is a programmer and popular blogger.  One of his blog <a href=\"http://steve.yegge.googlepages.com/five-essential-phone-screen-questions\">entries</a> proposes these seven phone-screen coding exercises:</p><p>Your task is to write solutions to stevey’s phone-screen exercises.  When you are finished, you are welcome to <a href=\"/2009/06/30/steve-yegges-phone-screen-coding-exercises/2/\">read</a> a suggested solution, or to post your solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2009/06/30/steve-yegges-phone-screen-coding-exercises/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2009/06/30/steve-yegges-phone-screen-coding-exercises/", tag_id: nil},
  {name: "Unwrapping A Spiral: An exercise in recursion", content: "<p>This <a href=\"http://www.technicalypto.com/2010/05/print-matrix-in-circular-path-interview.html\">exercise</a> appeared on <a href=\"http://reddit.com/r/programming\">Proggit</a> a while ago.  The task is to enumerate the elements of a matrix in spiral order.  For instance, consider the matrix:</p><p><code> 1  2  3  4<br>\n 5  6  7  8<br>\n 9 10 11 12<br>\n13 14 15 16<br>\n17 18 19 20</code></p><p>The spiral starts across the first row, yielding 1, 2, 3, and 4.  Then the spiral turns right and runs down the right column, yielding 8, 12, 16, and 20.  The spiral turns right again and runs across the bottom row, from right to left, yielding 19, 18, and 17.  Then up the first column with 13, 9, 5, right with 6 and 7, down with 11 and 15, right to 14, and up to 10.  Thus, unwrapping the given matrix in a spiral gives the list of elements 1, 2, 3, 4, 8, 12, 16, 20, 19, 18, 17, 13, 9, 5, 6, 7, 11, 15, 14, and 10.</p><p>Your task is to write a function to unwrap spirals.  When you are finished, you are welcome to <a href=\"/2010/06/01/unwrapping-a-spiral/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/fCkL3Qmj\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2010/06/01/unwrapping-a-spiral/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2010/06/01/unwrapping-a-spiral/", tag_id: nil},
  {name: "Happy Numbers: Iterating the sum of the squares of the digits terminates with one", content: "<p>Over at <a href=\"http://steamcode.blogspot.com/2010/07/happy-numbers.html\">SteamCode</a>, Scott LaBounty suggests that writing a program to compute the happy numbers less than <em>n</em> makes a good interview question.  According to <a href=\"http://en.wikipedia.org/wiki/Happy_number\">Wikipedia</a>:</p><p>A happy number is defined by the following process.  Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.  Those numbers for which this process ends in 1 are happy numbers, while those that do not end in 1 are unhappy numbers (or sad numbers).</p><p>For example, 7 is a happy number, as 7<sup>2</sup>=49, 4<sup>2</sup>+9<sup>2</sup>=16+81=97, 9<sup>2</sup>+7<sup>2</sup>=81+49=130, 1<sup>2</sup>+3<sup>2</sup>+0<sup>2</sup>=1+9+0=10, and 1<sup>2</sup>+0<sup>2</sup>=1+0=1.  But 17 is not a happy number, as 1<sup>2</sup>+7<sup>2</sup>=1+49=50, 5<sup>2</sup>+0<sup>2</sup>=25+0=25, 2<sup>2</sup>+5<sup>2</sup>=4+25=29, 2<sup>2</sup>+9<sup>2</sup>=4+81=85, 8<sup>2</sup>+5<sup>2</sup>=64+25=89, 8<sup>2</sup>+9<sup>2</sup>=64+81=145, 1<sup>2</sup>+4<sup>2</sup>+5<sup>2</sup>=1+16+25=42, 4<sup>2</sup>+2<sup>2</sup>=16+4=20, 2<sup>2</sup>+0<sup>2</sup>=4+0=4, 4<sup>2</sup>=16, 1<sup>2</sup>+6<sup>2</sup>=1+36=37, 3<sup>2</sup>+7<sup>2</sup>=9+49=58, and 5<sup>2</sup>+8<sup>2</sup>=25+64=89, which forms a loop.</p><p>Your task is to write a function to identify the happy numbers less than a given limit; you should work at the level of a programming interview, taking no more than about fifteen minutes, and giving a short explanation of your work to the interviewer.  When you are finished, you are welcome to <a href=\"/2010/07/23/happy-numbers/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/eLVpRpM9\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2010/07/23/happy-numbers/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2010/07/23/happy-numbers/", tag_id: nil},
  {name: "Kaprekar Numbers: Square the number and add the digits in halves", content: "<p>Wolfram’s MathWorld <a href=\"http://mathworld.wolfram.com/KaprekarNumber.html\">describes</a> Kaprekar numbers like this:</p><p>Consider an <em>n</em>-digit number <em>k</em>.  Square it and add the right <em>n</em> digits to the left <em>n</em> or <em>n</em>-1 digits. If the resultant sum is <em>k</em>, then <em>k</em> is called a Kaprekar number. For example, 9 is a Kaprekar number since 9<sup>2</sup> = 81 and 8 + 1 = 9 and 297 is a Kaprekar number since 297<sup>2</sup> = 88209 and 88 + 209 = 297.</p><p>Your task is to write a function that identifies Kaprekar numbers and to determine the Kaprekar numbers less than a thousand.  When you are finished, you are welcome to <a href=\"/2010/09/21/kaprekar-numbers/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/6qJEU7Wi\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2010/09/21/kaprekar-numbers/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2010/09/21/kaprekar-numbers/", tag_id: nil},
  {name: "String Subsets: Determine if one string is a subset of another", content: "<p>This exercise is part of our on-going series of interview questions:</p><p>Given two strings, determine if all the characters in the second string appear in the first string; thus, DA is a subset of ABCD.  Counts matter, so DAD is not a subset of ABCD, since there are two D in the second string but only one D in the first string.  You may assume that the second string is no longer than the first string.</p><p>Your task is to write a function to determine if one string is a subset of another string.  You should work as you would in a programming interview; if you find one solution, search for a better solution.  When you are finished, you are welcome to <a href=\"/2010/11/23/string-subsets/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/qH8N4FfU\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2010/11/23/string-subsets/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2010/11/23/string-subsets/", tag_id: nil},
  {name: "Population Count: Count the number of set bits (1-bits) in the binary representation of an integer", content: "<p>The population count of a bitstring is the number of set bits (1-bits) in the string.  For instance, the population count of the number 23, which is represented in binary as 10111<sub>2</sub>, is 4.  The population count is used in cryptography and error-correcting codes, among other topics in computer science; some people use it as an interview question.  The population count is also known as Hamming weight.</p><p>Your task is to write a function that determines the population count of a number representing a bitstring; you should concern yourself with the efficiency of your solution.  When you are finished, you are welcome to <a href=\"/2011/01/28/population-count/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/XdWh16R5\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/01/28/population-count/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/01/28/population-count/", tag_id: nil},
  {name: "Google Code Jam Qualification Round Africa 2010: Three simple exercises", content: "<p>Today’s three programming exercises come from the <a href=\"http://code.google.com/codejam/contest/dashboard?c=351101#s=p0\">Google Code Jam Qualification Round Africa 2010</a>:</p><p>Store Credit: You receive a credit C at a local store and would like to buy two items.  You first walk through the store and create a list L of all available items.  From this list you would like to buy two items that add up to the entire value of the credit.  The solution you provide will consist of the two integers indicating the positions of the items in your list (smaller number first).  For instance, with C=100 and L={5,75,25} the solution is 2,3; with C=200 and L={150,24,79,50,88,345,3} the solution is 1,4; and with C=8 and L={2,1,9,4,4,56,90,3} the solution is 4,5.</p><p>Reverse Words: Given a list of space separated words, reverse the order of the words.  Each input string contains L letters and W words.  An input string will only consist of letters and space characters.  There will be exactly one space character between each pair of consecutive words. For instance, the reverse of “this is a test” is “test a is this”, the reverse of “foobar” is “foobar”, and the reverse of “all your base” is “base your all”.</p><p>T9 Spelling: The Latin alphabet contains 26 characters and telephones only have ten digits on the keypad.  We would like to make it easier to write a message to your friend using a sequence of keypresses to indicate the desired characters.  The letters are mapped onto the digits as 2=ABC, 3=DEF, 4=GHI, 5=JKL, 6=MNO, 7=PQRS, 8=TUV, 9=WXYZ. To insert the character B for instance, the program would press 22.  In order to insert two characters in sequence from the same key, the user must pause before pressing the key a second time.  The space character should be printed to indicate a pause.  For example “2 2″ indicates AA whereas “22” indicates B.  Each message will consist of only lowercase characters a-z and space characters. Pressing zero emits a space.  For instance, the message “hi” is encoded as “44 444″, “yes” is encoded as “999337777”, “foo  bar” (note two spaces) is encoded as “333666 6660022 2777″, and “hello world” is encoded as “4433555 555666096667775553″.</p><p>Your task is to solve the three Code Jam exercises.  When you are finished, you are welcome to <a href=\"/2011/02/15/google-code-jam-qualification-round-africa-2010/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/qfH2FyIH\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/02/15/google-code-jam-qualification-round-africa-2010/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/02/15/google-code-jam-qualification-round-africa-2010/", tag_id: nil},
  {name: "Sliding Window Minimum: List of minimums sliding across an input list", content: "<p>The sliding window minimum problem takes a list of <em>n</em> numbers and a window size <em>k</em> and returns a list of the minimum values in each of the <em>n</em>−<em>k</em>+1 successive windows.  For instance, given the list {4, 3, 2, 1, 5, 7, 6, 8, 9} and a window of size 3, the desired output is the list {2, 1, 1, 1, 5, 6, 6}.  Richard Harter discusses this <a href=\"http://home.tiac.net/~cri/2001/slidingmin.html\">problem</a> at his blog, along with several different solutions.</p><p>The obvious solution is to report the minimum of the first k elements of the list, slide one position down the list, take the minimum of the first k elements starting at the new position, and so on, until there are less than k elements remaining.</p><p>Harter presents a better solution that he calls the <em>ascending minima</em> algorithm that requires <em>O</em>(<em>n</em>) time and <em>O</em>(<em>k</em>) space.  He uses an auxiliary data structure, a queue, that is initialized as the minimum value of the initial window, followed by the minimum value of those items in the initial window that follow the right-most occurrence of the minimum value, followed by the minimum value of those items in the initial window that follow the right-most occurrence of the second value, and so on, up to a maximum of <em>k</em> ascending minimums; each minimum is paired with the index of the position where the minimum disappears from the window.  For instance, with <em>k</em>=6 and the first six items of the input list {5, 2, 8, 6, 4, 7}, the queue will have three pairs (2 7), (4 10), and (7 11), indicating that 2 is the minimum value up to and including the 7<sup>th</sup> list element, then 4 is the minimum value for the 8<sup>th</sup>, 9<sup>th</sup> and 10<sup>th</sup> elements, and so on, unless a smaller item appears.</p><p>Once the queue of ascending minimums is initialized, output is produced by emitting the first value in the queue then updating the queue with the next item beyond the end of the current sliding window using the following three-step process:</p><p>Let’s look again at the list {4, 3, 2, 1, 5, 7, 6, 8, 9} with a window of size 3.  The initial queue has the single entry (2 5), because the minimum item is the last element of the initial window (the largest possible queue arises when the window has monotonically increasing values); the queue entry indicates that the minimum value will be 2 until after the 5<sup>th</sup> item in the input, when that minimum value “dies.”  The initial minimum 2 is output and the new item 1 is added to the queue; since 2 is greater than 1, the (2 5) entry is removed from the queue, a new (1 6) entry is added to the end of the queue, and since the current index 4 is less than the death index 6, we proceed to the next item.  Now we output the current minimum 1, add an entry (5 7) to the queue, and move on.  Again we output the current minimum 1, add an entry (6 8) to the queue, and move on.  One more time we output the current minimum 1, and an entry (8 9) to the queue, and delete (1 6) from the head of the queue since the current index has reached its death index; the queue currently contains the items (5 7) (6 8) and (8 9).  Going forward, we output 5 and delete the head of the queue, output 6, and output 6 again, at which point we stop because the current index has reached the end of the input.</p><p>Your task is to write two functions that solve the sliding window minimum problem, using the two algorithms described above.  When you are finished, you are welcome to <a href=\"/2011/02/22/sliding-window-minimum/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/zr59LnZk\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/02/22/sliding-window-minimum/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/02/22/sliding-window-minimum/", tag_id: nil},
  {name: "Reverse Words: Reverse the words in an input string", content: "<p>After we solved the reverse-words problem in an <a href=\"/2011/02/15/google-code-jam-qualification-round-africa-2010\">exercise</a> a few weeks ago, a reader complained that the suggested solution was too simple because it used library functions to split the words and later to rejoin them; he also thought the exercise should include a restriction that the string had to be reversed in-place.  I’m not sure about either of the objections, but we’ll take the opportunity to revisit a classic interview question.  We’ll also eliminate the letters-only and single-space-between-words restrictions of the <a href=\"http://code.google.com/codejam/contest/dashboard?c=351101#s=p1\">original exercise</a> from Google.  Thus, here are some sample inputs and their associated outputs; note especially the placements of leading and trailing spaces:</p><p><code>\"\" =&gt; \"\"<br>\n\" \" =&gt; \" \"<br>\n\"  \" =&gt; \"  \"<br>\n\"hello\" =&gt; \"hello\"<br>\n\"hello \" =&gt; \" hello\"<br>\n\" hello\" =&gt; \"hello \"<br>\n\"the quick brown fox\" =&gt; \"fox brown quick the\"<br>\n\"the quick  brown fox\" =&gt; \"fox brown  quick the\"<br>\n\"the quick  brown 42 fox!\" =&gt; \"fox! 42 brown  quick the\"</code></p><p>Your task is to write a reverse-words function given the definition and restrictions stated above.  When you are finished, you are welcome to <a href=\"/2011/03/08/reverse-words/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/NYohlcHq\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/03/08/reverse-words/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/03/08/reverse-words/", tag_id: nil},
  {name: "Lowest Common Ancestor: Find the lowest node in a binary search tree that is a common ancestor to two given nodes", content: "<p><img src=\"http://programmingpraxis.files.wordpress.com/2010/03/bst.png?w=460\" align=\"right\">Today’s problem appears with some regularity at places like Proggit and Stack Overflow and in lists of programming interview questions:</p><p>Given a binary tree <em>t</em> and two elements of the tree, <em>m</em> and <em>n</em>, with <em>m</em>&lt;<em>n</em>, find the lowest element of the tree (farthest from the root) that is an ancestor of both <em>m</em> and <em>n</em>.</p><p>For example, in the tree shown at right, the lowest common ancestor of 4 and 7 is 6, the lowest common ancestor of 4 and 10 is 8, and the lowest common ancestor of 1 and 4 is 3.  It is possible for an element of the tree to be its own ancestor, so the lowest common ancestor of 1 and 3 is 3, and the lowest common ancestor of 3 and 6 is 3.</p><p>Your task is to write a function that finds the lowest common ancestor of two elements of a binary tree.  When you are finished, you are welcome to <a href=\"/2011/03/11/lowest-common-ancestor/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/h8u1RuTR\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/03/11/lowest-common-ancestor/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/03/11/lowest-common-ancestor/", tag_id: nil},
  {name: "Loopy Loops: Print the numbers from 1 to 1000 without using loops or conditionals", content: "<p>I don’t like this silly question.  But it has appeared recently on <a href=\"http://news.ycombinator.com/item?id=2062058\">Hacker News</a> and Stack Overflow (<a href=\"http://stackoverflow.com/questions/4568645/printing-1-to-1000-without-loop-or-conditionals\">C/C++</a> and <a href=\"http://stackoverflow.com/questions/2044033/display-numbers-from-1-to-100-without-loops-or-conditions\">Java</a>, and probably other languages but I quit searching), and generated lots of comments on both, and it’s apparently a popular interview question, so we may as well do it here, too:</p><p>Print the numbers from 1 to 1000 without using any loop or conditional statements.  Don’t just write the printf() or cout statement 1000 times.</p><p>Your task is to write the program in your favorite language.  Have fun — think of as many solutions as you can, or the wackiest, or the fewest characters in the source file, or some other best-in-category.  When you are finished, you are welcome to <a href=\"/2011/03/18/loopy-loops/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/icuEmmu2\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/03/18/loopy-loops/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/03/18/loopy-loops/", tag_id: nil},
  {name: "Maximum Difference In An Array: Find maximum Xj &minus Xi, with i ≤ j", content: "<p>Today’s problem is this:</p><p>Given an array <em>X</em>, find the <em>j</em> and <em>i</em> that maximizes <em>X<sub>j</sub></em> − <em>X<sub>i</sub></em>, subject to the condition that <em>i</em> ≤ <em>j</em>.  If two different <em>i</em>,<em>j</em> pairs have equal differences, choose the “leftmost shortest” pair with the smallest <em>i</em> and, in case of a tie, the smallest <em>j</em>.</p><p>For instance, given an array [4, 3, 9, 1, 8, 2, 6, 7, 5], the maximum difference is 7 when <em>i</em>=3 and j=<em>4</em>.  Given the array [4, 2, 9, 1, 8, 3, 6, 7, 5], the maximum difference of 7 appears at two points, but by the leftmost-shortest rule the desired result is <em>i</em>=1 and <em>j</em>=2.  <em>I</em> and <em>j</em> need not be adjacent, as in the array [4, 3, 9, 1, 2, 6, 7, 8, 5], where the maximum difference of 7 is achieved when <em>i</em>=3 and <em>j</em>=7.  If the array is monotonically decreasing the maximum difference is 0, which by the leftmost-shortest rule occurs when <em>i</em>=0 and <em>j</em>=0.</p><p>There are at least two solutions.  The obvious solution that runs in quadratic time uses two nested loops, the outer loop over <em>i</em> from 0 to the length of the array <em>n</em> and the inner loop over <em>j</em> from <em>i</em>+1 to <em>n</em>, computing the difference between <em>X<sub>i</sub></em> and <em>X<sub>j</sub></em> and saving the result whenever a new maximum difference is found.  There is also a clever linear-time solution that traverses the array once, simultaneously searching for a new minimum value and a new maximum difference; you’ll get it if you think about it for a minute.</p><p>Your task is to write both the quadratic and linear functions to compute the maximum difference in an array, and also a test function that demonstrates they are correct.  When you are finished, you are welcome to <a href=\"/2011/04/01/maximum-difference-in-an-array/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/SlkN9AOJ\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/04/01/maximum-difference-in-an-array/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/04/01/maximum-difference-in-an-array/", tag_id: nil},
  {name: "Miscellanea: FizzBuzz, Prime Words, and Split A List", content: "<p>We have three short exercises today.</p><p><strong>FizzBuzz:</strong> Looking back over past exercises, I was surprised to find that we haven’t done this classic interview question.  You are to write a function that displays the numbers from 1 to an input parameter <em>n</em>, one per line, except that if the current number is divisible by 3 the function should write “Fizz” instead of the number, if the current number is divisible by 5 the function should write “Buzz” instead of the number, and if the current number is divisible by both 3 and 5 the function should write “FizzBuzz” instead of the number.  For instance, if <em>n</em> is 20, the program should write 1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz, 16, 17, Fizz, 19, and Buzz on twenty successive lines.</p><p><strong>Prime Words:</strong> Consider that a word consisting of digits and the letters A through Z can represent an integer in base 36, where the digits represent their base-10 counterparts, A is a decimal 10, B is a decimal 11, and so on, until Z is a decimal 35.  For instance, PRAXIS<sub>36</sub> = P<sub>36</sub> × 36<sup>5</sup> + R<sub>36</sub> × 36<sup>4</sup> + A<sub>36</sub> × 36<sup>3</sup> + X<sub>36</sub> × 36<sup>2</sup> + I<sub>36</sub> × 36<sup>1</sup> + S<sub>36</sub> × 36<sup>0</sup> = 25 × 36<sup>5</sup> + 27 × 36<sup>4</sup> + 10 × 36<sup>3</sup> + 33 × 36<sup>2</sup> + 18 × 36<sup>1</sup> + 28 × 36<sup>0</sup> = 25 × 60466176 + 27 × 1679616 + 10 × 46656 + 33 × 1296 + 18 × 36 + 28 × 1 = 1557514036.  You are to write a function that takes a base-36 number as input and returns <em>true</em> if the number is prime and <em>false</em> if the number is composite.</p><p><strong>Split A List:</strong> You are to write a function that takes an input list and returns two lists, the first half of the input list and the second half of the input list.  If the input list has an odd number of elements, it is your choice in which half to place the center element.  You are only permitted to scan the list once.</p><p>Your task is to write the three functions described above.  When you are finished, you are welcome to <a href=\"/2011/04/26/miscellanea/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/830f0msv\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/04/26/miscellanea/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/04/26/miscellanea/", tag_id: nil},
  {name: "Sum Of Two Integers: Determine if two integers in a list sum to a target", content: "<p>We have today another exercise in our on-going <a href=\"/contents/themes/#Interview%20Questions\">series</a> of interview questions:</p><p>Write a program that takes a list of integers and a target number and determines if any two integers in the list sum to the target number.  If so, return the two numbers.  If not, return an indication that no such integers exist.</p><p>Your task is to write the indicated program.  When you are finished, you are welcome to <a href=\"/2011/07/19/sum-of-two-integers/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/OVsIhFYl\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/07/19/sum-of-two-integers/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/07/19/sum-of-two-integers/", tag_id: nil},
  {name: "Word Breaks: Insert spaces between words: applepie => apple pie", content: "<p>Daniel Tunkelang posted this interview question to his <a href=\"http://thenoisychannel.com/2011/08/08/retiring-a-great-interview-problem/\">blog</a>:</p><p>Given an input string and a dictionary of words, segment the input string into a space-separated sequence of dictionary words if possible. For example, if the input string is “applepie” and dictionary contains a standard set of English words, then we would return the string “apple pie” as output.</p><p>He also gave a number of constraints: The dictionary provides a single operation, exact string lookup, and is a given to the task; you are not to consider how to implement the dictionary, nor or you to worry about stemming, spelling correction, or other aspects of the dictionary. The output may have more than two words, if there is more than one solution you only need to return one of them, and your function should indicate if there are no solutions.</p><p>Your task is to write a function that solves the “word break” problem. When you are finished, you are welcome to <a href=\"/2011/08/12/word-breaks/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/6fUMlr92\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/08/12/word-breaks/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/08/12/word-breaks/", tag_id: nil},
  {name: "Insert Into A Cyclic Sorted List: Insert a new element into a cyclic list, in order", content: "<p>Today’s task comes to us from <a href=\"http://www.ihas1337code.com/2011/08/insert-into-a-cyclic-sorted-list.html\">i has 1337 code</a>:</p><p>Given a cyclic list with elements in sorted order, write a function to insert a new element into the cyclic list that maintains the sorted order of the cyclic list. Do not assume that the cyclic list is referenced by its minimal element.</p><p>Your task is to write the function described above. When you are finished, you are welcome to <a href=\"/2011/08/16/insert-into-a-cyclic-sorted-list/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/JRWWLoi1\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/08/16/insert-into-a-cyclic-sorted-list/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/08/16/insert-into-a-cyclic-sorted-list/", tag_id: nil},
  {name: "First Non-Repeating Character: Find the first character in a string that doesn’t repeat later in the string", content: "<p>This question appears on several lists of interview questions:</p><p>Write a function that takes an input string and returns the first character from the string that is not repeated later in the string. For instance, the two letters “d” and “f” in the input string “aabcbcdeef” are non-repeating, and the function should return “d” since “f” appears later in the string. The function should return some indication if there are no non-repeating characters in the string.</p><p>Your task is to write the indicated function. When you are finished, you are welcome to <a href=\"/2011/08/19/first-non-repeating-character/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/kWBmScj6\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/08/19/first-non-repeating-character/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/08/19/first-non-repeating-character/", tag_id: nil},
  {name: "Reverse Every K Nodes Of A Linked List: Reverse the elements of a sub-list", content: "<p>Here is another from our collection of interview questions:</p><p>Given a list of elements and a block size <em>k</em>, return the list of elements with every block of <em>k</em> elements reversed, starting from the beginning of the list. For instance, given the list 1, 2, 3, 4, 5, 6 and the block size 2, the result is 2, 1, 4, 3, 6, 5.</p><p>Your task is to write a function to solve the sublist-reversal problem. When you are finished, you are welcome to <a href=\"/2011/08/26/reverse-every-k-nodes-of-a-linked-list/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/9VS3QBWC\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/08/26/reverse-every-k-nodes-of-a-linked-list/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/08/26/reverse-every-k-nodes-of-a-linked-list/", tag_id: nil},
  {name: "Two String Exercises: Remove duplicate characters, and squish adjacent blanks", content: "<p>These two problems seem to be on every list of programming interview questions:</p><p>1) Remove all duplicate characters from a string. Thus, “aaabbb” becomes “ab” and “abcbd” becomes “abcd”.</p><p>2) Replace all runs of consecutive spaces with a single space. Thus, “a.b” is unchanged and “a..b” becomes “a.b”, using a dot to make the space visible.</p><p>Your task is to write the two requested functions. When you are finished, you are welcome to <a href=\"/2011/09/02/two-string-exercises/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/3NjlYZ6s\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/09/02/two-string-exercises/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/09/02/two-string-exercises/", tag_id: nil},
  {name: "Array Duplicates: Find the duplicate integer in a large array", content: "<p>We have today another exercise from our large file of interview questions:</p><p>You are given an array with integers between 1 and 1,000,000. One integer is in the array twice. How can you determine which one?</p><p>Your task is to write code to solve the array duplicates problem. When you are finished, you are welcome to <a href=\"/2011/09/23/array-duplicates/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/sGxhES1h\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/09/23/array-duplicates/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/09/23/array-duplicates/", tag_id: nil},
  {name: "Split: Split a list in two halves using the tortoise-and-hare algorithm", content: "<p>Today’s exercise comes from our file of interview questions:</p><p>Given a list, return the first half of the list as one list and the second half of the list as a second list. For instance, given the input list {1 2 3 4}, output the two lists {1 2} and {3 4}. If the input list has an odd number of items, the middle item can go to either list, so that the input list {1 2 3 4 5} can result in the output lists {1 2} and {3 4 5} or the output lists {1 2 3} and {4 5}.</p><p>Your task is to write the function that splits a list in two halves. When you are finished, you are welcome to <a href=\"/2011/12/30/split/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/jwHWMEXX\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2011/12/30/split/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2011/12/30/split/", tag_id: nil},
  {name: "Knights On A Keypad: Count the number of knight paths on a keypad", content: "<p>Today’s exercise is an interview question that <a href=\"http://stackoverflow.com/questions/2893470/generate-10-digit-number-using-a-phone-keypad\">appeared</a> on Stack Overflow a few years ago:</p><p>The numbers on a telephone keypad are arranged thus:</p><p><code>1 2 3<br>\n4 5 6<br>\n7 8 9<br>\n  0</code></p><p>Starting from the digit 1, and choosing successive digits as a knight moves in chess, determine how many different paths can be formed of length <em>n</em>. There is no need to make a list of the paths, only to count them.</p><p>A knight moves two steps either horizontally or vertically followed by one step in the perpendicular direction; thus, from the digit 1 on the keypad a knight can move to digits 6 or 8, and from the digit 4 on the keypad a knight can move to digits 3, 9 or 0. A path may visit the same digit more than once.</p><p>Your task is to write a function that determines the number of paths of length <em>n</em> that a knight can trace on a keyboard starting from digit 1. When you are finished, you are welcome to <a href=\"/2012/01/20/knights-on-a-keypad/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/k8lxMxUC\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/01/20/knights-on-a-keypad/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/01/20/knights-on-a-keypad/", tag_id: nil},
  {name: "String Rotation: Determine if two strings are rotations of each other", content: "<p>We have today another question from our never-ending supply of interview questions:</p><p>Write a function that takes two input strings and determines if one is a rotation of the other. For instance, “ProgrammingPraxis” and “PraxisProgramming” are rotations of each other, but “ProgrammingPrasix” is not a rotation of “ProgrammingPraxis” because the last three letters are out of order.</p><p>Your task is to write the requested function. When you are finished, you are welcome to <a href=\"/2012/01/31/string-rotation/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/e2h1UyvF\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/01/31/string-rotation/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/01/31/string-rotation/", tag_id: nil},
  {name: "Search In An Ascending Matrix: Find a number in a matrix where both rows and columns are sorted in ascending order", content: "<p>Today’s exercise is taken from our inexhaustible list of interview questions:</p><p>Given an <em>m</em> by <em>n</em> matrix of integers with each row and column in ascending order, search the matrix and find the row and column where a key <em>k</em> appears, or report that <em>k</em> is not in the matrix. For instance, in the matrix</p><p><code> 1  5  7  9<br>\n 4  6 10 15<br>\n 8 11 12 19<br>\n14 16 18 21</code></p><p>the key 11 appears in row 2, column 1 (indexing from 0) and the key 13 is not present in the matrix. The obvious algorithm takes time <em>O</em>(<em>m</em> × <em>n</em>) to search the matrix row-by-row, but you must exploit the order in the matrix to find an algorithm that takes time <em>O</em>(<em>m</em> + <em>n</em>).</p><p>Your task is to write the requested search function. When you are finished, you are welcome to <a href=\"/2012/2/10/search-in-an-ascending-matrix/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/tOTusNoj\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/02/10/search-in-an-ascending-matrix/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/02/10/search-in-an-ascending-matrix/", tag_id: nil},
  {name: "Even-Odd Partition: Partition an array so all even integers precede all odd integers", content: "<p>I’m not sure where this problem comes from; it’s either homework or an interview question. Nonetheless, it is simple and fun:</p><p>Take an array of integers and partition it so that all the even integers in the array precede all the odd integers in the array. Your solution must take linear time in the size of the array and operate in-place with only a constant amount of extra space.</p><p>Your task is to write the indicated function. When you are finished, you are welcome to <a href=\"/2012/05/04/even-odd-partition/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/6JoM2tNp\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/05/04/even-odd-partition/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/05/04/even-odd-partition/", tag_id: nil},
  {name: "Min Stack: Provide push and pop operations and find the minimum element in linear time", content: "<p>Today’s exercise continues our occasional series of exercises based on interview questions:</p><p>Design a data structure that provides push and pop operations, like a stack, plus a third operation that finds the minimum element. All three operations must perform in constant time. You may assume that all elements are distinct.</p><p>Your task is to write the three indicated functions. When you are finished, you are welcome to <a href=\"/2012/07/27/min-stack/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/EdKcpMok\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/07/27/min-stack/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/07/27/min-stack/", tag_id: nil},
  {name: "4SUM: Find four numbers in an array that sum to zero", content: "<p>We have today another exercise from our inexhaustible stock of interview questions:</p><p>Given an array of integers, output a list of four integers that sum to zero (the same input integer can be used multiple times), or indicate that no such set of four integers exists. For example, given the array (2 3 1 0 -4 -1), the set of four integers (3 1 0 -4) sums to zero, as does the set (0 0 0 0).</p><p>Your task is to write a program that solves the interview question. When you are finished, you are welcome to <a href=\"/2012/08/14/4sum/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/rPIIfCh4\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/08/14/4sum/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/08/14/4sum/", tag_id: nil},
  {name: "Taxicab Numbers: Confirm an interesting observation of Srinivasa Ramanujan", content: "<p>We haven’t done a coding interview question for a while. Here’s one that is supposedly asked at Google:</p><p>The mathematician G. H. Hardy was on his way to visit his collaborator Srinivasa Ramanujan who was in the hospital. Hardy remarked to Ramanujan that he traveled in a taxi cab with license plate 1729, which seemed a dull number. To this, Ramanujan replied that 1729 was a very interesting number — it was the smallest number expressible as the sum of cubes of two numbers in two different ways. Indeed, 10<sup><small>3</small></sup> + 9<sup><small>3</small></sup> = 12<sup><small>3</small></sup> + 1<sup><small>3</small></sup> = 1729.</p><p>Given an arbitrary positive integer, how would you determine if it can be expressed as a sum of two cubes?</p><p>Your task is to write a function that returns all the ways a number can be written as the sum of two non-negative cubes; use it to verify the truth of Ramanujan’s statement. When you are finished, you are welcome to <a href=\"/2012/11/09/taxicab-numbers/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/I6l4ojtJ\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/11/09/taxicab-numbers/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/11/09/taxicab-numbers/", tag_id: nil},
  {name: "Amazon Interview Question: Find the hundred points of a million closest to the origin", content: "<p>We have today another question from our inexhaustible set of interview questions; this one comes from Amazon:</p><p>Given a million points (<em>x</em>, <em>y</em>), give an <em>O</em>(<em>n</em>) solution to find the 100 points closest to (0, 0).</p><p>Your task is to write the requested function. When you are finished, you are welcome to <a href=\"/2012/11/27/amazon-interview-question/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/ZmUkqk5Y\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2012/11/27/amazon-interview-question/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2012/11/27/amazon-interview-question/", tag_id: nil},
  {name: "Last Non-Zero Digit Of A Factorial: Find the last non-zero digit of a factorial", content: "<p>Today’s exercise appears from time to time on beginning-programmer message boards:</p><p>Write a program that, given <em>n</em>, returns the last non-zero digit of <em>n</em>! (factorial). For instance, 7! = 1 * 2 * 3 * 4 * 5 * 6 * 7 = 5040, and its last non-zero digit is 4.</p><p>Your task is to write a program to find the last non-zero digit of a factorial. When you are finished, you are welcome to <a href=\"/2013/04/05/last-non-zero-digit-of-a-factorial/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/KC3nkLTk\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/04/05/last-non-zero-digit-of-a-factorial/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/04/05/last-non-zero-digit-of-a-factorial/", tag_id: nil},
  {name: "First Unrepeated Character In A String: Find the first character that appears only once in a string", content: "<p>We have today another exercise from our never-ending supply of interview questions:</p><p>Given a string, find the first character that appears only once in the string. For instance, given the string “aabbcddd”, the first character that appears only once is the “c” found at the 4th character in the string, counting from 0. Be sure that your program properly handles the case that all characters appear more than once.</p><p>Your task is to write a program that finds the first unrepeated character in a string, and its index in the string. When you are finished, you are welcome to <a href=\"/2013/04/30/first-unrepeated-character-in-a-string/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/yNXZMJsj\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/04/30/first-unrepeated-character-in-a-string/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/04/30/first-unrepeated-character-in-a-string/", tag_id: nil},
  {name: "Longest Substring Of Two Unique Characters: Longest run of consecutive characters in a string that contains only two unique characters", content: "<p>Today’s exercise comes from our unending list of interview questions:</p><p>Find the longest run of consecutive characters in a string that contains only two unique characters; if there is a tie, return the rightmost. For instance, given input string <code>abcabcabcbcbc</code>, the longest run of two characters is the 6-character run of <code>bcbcbc</code> that ends the string.</p><p>Your task is to write the requested program. When you are finished, you are welcome to <a href=\"/2013/06/11/longest-substring-of-two-unique-characters/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/ybpvp6gv\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/06/11/longest-substring-of-two-unique-characters/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/06/11/longest-substring-of-two-unique-characters/", tag_id: nil},
  {name: "Swap List Nodes: Swap the kth node from the beginning of a list with the kth node from the end of a list", content: "<p>We have today another from our never-ending list of interview questions:</p><p>Given a linked list, swap the <em>k</em>th node from the head of the list with the <em>k</em>th node from the end of the list.</p><p>Your task is to write a function to perform the indicated task; be sure to test it thoroughly. When you are finished, you are welcome to <a href=\"/2013/06/25/swap-list-nodes/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/jsSIqs0M\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/06/25/swap-list-nodes/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/06/25/swap-list-nodes/", tag_id: nil},
  {name: "Find X[i] = i In An Array: Find an array element equal to its index", content: "<p>We have today another of our unlimited supply of interview questions: this one supposedly comes from Amazon:</p><p>Given an array <em>X</em>[0..<em>n</em>-1] of integers sorted into ascending order with no duplicates, find an array item that is also its index, so that <em>X</em>[<em>i</em>] = <em>i</em>.</p><p>For example, <em>X</em>[3] = 3 in the array shown below:</p><p><code>i     0 1 2 3 4 5<br>\nx[i] -3 0 1 3 5 7</code></p><p>Your task is to write a program that finds i. When you are finished, you are welcome to <a href=\"/2013/07/26/find-xi-i-in-an-array/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/cqxBWBKj\">run</a> a suggested solution, or to post your own solution or discuss the exericse in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/07/26/find-xi-i-in-an-array/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/07/26/find-xi-i-in-an-array/", tag_id: nil},
  {name: "Three Interview Questions: Three interview questions", content: "<p>We have three simple interview questions today:</p><p>1) Verify that a binary tree is a binary search tree. In a binary search tree, all nodes to the left of the current node have values less than the value  of the current node, all nodes to the right of the current node have values greater than the value of the current node, and those two rules hold for all nodes in the tree.</p><p>2) Remove duplicates from a list.</p><p>3) A girl counts on her fingers by counting 1 on her thumb, 2 on her index finger, 3 on her middle finge, 4 on her ring finger, and 5 on her pinkie. Then she continues the other way, counting 6 on her ring finger, 7 on her middle finger, 8 on her index finger, and 9 on her thumb. Then she continues the other other way, counting 10 on her index finger, 11 on her middle finger, 12 on her ring finger, and 13 on her pinkie. She continues in this way indefinitely. Write a program that, given <em>n</em>, determines which finger she will be on when her count reaches <em>n</em>.</p><p>Your task is to write programs that solve the three interview questions given above. When you are finished, you are welcome to <a href=\"/2013/08/23/three-interview-questions/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/ebAifNzO\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/08/23/three-interview-questions/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/08/23/three-interview-questions/", tag_id: nil},
  {name: "Find The Minimum Difference: Find the minimum difference between any item from on list and any item from another list", content: "<p>We have today another exercise from our limitless supply of interview questions:</p><p>You are given two arrays of integers, where the integers do not repeat, the two arrays have no common integers, and both arrays are sorted in ascending order.</p><p>Let <em>x</em> be any integer in the first array and <em>y</em> be any integer in the second array. Find min(abs(<em>x</em> − <em>y</em>)); i.e., find the smallest difference between any integers in the two arrays.</p><p>Your task is to write a program to find the smallest difference. When you are finished, you are welcome to <a href=\"/2013/10/15/find-the-minimum-difference/2/\">read</a> or <a href=\"http://programmingpraxis.codepad.org/4bWj9XMf\">run</a> a suggested solution, or to post your own solution or discuss the exercise in the comments below.</p><p>Pages: 1 <a href=\"http://programmingpraxis.com/2013/10/15/find-the-minimum-difference/2/\">2</a></p>", user_id: nil, difficulty: "", link: "http://programmingpraxis.com/2013/10/15/find-the-minimum-difference/", tag_id: nil}
])
Post::HABTM_Tags.create!([
  {post_id: 1, tag_id: 1},
  {post_id: 1, tag_id: 2},
  {post_id: 2, tag_id: 1},
  {post_id: 2, tag_id: 2},
  {post_id: 3, tag_id: 1},
  {post_id: 3, tag_id: 2},
  {post_id: 4, tag_id: 1},
  {post_id: 4, tag_id: 2},
  {post_id: 5, tag_id: 1},
  {post_id: 5, tag_id: 2},
  {post_id: 6, tag_id: 1},
  {post_id: 6, tag_id: 2},
  {post_id: 7, tag_id: 1},
  {post_id: 7, tag_id: 2},
  {post_id: 8, tag_id: 1},
  {post_id: 8, tag_id: 2},
  {post_id: 9, tag_id: 1},
  {post_id: 9, tag_id: 2},
  {post_id: 10, tag_id: 1},
  {post_id: 10, tag_id: 2},
  {post_id: 11, tag_id: 1},
  {post_id: 11, tag_id: 2},
  {post_id: 12, tag_id: 1},
  {post_id: 12, tag_id: 2},
  {post_id: 13, tag_id: 1},
  {post_id: 13, tag_id: 2},
  {post_id: 14, tag_id: 1},
  {post_id: 14, tag_id: 2},
  {post_id: 15, tag_id: 1},
  {post_id: 15, tag_id: 2},
  {post_id: 16, tag_id: 1},
  {post_id: 16, tag_id: 2},
  {post_id: 17, tag_id: 1},
  {post_id: 17, tag_id: 2},
  {post_id: 18, tag_id: 1},
  {post_id: 18, tag_id: 2},
  {post_id: 19, tag_id: 1},
  {post_id: 19, tag_id: 2},
  {post_id: 20, tag_id: 1},
  {post_id: 20, tag_id: 2},
  {post_id: 46, tag_id: 3},
  {post_id: 47, tag_id: 3},
  {post_id: 48, tag_id: 3},
  {post_id: 49, tag_id: 3},
  {post_id: 50, tag_id: 3},
  {post_id: 51, tag_id: 3},
  {post_id: 52, tag_id: 3},
  {post_id: 53, tag_id: 3},
  {post_id: 54, tag_id: 3},
  {post_id: 55, tag_id: 3},
  {post_id: 56, tag_id: 3},
  {post_id: 57, tag_id: 3},
  {post_id: 58, tag_id: 3},
  {post_id: 59, tag_id: 3},
  {post_id: 60, tag_id: 3},
  {post_id: 61, tag_id: 3},
  {post_id: 62, tag_id: 3},
  {post_id: 63, tag_id: 3},
  {post_id: 64, tag_id: 3},
  {post_id: 65, tag_id: 4},
  {post_id: 66, tag_id: 4},
  {post_id: 67, tag_id: 4},
  {post_id: 68, tag_id: 4},
  {post_id: 69, tag_id: 4},
  {post_id: 70, tag_id: 4},
  {post_id: 71, tag_id: 4},
  {post_id: 72, tag_id: 4},
  {post_id: 73, tag_id: 4},
  {post_id: 74, tag_id: 4},
  {post_id: 75, tag_id: 4},
  {post_id: 76, tag_id: 4},
  {post_id: 77, tag_id: 4},
  {post_id: 78, tag_id: 5},
  {post_id: 79, tag_id: 5},
  {post_id: 80, tag_id: 5},
  {post_id: 81, tag_id: 5},
  {post_id: 82, tag_id: 5},
  {post_id: 83, tag_id: 5},
  {post_id: 84, tag_id: 5},
  {post_id: 85, tag_id: 5},
  {post_id: 86, tag_id: 5},
  {post_id: 87, tag_id: 5},
  {post_id: 88, tag_id: 5},
  {post_id: 89, tag_id: 5},
  {post_id: 90, tag_id: 5},
  {post_id: 91, tag_id: 5},
  {post_id: 92, tag_id: 5},
  {post_id: 93, tag_id: 5},
  {post_id: 94, tag_id: 5},
  {post_id: 95, tag_id: 5},
  {post_id: 96, tag_id: 5},
  {post_id: 97, tag_id: 5},
  {post_id: 98, tag_id: 5},
  {post_id: 99, tag_id: 5},
  {post_id: 100, tag_id: 5},
  {post_id: 101, tag_id: 5},
  {post_id: 102, tag_id: 5},
  {post_id: 103, tag_id: 5},
  {post_id: 104, tag_id: 5},
  {post_id: 105, tag_id: 5},
  {post_id: 106, tag_id: 5},
  {post_id: 107, tag_id: 5},
  {post_id: 108, tag_id: 5},
  {post_id: 109, tag_id: 6},
  {post_id: 110, tag_id: 6},
  {post_id: 111, tag_id: 6},
  {post_id: 112, tag_id: 6},
  {post_id: 113, tag_id: 6},
  {post_id: 114, tag_id: 6},
  {post_id: 115, tag_id: 6},
  {post_id: 116, tag_id: 6},
  {post_id: 117, tag_id: 6},
  {post_id: 118, tag_id: 6},
  {post_id: 119, tag_id: 6},
  {post_id: 120, tag_id: 6},
  {post_id: 121, tag_id: 6},
  {post_id: 122, tag_id: 6},
  {post_id: 123, tag_id: 6},
  {post_id: 124, tag_id: 6},
  {post_id: 125, tag_id: 6},
  {post_id: 126, tag_id: 6},
  {post_id: 127, tag_id: 6},
  {post_id: 128, tag_id: 6},
  {post_id: 129, tag_id: 6},
  {post_id: 130, tag_id: 6},
  {post_id: 131, tag_id: 6},
  {post_id: 132, tag_id: 6},
  {post_id: 133, tag_id: 6},
  {post_id: 134, tag_id: 6},
  {post_id: 135, tag_id: 6},
  {post_id: 136, tag_id: 6},
  {post_id: 137, tag_id: 6},
  {post_id: 138, tag_id: 6},
  {post_id: 139, tag_id: 6},
  {post_id: 140, tag_id: 6},
  {post_id: 141, tag_id: 6},
  {post_id: 142, tag_id: 6},
  {post_id: 143, tag_id: 6},
  {post_id: 144, tag_id: 7},
  {post_id: 145, tag_id: 7},
  {post_id: 146, tag_id: 7},
  {post_id: 147, tag_id: 7},
  {post_id: 148, tag_id: 8},
  {post_id: 149, tag_id: 8},
  {post_id: 150, tag_id: 8},
  {post_id: 151, tag_id: 9},
  {post_id: 152, tag_id: 9},
  {post_id: 153, tag_id: 9},
  {post_id: 154, tag_id: 9},
  {post_id: 155, tag_id: 9},
  {post_id: 156, tag_id: 10},
  {post_id: 157, tag_id: 10},
  {post_id: 158, tag_id: 10},
  {post_id: 159, tag_id: 10},
  {post_id: 160, tag_id: 10},
  {post_id: 161, tag_id: 6},
  {post_id: 162, tag_id: 6},
  {post_id: 163, tag_id: 6},
  {post_id: 164, tag_id: 6},
  {post_id: 165, tag_id: 6},
  {post_id: 166, tag_id: 6},
  {post_id: 167, tag_id: 6},
  {post_id: 168, tag_id: 6},
  {post_id: 169, tag_id: 6},
  {post_id: 170, tag_id: 6},
  {post_id: 171, tag_id: 6},
  {post_id: 172, tag_id: 6},
  {post_id: 173, tag_id: 6},
  {post_id: 174, tag_id: 6},
  {post_id: 175, tag_id: 6},
  {post_id: 176, tag_id: 6},
  {post_id: 177, tag_id: 6},
  {post_id: 178, tag_id: 6},
  {post_id: 179, tag_id: 6},
  {post_id: 180, tag_id: 6},
  {post_id: 181, tag_id: 6},
  {post_id: 182, tag_id: 5},
  {post_id: 183, tag_id: 5},
  {post_id: 184, tag_id: 5},
  {post_id: 185, tag_id: 5},
  {post_id: 186, tag_id: 5},
  {post_id: 187, tag_id: 5},
  {post_id: 188, tag_id: 5},
  {post_id: 189, tag_id: 5},
  {post_id: 190, tag_id: 5},
  {post_id: 191, tag_id: 5},
  {post_id: 192, tag_id: 5},
  {post_id: 193, tag_id: 5},
  {post_id: 194, tag_id: 5},
  {post_id: 195, tag_id: 5},
  {post_id: 196, tag_id: 5},
  {post_id: 197, tag_id: 5},
  {post_id: 198, tag_id: 5},
  {post_id: 199, tag_id: 5},
  {post_id: 200, tag_id: 5},
  {post_id: 201, tag_id: 5},
  {post_id: 202, tag_id: 5},
  {post_id: 203, tag_id: 5},
  {post_id: 204, tag_id: 5},
  {post_id: 205, tag_id: 5},
  {post_id: 206, tag_id: 5},
  {post_id: 207, tag_id: 5},
  {post_id: 208, tag_id: 5},
  {post_id: 209, tag_id: 5},
  {post_id: 210, tag_id: 5},
  {post_id: 211, tag_id: 5},
  {post_id: 212, tag_id: 6},
  {post_id: 212, tag_id: 1},
  {post_id: 213, tag_id: 6},
  {post_id: 213, tag_id: 1},
  {post_id: 214, tag_id: 6},
  {post_id: 214, tag_id: 1},
  {post_id: 215, tag_id: 6},
  {post_id: 215, tag_id: 1},
  {post_id: 216, tag_id: 6},
  {post_id: 216, tag_id: 1},
  {post_id: 217, tag_id: 6},
  {post_id: 217, tag_id: 1},
  {post_id: 218, tag_id: 6},
  {post_id: 218, tag_id: 1},
  {post_id: 219, tag_id: 6},
  {post_id: 219, tag_id: 1},
  {post_id: 220, tag_id: 6},
  {post_id: 220, tag_id: 1},
  {post_id: 221, tag_id: 6},
  {post_id: 221, tag_id: 1},
  {post_id: 222, tag_id: 6},
  {post_id: 222, tag_id: 1},
  {post_id: 223, tag_id: 6},
  {post_id: 223, tag_id: 1},
  {post_id: 224, tag_id: 6},
  {post_id: 224, tag_id: 1},
  {post_id: 225, tag_id: 6},
  {post_id: 225, tag_id: 1},
  {post_id: 226, tag_id: 6},
  {post_id: 226, tag_id: 1},
  {post_id: 227, tag_id: 6},
  {post_id: 227, tag_id: 1},
  {post_id: 228, tag_id: 6},
  {post_id: 228, tag_id: 1},
  {post_id: 229, tag_id: 6},
  {post_id: 229, tag_id: 1},
  {post_id: 230, tag_id: 6},
  {post_id: 230, tag_id: 1},
  {post_id: 231, tag_id: 6},
  {post_id: 231, tag_id: 1},
  {post_id: 232, tag_id: 6},
  {post_id: 232, tag_id: 11},
  {post_id: 233, tag_id: 6},
  {post_id: 233, tag_id: 11},
  {post_id: 234, tag_id: 6},
  {post_id: 234, tag_id: 11},
  {post_id: 235, tag_id: 6},
  {post_id: 235, tag_id: 11},
  {post_id: 236, tag_id: 6},
  {post_id: 236, tag_id: 11},
  {post_id: 237, tag_id: 6},
  {post_id: 237, tag_id: 11},
  {post_id: 238, tag_id: 6},
  {post_id: 238, tag_id: 11},
  {post_id: 239, tag_id: 6},
  {post_id: 239, tag_id: 11},
  {post_id: 240, tag_id: 6},
  {post_id: 240, tag_id: 11},
  {post_id: 241, tag_id: 6},
  {post_id: 241, tag_id: 11},
  {post_id: 242, tag_id: 6},
  {post_id: 242, tag_id: 11},
  {post_id: 243, tag_id: 6},
  {post_id: 243, tag_id: 11},
  {post_id: 244, tag_id: 6},
  {post_id: 244, tag_id: 11},
  {post_id: 245, tag_id: 6},
  {post_id: 245, tag_id: 11},
  {post_id: 246, tag_id: 6},
  {post_id: 246, tag_id: 11},
  {post_id: 247, tag_id: 6},
  {post_id: 247, tag_id: 11},
  {post_id: 248, tag_id: 6},
  {post_id: 248, tag_id: 11},
  {post_id: 249, tag_id: 6},
  {post_id: 249, tag_id: 11},
  {post_id: 250, tag_id: 6},
  {post_id: 250, tag_id: 11},
  {post_id: 251, tag_id: 6},
  {post_id: 251, tag_id: 11},
  {post_id: 252, tag_id: 6},
  {post_id: 252, tag_id: 11},
  {post_id: 253, tag_id: 4},
  {post_id: 254, tag_id: 4},
  {post_id: 255, tag_id: 4},
  {post_id: 256, tag_id: 4},
  {post_id: 257, tag_id: 4},
  {post_id: 258, tag_id: 4},
  {post_id: 259, tag_id: 4},
  {post_id: 260, tag_id: 4},
  {post_id: 261, tag_id: 4},
  {post_id: 262, tag_id: 4},
  {post_id: 263, tag_id: 4},
  {post_id: 264, tag_id: 4},
  {post_id: 265, tag_id: 4},
  {post_id: 266, tag_id: 4},
  {post_id: 267, tag_id: 4},
  {post_id: 268, tag_id: 3},
  {post_id: 268, tag_id: 12},
  {post_id: 269, tag_id: 3},
  {post_id: 269, tag_id: 12},
  {post_id: 270, tag_id: 3},
  {post_id: 270, tag_id: 12},
  {post_id: 271, tag_id: 3},
  {post_id: 271, tag_id: 12},
  {post_id: 272, tag_id: 3},
  {post_id: 272, tag_id: 12},
  {post_id: 273, tag_id: 3},
  {post_id: 273, tag_id: 12},
  {post_id: 274, tag_id: 3},
  {post_id: 274, tag_id: 12},
  {post_id: 275, tag_id: 3},
  {post_id: 275, tag_id: 12},
  {post_id: 276, tag_id: 3},
  {post_id: 276, tag_id: 12},
  {post_id: 277, tag_id: 3},
  {post_id: 277, tag_id: 12},
  {post_id: 278, tag_id: 3},
  {post_id: 278, tag_id: 12},
  {post_id: 279, tag_id: 3},
  {post_id: 279, tag_id: 12},
  {post_id: 280, tag_id: 3},
  {post_id: 280, tag_id: 12},
  {post_id: 281, tag_id: 3},
  {post_id: 281, tag_id: 12},
  {post_id: 282, tag_id: 3},
  {post_id: 282, tag_id: 12},
  {post_id: 283, tag_id: 3},
  {post_id: 283, tag_id: 12},
  {post_id: 284, tag_id: 3},
  {post_id: 284, tag_id: 12},
  {post_id: 285, tag_id: 3},
  {post_id: 285, tag_id: 12},
  {post_id: 286, tag_id: 3},
  {post_id: 286, tag_id: 12},
  {post_id: 287, tag_id: 3},
  {post_id: 287, tag_id: 12},
  {post_id: 288, tag_id: 3},
  {post_id: 288, tag_id: 12},
  {post_id: 289, tag_id: 3},
  {post_id: 289, tag_id: 12},
  {post_id: 290, tag_id: 3},
  {post_id: 290, tag_id: 12},
  {post_id: 291, tag_id: 3},
  {post_id: 291, tag_id: 12},
  {post_id: 292, tag_id: 3},
  {post_id: 292, tag_id: 12},
  {post_id: 293, tag_id: 3},
  {post_id: 293, tag_id: 12},
  {post_id: 294, tag_id: 3},
  {post_id: 294, tag_id: 12},
  {post_id: 295, tag_id: 3},
  {post_id: 295, tag_id: 12},
  {post_id: 296, tag_id: 3},
  {post_id: 296, tag_id: 12},
  {post_id: 297, tag_id: 3},
  {post_id: 297, tag_id: 12},
  {post_id: 298, tag_id: 3},
  {post_id: 298, tag_id: 12},
  {post_id: 299, tag_id: 3},
  {post_id: 299, tag_id: 12},
  {post_id: 300, tag_id: 3},
  {post_id: 300, tag_id: 12},
  {post_id: 301, tag_id: 3},
  {post_id: 301, tag_id: 12},
  {post_id: 302, tag_id: 3},
  {post_id: 302, tag_id: 12},
  {post_id: 303, tag_id: 3},
  {post_id: 303, tag_id: 12},
  {post_id: 304, tag_id: 3},
  {post_id: 304, tag_id: 12},
  {post_id: 305, tag_id: 3},
  {post_id: 305, tag_id: 12},
  {post_id: 306, tag_id: 3},
  {post_id: 306, tag_id: 12},
  {post_id: 307, tag_id: 3},
  {post_id: 307, tag_id: 12},
  {post_id: 308, tag_id: 3},
  {post_id: 308, tag_id: 12},
  {post_id: 309, tag_id: 3},
  {post_id: 309, tag_id: 12},
  {post_id: 310, tag_id: 3},
  {post_id: 310, tag_id: 12},
  {post_id: 311, tag_id: 3},
  {post_id: 311, tag_id: 12},
  {post_id: 312, tag_id: 3},
  {post_id: 312, tag_id: 12},
  {post_id: 313, tag_id: 3},
  {post_id: 313, tag_id: 12},
  {post_id: 314, tag_id: 3},
  {post_id: 314, tag_id: 12},
  {post_id: 315, tag_id: 3},
  {post_id: 315, tag_id: 12},
  {post_id: 316, tag_id: 3},
  {post_id: 316, tag_id: 12},
  {post_id: 317, tag_id: 3},
  {post_id: 317, tag_id: 12},
  {post_id: 318, tag_id: 13},
  {post_id: 318, tag_id: 14},
  {post_id: 318, tag_id: 15},
  {post_id: 318, tag_id: 16},
  {post_id: 319, tag_id: 17},
  {post_id: 319, tag_id: 18},
  {post_id: 319, tag_id: 19},
  {post_id: 320, tag_id: 20},
  {post_id: 320, tag_id: 21},
  {post_id: 321, tag_id: 13},
  {post_id: 321, tag_id: 14},
  {post_id: 321, tag_id: 15},
  {post_id: 321, tag_id: 16},
  {post_id: 322, tag_id: 22},
  {post_id: 323, tag_id: 23},
  {post_id: 324, tag_id: 23},
  {post_id: 324, tag_id: 24},
  {post_id: 325, tag_id: 22},
  {post_id: 326, tag_id: 23},
  {post_id: 326, tag_id: 24},
  {post_id: 327, tag_id: 25},
  {post_id: 328, tag_id: 13},
  {post_id: 328, tag_id: 14},
  {post_id: 329, tag_id: 26},
  {post_id: 329, tag_id: 13},
  {post_id: 329, tag_id: 14},
  {post_id: 330, tag_id: 27},
  {post_id: 331, tag_id: 25},
  {post_id: 332, tag_id: 25},
  {post_id: 333, tag_id: 17},
  {post_id: 334, tag_id: 27},
  {post_id: 335, tag_id: 23},
  {post_id: 335, tag_id: 25},
  {post_id: 337, tag_id: 28},
  {post_id: 338, tag_id: 27},
  {post_id: 338, tag_id: 19},
  {post_id: 339, tag_id: 26},
  {post_id: 339, tag_id: 29},
  {post_id: 340, tag_id: 24},
  {post_id: 341, tag_id: 24},
  {post_id: 343, tag_id: 30},
  {post_id: 343, tag_id: 17},
  {post_id: 343, tag_id: 25},
  {post_id: 344, tag_id: 24},
  {post_id: 346, tag_id: 23},
  {post_id: 346, tag_id: 24},
  {post_id: 347, tag_id: 31},
  {post_id: 348, tag_id: 28},
  {post_id: 350, tag_id: 17},
  {post_id: 350, tag_id: 19},
  {post_id: 352, tag_id: 22},
  {post_id: 357, tag_id: 29},
  {post_id: 357, tag_id: 20},
  {post_id: 358, tag_id: 17},
  {post_id: 358, tag_id: 19},
  {post_id: 359, tag_id: 17},
  {post_id: 359, tag_id: 19},
  {post_id: 360, tag_id: 17},
  {post_id: 360, tag_id: 27},
  {post_id: 361, tag_id: 31},
  {post_id: 362, tag_id: 29},
  {post_id: 363, tag_id: 23},
  {post_id: 363, tag_id: 24},
  {post_id: 364, tag_id: 22},
  {post_id: 364, tag_id: 28},
  {post_id: 365, tag_id: 22},
  {post_id: 365, tag_id: 28},
  {post_id: 366, tag_id: 20},
  {post_id: 367, tag_id: 26},
  {post_id: 367, tag_id: 29},
  {post_id: 368, tag_id: 26},
  {post_id: 368, tag_id: 29},
  {post_id: 369, tag_id: 22},
  {post_id: 370, tag_id: 22},
  {post_id: 370, tag_id: 18},
  {post_id: 371, tag_id: 22},
  {post_id: 371, tag_id: 18},
  {post_id: 372, tag_id: 27},
  {post_id: 372, tag_id: 32},
  {post_id: 373, tag_id: 27},
  {post_id: 374, tag_id: 23},
  {post_id: 374, tag_id: 22},
  {post_id: 375, tag_id: 25},
  {post_id: 376, tag_id: 23},
  {post_id: 376, tag_id: 25},
  {post_id: 377, tag_id: 33},
  {post_id: 378, tag_id: 33},
  {post_id: 379, tag_id: 13},
  {post_id: 379, tag_id: 14},
  {post_id: 379, tag_id: 15},
  {post_id: 380, tag_id: 27},
  {post_id: 381, tag_id: 32},
  {post_id: 382, tag_id: 14},
  {post_id: 383, tag_id: 26},
  {post_id: 383, tag_id: 13},
  {post_id: 384, tag_id: 17},
  {post_id: 385, tag_id: 14},
  {post_id: 386, tag_id: 17},
  {post_id: 386, tag_id: 32},
  {post_id: 386, tag_id: 14},
  {post_id: 386, tag_id: 31},
  {post_id: 387, tag_id: 18},
  {post_id: 387, tag_id: 31},
  {post_id: 388, tag_id: 26},
  {post_id: 388, tag_id: 13},
  {post_id: 389, tag_id: 17},
  {post_id: 389, tag_id: 27},
  {post_id: 390, tag_id: 17},
  {post_id: 390, tag_id: 33},
  {post_id: 391, tag_id: 17},
  {post_id: 391, tag_id: 27},
  {post_id: 392, tag_id: 17},
  {post_id: 392, tag_id: 27},
  {post_id: 393, tag_id: 17},
  {post_id: 394, tag_id: 17},
  {post_id: 395, tag_id: 26},
  {post_id: 395, tag_id: 13},
  {post_id: 396, tag_id: 26},
  {post_id: 396, tag_id: 13},
  {post_id: 397, tag_id: 27},
  {post_id: 397, tag_id: 31},
  {post_id: 398, tag_id: 26},
  {post_id: 398, tag_id: 13},
  {post_id: 399, tag_id: 26},
  {post_id: 399, tag_id: 13},
  {post_id: 400, tag_id: 26},
  {post_id: 400, tag_id: 13},
  {post_id: 401, tag_id: 26},
  {post_id: 401, tag_id: 13},
  {post_id: 402, tag_id: 26},
  {post_id: 402, tag_id: 13},
  {post_id: 403, tag_id: 13},
  {post_id: 403, tag_id: 22},
  {post_id: 404, tag_id: 26},
  {post_id: 404, tag_id: 13},
  {post_id: 405, tag_id: 26},
  {post_id: 405, tag_id: 14},
  {post_id: 406, tag_id: 26},
  {post_id: 406, tag_id: 17},
  {post_id: 406, tag_id: 13},
  {post_id: 407, tag_id: 26},
  {post_id: 407, tag_id: 17},
  {post_id: 407, tag_id: 13},
  {post_id: 408, tag_id: 26},
  {post_id: 408, tag_id: 13},
  {post_id: 409, tag_id: 26},
  {post_id: 409, tag_id: 14},
  {post_id: 409, tag_id: 29},
  {post_id: 410, tag_id: 26},
  {post_id: 410, tag_id: 14},
  {post_id: 411, tag_id: 26},
  {post_id: 411, tag_id: 13},
  {post_id: 412, tag_id: 26},
  {post_id: 412, tag_id: 13},
  {post_id: 413, tag_id: 26},
  {post_id: 413, tag_id: 13},
  {post_id: 414, tag_id: 26},
  {post_id: 414, tag_id: 13},
  {post_id: 415, tag_id: 27},
  {post_id: 415, tag_id: 31},
  {post_id: 416, tag_id: 26},
  {post_id: 416, tag_id: 27},
  {post_id: 417, tag_id: 26},
  {post_id: 417, tag_id: 27},
  {post_id: 418, tag_id: 26},
  {post_id: 418, tag_id: 23},
  {post_id: 418, tag_id: 29},
  {post_id: 419, tag_id: 32},
  {post_id: 419, tag_id: 31},
  {post_id: 420, tag_id: 22},
  {post_id: 421, tag_id: 27},
  {post_id: 421, tag_id: 31},
  {post_id: 422, tag_id: 17},
  {post_id: 422, tag_id: 32},
  {post_id: 423, tag_id: 32},
  {post_id: 424, tag_id: 17},
  {post_id: 424, tag_id: 18},
  {post_id: 425, tag_id: 27},
  {post_id: 425, tag_id: 31},
  {post_id: 426, tag_id: 22},
  {post_id: 426, tag_id: 18},
  {post_id: 427, tag_id: 17},
  {post_id: 427, tag_id: 23},
  {post_id: 427, tag_id: 29},
  {post_id: 427, tag_id: 27},
  {post_id: 428, tag_id: 17},
  {post_id: 428, tag_id: 29},
  {post_id: 429, tag_id: 22},
  {post_id: 430, tag_id: 22},
  {post_id: 431, tag_id: 17},
  {post_id: 431, tag_id: 19},
  {post_id: 432, tag_id: 17},
  {post_id: 432, tag_id: 18},
  {post_id: 433, tag_id: 17},
  {post_id: 433, tag_id: 32},
  {post_id: 434, tag_id: 17},
  {post_id: 434, tag_id: 32},
  {post_id: 434, tag_id: 25},
  {post_id: 435, tag_id: 32},
  {post_id: 436, tag_id: 23},
  {post_id: 436, tag_id: 18},
  {post_id: 436, tag_id: 31},
  {post_id: 437, tag_id: 17},
  {post_id: 437, tag_id: 18},
  {post_id: 437, tag_id: 28},
  {post_id: 438, tag_id: 17},
  {post_id: 438, tag_id: 19},
  {post_id: 439, tag_id: 17},
  {post_id: 440, tag_id: 27},
  {post_id: 440, tag_id: 31},
  {post_id: 441, tag_id: 29},
  {post_id: 441, tag_id: 31},
  {post_id: 442, tag_id: 27},
  {post_id: 443, tag_id: 24},
  {post_id: 443, tag_id: 19},
  {post_id: 444, tag_id: 31},
  {post_id: 445, tag_id: 24},
  {post_id: 445, tag_id: 31},
  {post_id: 446, tag_id: 17},
  {post_id: 446, tag_id: 24},
  {post_id: 447, tag_id: 24},
  {post_id: 447, tag_id: 31},
  {post_id: 448, tag_id: 17},
  {post_id: 448, tag_id: 27},
  {post_id: 449, tag_id: 17},
  {post_id: 449, tag_id: 27},
  {post_id: 450, tag_id: 17},
  {post_id: 450, tag_id: 27},
  {post_id: 451, tag_id: 22},
  {post_id: 451, tag_id: 18},
  {post_id: 452, tag_id: 32},
  {post_id: 452, tag_id: 24},
  {post_id: 453, tag_id: 17},
  {post_id: 454, tag_id: 31},
  {post_id: 455, tag_id: 17},
  {post_id: 455, tag_id: 28},
  {post_id: 456, tag_id: 17},
  {post_id: 456, tag_id: 28},
  {post_id: 457, tag_id: 17},
  {post_id: 457, tag_id: 33},
  {post_id: 458, tag_id: 17},
  {post_id: 459, tag_id: 30},
  {post_id: 459, tag_id: 17},
  {post_id: 459, tag_id: 27},
  {post_id: 460, tag_id: 32},
  {post_id: 461, tag_id: 32},
  {post_id: 462, tag_id: 24},
  {post_id: 462, tag_id: 19},
  {post_id: 463, tag_id: 23},
  {post_id: 463, tag_id: 31},
  {post_id: 464, tag_id: 17},
  {post_id: 465, tag_id: 32},
  {post_id: 466, tag_id: 32},
  {post_id: 467, tag_id: 17},
  {post_id: 467, tag_id: 33},
  {post_id: 468, tag_id: 27},
  {post_id: 468, tag_id: 32},
  {post_id: 468, tag_id: 33},
  {post_id: 468, tag_id: 31},
  {post_id: 469, tag_id: 24},
  {post_id: 469, tag_id: 31},
  {post_id: 470, tag_id: 17},
  {post_id: 470, tag_id: 29},
  {post_id: 470, tag_id: 18},
  {post_id: 471, tag_id: 17},
  {post_id: 472, tag_id: 17},
  {post_id: 472, tag_id: 32},
  {post_id: 473, tag_id: 17},
  {post_id: 473, tag_id: 32},
  {post_id: 474, tag_id: 31},
  {post_id: 475, tag_id: 32},
  {post_id: 475, tag_id: 23},
  {post_id: 476, tag_id: 23},
  {post_id: 477, tag_id: 17},
  {post_id: 477, tag_id: 19},
  {post_id: 478, tag_id: 17},
  {post_id: 478, tag_id: 19},
  {post_id: 479, tag_id: 17},
  {post_id: 479, tag_id: 19},
  {post_id: 480, tag_id: 27},
  {post_id: 480, tag_id: 31},
  {post_id: 481, tag_id: 17},
  {post_id: 482, tag_id: 23},
  {post_id: 482, tag_id: 18},
  {post_id: 482, tag_id: 31},
  {post_id: 483, tag_id: 24},
  {post_id: 483, tag_id: 19},
  {post_id: 484, tag_id: 18},
  {post_id: 484, tag_id: 31},
  {post_id: 485, tag_id: 17},
  {post_id: 485, tag_id: 18},
  {post_id: 486, tag_id: 17},
  {post_id: 486, tag_id: 18},
  {post_id: 487, tag_id: 22},
  {post_id: 488, tag_id: 22},
  {post_id: 489, tag_id: 30},
  {post_id: 489, tag_id: 22},
  {post_id: 489, tag_id: 34},
  {post_id: 490, tag_id: 32},
  {post_id: 490, tag_id: 31},
  {post_id: 491, tag_id: 22},
  {post_id: 492, tag_id: 29},
  {post_id: 492, tag_id: 31},
  {post_id: 493, tag_id: 22},
  {post_id: 493, tag_id: 18},
  {post_id: 494, tag_id: 17},
  {post_id: 494, tag_id: 23},
  {post_id: 494, tag_id: 18},
  {post_id: 495, tag_id: 32},
  {post_id: 495, tag_id: 31},
  {post_id: 496, tag_id: 17},
  {post_id: 496, tag_id: 18},
  {post_id: 497, tag_id: 17},
  {post_id: 497, tag_id: 18},
  {post_id: 498, tag_id: 31},
  {post_id: 499, tag_id: 24},
  {post_id: 499, tag_id: 31},
  {post_id: 500, tag_id: 24},
  {post_id: 500, tag_id: 31},
  {post_id: 501, tag_id: 17},
  {post_id: 501, tag_id: 18},
  {post_id: 502, tag_id: 27},
  {post_id: 502, tag_id: 32},
  {post_id: 502, tag_id: 31},
  {post_id: 503, tag_id: 24},
  {post_id: 504, tag_id: 24},
  {post_id: 504, tag_id: 31},
  {post_id: 505, tag_id: 24},
  {post_id: 506, tag_id: 31},
  {post_id: 507, tag_id: 31},
  {post_id: 508, tag_id: 30},
  {post_id: 508, tag_id: 17},
  {post_id: 508, tag_id: 19},
  {post_id: 509, tag_id: 23},
  {post_id: 509, tag_id: 18},
  {post_id: 509, tag_id: 31},
  {post_id: 510, tag_id: 22},
  {post_id: 510, tag_id: 24},
  {post_id: 511, tag_id: 17},
  {post_id: 511, tag_id: 23},
  {post_id: 1, tag_id: 1},
  {post_id: 1, tag_id: 2},
  {post_id: 2, tag_id: 1},
  {post_id: 2, tag_id: 2},
  {post_id: 3, tag_id: 1},
  {post_id: 3, tag_id: 2},
  {post_id: 4, tag_id: 1},
  {post_id: 4, tag_id: 2},
  {post_id: 5, tag_id: 1},
  {post_id: 5, tag_id: 2},
  {post_id: 6, tag_id: 1},
  {post_id: 6, tag_id: 2},
  {post_id: 7, tag_id: 1},
  {post_id: 7, tag_id: 2},
  {post_id: 8, tag_id: 1},
  {post_id: 8, tag_id: 2},
  {post_id: 9, tag_id: 1},
  {post_id: 9, tag_id: 2},
  {post_id: 10, tag_id: 1},
  {post_id: 10, tag_id: 2},
  {post_id: 11, tag_id: 1},
  {post_id: 11, tag_id: 2},
  {post_id: 12, tag_id: 1},
  {post_id: 12, tag_id: 2},
  {post_id: 13, tag_id: 1},
  {post_id: 13, tag_id: 2},
  {post_id: 14, tag_id: 1},
  {post_id: 14, tag_id: 2},
  {post_id: 15, tag_id: 1},
  {post_id: 15, tag_id: 2},
  {post_id: 16, tag_id: 1},
  {post_id: 16, tag_id: 2},
  {post_id: 17, tag_id: 1},
  {post_id: 17, tag_id: 2},
  {post_id: 18, tag_id: 1},
  {post_id: 18, tag_id: 2},
  {post_id: 19, tag_id: 1},
  {post_id: 19, tag_id: 2},
  {post_id: 20, tag_id: 1},
  {post_id: 20, tag_id: 2},
  {post_id: 46, tag_id: 3},
  {post_id: 47, tag_id: 3},
  {post_id: 48, tag_id: 3},
  {post_id: 49, tag_id: 3},
  {post_id: 50, tag_id: 3},
  {post_id: 51, tag_id: 3},
  {post_id: 52, tag_id: 3},
  {post_id: 53, tag_id: 3},
  {post_id: 54, tag_id: 3},
  {post_id: 55, tag_id: 3},
  {post_id: 56, tag_id: 3},
  {post_id: 57, tag_id: 3},
  {post_id: 58, tag_id: 3},
  {post_id: 59, tag_id: 3},
  {post_id: 60, tag_id: 3},
  {post_id: 61, tag_id: 3},
  {post_id: 62, tag_id: 3},
  {post_id: 63, tag_id: 3},
  {post_id: 64, tag_id: 3},
  {post_id: 65, tag_id: 4},
  {post_id: 66, tag_id: 4},
  {post_id: 67, tag_id: 4},
  {post_id: 68, tag_id: 4},
  {post_id: 69, tag_id: 4},
  {post_id: 70, tag_id: 4},
  {post_id: 71, tag_id: 4},
  {post_id: 72, tag_id: 4},
  {post_id: 73, tag_id: 4},
  {post_id: 74, tag_id: 4},
  {post_id: 75, tag_id: 4},
  {post_id: 76, tag_id: 4},
  {post_id: 77, tag_id: 4},
  {post_id: 78, tag_id: 5},
  {post_id: 79, tag_id: 5},
  {post_id: 80, tag_id: 5},
  {post_id: 81, tag_id: 5},
  {post_id: 82, tag_id: 5},
  {post_id: 83, tag_id: 5},
  {post_id: 84, tag_id: 5},
  {post_id: 85, tag_id: 5},
  {post_id: 86, tag_id: 5},
  {post_id: 87, tag_id: 5},
  {post_id: 88, tag_id: 5},
  {post_id: 89, tag_id: 5},
  {post_id: 90, tag_id: 5},
  {post_id: 91, tag_id: 5},
  {post_id: 92, tag_id: 5},
  {post_id: 93, tag_id: 5},
  {post_id: 94, tag_id: 5},
  {post_id: 95, tag_id: 5},
  {post_id: 96, tag_id: 5},
  {post_id: 97, tag_id: 5},
  {post_id: 98, tag_id: 5},
  {post_id: 99, tag_id: 5},
  {post_id: 100, tag_id: 5},
  {post_id: 101, tag_id: 5},
  {post_id: 102, tag_id: 5},
  {post_id: 103, tag_id: 5},
  {post_id: 104, tag_id: 5},
  {post_id: 105, tag_id: 5},
  {post_id: 106, tag_id: 5},
  {post_id: 107, tag_id: 5},
  {post_id: 108, tag_id: 5},
  {post_id: 109, tag_id: 6},
  {post_id: 110, tag_id: 6},
  {post_id: 111, tag_id: 6},
  {post_id: 112, tag_id: 6},
  {post_id: 113, tag_id: 6},
  {post_id: 114, tag_id: 6},
  {post_id: 115, tag_id: 6},
  {post_id: 116, tag_id: 6},
  {post_id: 117, tag_id: 6},
  {post_id: 118, tag_id: 6},
  {post_id: 119, tag_id: 6},
  {post_id: 120, tag_id: 6},
  {post_id: 121, tag_id: 6},
  {post_id: 122, tag_id: 6},
  {post_id: 123, tag_id: 6},
  {post_id: 124, tag_id: 6},
  {post_id: 125, tag_id: 6},
  {post_id: 126, tag_id: 6},
  {post_id: 127, tag_id: 6},
  {post_id: 128, tag_id: 6},
  {post_id: 129, tag_id: 6},
  {post_id: 130, tag_id: 6},
  {post_id: 131, tag_id: 6},
  {post_id: 132, tag_id: 6},
  {post_id: 133, tag_id: 6},
  {post_id: 134, tag_id: 6},
  {post_id: 135, tag_id: 6},
  {post_id: 136, tag_id: 6},
  {post_id: 137, tag_id: 6},
  {post_id: 138, tag_id: 6},
  {post_id: 139, tag_id: 6},
  {post_id: 140, tag_id: 6},
  {post_id: 141, tag_id: 6},
  {post_id: 142, tag_id: 6},
  {post_id: 143, tag_id: 6},
  {post_id: 144, tag_id: 7},
  {post_id: 145, tag_id: 7},
  {post_id: 146, tag_id: 7},
  {post_id: 147, tag_id: 7},
  {post_id: 148, tag_id: 8},
  {post_id: 149, tag_id: 8},
  {post_id: 150, tag_id: 8},
  {post_id: 151, tag_id: 9},
  {post_id: 152, tag_id: 9},
  {post_id: 153, tag_id: 9},
  {post_id: 154, tag_id: 9},
  {post_id: 155, tag_id: 9},
  {post_id: 156, tag_id: 10},
  {post_id: 157, tag_id: 10},
  {post_id: 158, tag_id: 10},
  {post_id: 159, tag_id: 10},
  {post_id: 160, tag_id: 10},
  {post_id: 161, tag_id: 6},
  {post_id: 162, tag_id: 6},
  {post_id: 163, tag_id: 6},
  {post_id: 164, tag_id: 6},
  {post_id: 165, tag_id: 6},
  {post_id: 166, tag_id: 6},
  {post_id: 167, tag_id: 6},
  {post_id: 168, tag_id: 6},
  {post_id: 169, tag_id: 6},
  {post_id: 170, tag_id: 6},
  {post_id: 171, tag_id: 6},
  {post_id: 172, tag_id: 6},
  {post_id: 173, tag_id: 6},
  {post_id: 174, tag_id: 6},
  {post_id: 175, tag_id: 6},
  {post_id: 176, tag_id: 6},
  {post_id: 177, tag_id: 6},
  {post_id: 178, tag_id: 6},
  {post_id: 179, tag_id: 6},
  {post_id: 180, tag_id: 6},
  {post_id: 181, tag_id: 6},
  {post_id: 182, tag_id: 5},
  {post_id: 183, tag_id: 5},
  {post_id: 184, tag_id: 5},
  {post_id: 185, tag_id: 5},
  {post_id: 186, tag_id: 5},
  {post_id: 187, tag_id: 5},
  {post_id: 188, tag_id: 5},
  {post_id: 189, tag_id: 5},
  {post_id: 190, tag_id: 5},
  {post_id: 191, tag_id: 5},
  {post_id: 192, tag_id: 5},
  {post_id: 193, tag_id: 5},
  {post_id: 194, tag_id: 5},
  {post_id: 195, tag_id: 5},
  {post_id: 196, tag_id: 5},
  {post_id: 197, tag_id: 5},
  {post_id: 198, tag_id: 5},
  {post_id: 199, tag_id: 5},
  {post_id: 200, tag_id: 5},
  {post_id: 201, tag_id: 5},
  {post_id: 202, tag_id: 5},
  {post_id: 203, tag_id: 5},
  {post_id: 204, tag_id: 5},
  {post_id: 205, tag_id: 5},
  {post_id: 206, tag_id: 5},
  {post_id: 207, tag_id: 5},
  {post_id: 208, tag_id: 5},
  {post_id: 209, tag_id: 5},
  {post_id: 210, tag_id: 5},
  {post_id: 211, tag_id: 5},
  {post_id: 212, tag_id: 6},
  {post_id: 212, tag_id: 1},
  {post_id: 213, tag_id: 6},
  {post_id: 213, tag_id: 1},
  {post_id: 214, tag_id: 6},
  {post_id: 214, tag_id: 1},
  {post_id: 215, tag_id: 6},
  {post_id: 215, tag_id: 1},
  {post_id: 216, tag_id: 6},
  {post_id: 216, tag_id: 1},
  {post_id: 217, tag_id: 6},
  {post_id: 217, tag_id: 1},
  {post_id: 218, tag_id: 6},
  {post_id: 218, tag_id: 1},
  {post_id: 219, tag_id: 6},
  {post_id: 219, tag_id: 1},
  {post_id: 220, tag_id: 6},
  {post_id: 220, tag_id: 1},
  {post_id: 221, tag_id: 6},
  {post_id: 221, tag_id: 1},
  {post_id: 222, tag_id: 6},
  {post_id: 222, tag_id: 1},
  {post_id: 223, tag_id: 6},
  {post_id: 223, tag_id: 1},
  {post_id: 224, tag_id: 6},
  {post_id: 224, tag_id: 1},
  {post_id: 225, tag_id: 6},
  {post_id: 225, tag_id: 1},
  {post_id: 226, tag_id: 6},
  {post_id: 226, tag_id: 1},
  {post_id: 227, tag_id: 6},
  {post_id: 227, tag_id: 1},
  {post_id: 228, tag_id: 6},
  {post_id: 228, tag_id: 1},
  {post_id: 229, tag_id: 6},
  {post_id: 229, tag_id: 1},
  {post_id: 230, tag_id: 6},
  {post_id: 230, tag_id: 1},
  {post_id: 231, tag_id: 6},
  {post_id: 231, tag_id: 1},
  {post_id: 232, tag_id: 6},
  {post_id: 232, tag_id: 11},
  {post_id: 233, tag_id: 6},
  {post_id: 233, tag_id: 11},
  {post_id: 234, tag_id: 6},
  {post_id: 234, tag_id: 11},
  {post_id: 235, tag_id: 6},
  {post_id: 235, tag_id: 11},
  {post_id: 236, tag_id: 6},
  {post_id: 236, tag_id: 11},
  {post_id: 237, tag_id: 6},
  {post_id: 237, tag_id: 11},
  {post_id: 238, tag_id: 6},
  {post_id: 238, tag_id: 11},
  {post_id: 239, tag_id: 6},
  {post_id: 239, tag_id: 11},
  {post_id: 240, tag_id: 6},
  {post_id: 240, tag_id: 11},
  {post_id: 241, tag_id: 6},
  {post_id: 241, tag_id: 11},
  {post_id: 242, tag_id: 6},
  {post_id: 242, tag_id: 11},
  {post_id: 243, tag_id: 6},
  {post_id: 243, tag_id: 11},
  {post_id: 244, tag_id: 6},
  {post_id: 244, tag_id: 11},
  {post_id: 245, tag_id: 6},
  {post_id: 245, tag_id: 11},
  {post_id: 246, tag_id: 6},
  {post_id: 246, tag_id: 11},
  {post_id: 247, tag_id: 6},
  {post_id: 247, tag_id: 11},
  {post_id: 248, tag_id: 6},
  {post_id: 248, tag_id: 11},
  {post_id: 249, tag_id: 6},
  {post_id: 249, tag_id: 11},
  {post_id: 250, tag_id: 6},
  {post_id: 250, tag_id: 11},
  {post_id: 251, tag_id: 6},
  {post_id: 251, tag_id: 11},
  {post_id: 252, tag_id: 6},
  {post_id: 252, tag_id: 11},
  {post_id: 253, tag_id: 4},
  {post_id: 254, tag_id: 4},
  {post_id: 255, tag_id: 4},
  {post_id: 256, tag_id: 4},
  {post_id: 257, tag_id: 4},
  {post_id: 258, tag_id: 4},
  {post_id: 259, tag_id: 4},
  {post_id: 260, tag_id: 4},
  {post_id: 261, tag_id: 4},
  {post_id: 262, tag_id: 4},
  {post_id: 263, tag_id: 4},
  {post_id: 264, tag_id: 4},
  {post_id: 265, tag_id: 4},
  {post_id: 266, tag_id: 4},
  {post_id: 267, tag_id: 4},
  {post_id: 268, tag_id: 3},
  {post_id: 268, tag_id: 12},
  {post_id: 269, tag_id: 3},
  {post_id: 269, tag_id: 12},
  {post_id: 270, tag_id: 3},
  {post_id: 270, tag_id: 12},
  {post_id: 271, tag_id: 3},
  {post_id: 271, tag_id: 12},
  {post_id: 272, tag_id: 3},
  {post_id: 272, tag_id: 12},
  {post_id: 273, tag_id: 3},
  {post_id: 273, tag_id: 12},
  {post_id: 274, tag_id: 3},
  {post_id: 274, tag_id: 12},
  {post_id: 275, tag_id: 3},
  {post_id: 275, tag_id: 12},
  {post_id: 276, tag_id: 3},
  {post_id: 276, tag_id: 12},
  {post_id: 277, tag_id: 3},
  {post_id: 277, tag_id: 12},
  {post_id: 278, tag_id: 3},
  {post_id: 278, tag_id: 12},
  {post_id: 279, tag_id: 3},
  {post_id: 279, tag_id: 12},
  {post_id: 280, tag_id: 3},
  {post_id: 280, tag_id: 12},
  {post_id: 281, tag_id: 3},
  {post_id: 281, tag_id: 12},
  {post_id: 282, tag_id: 3},
  {post_id: 282, tag_id: 12},
  {post_id: 283, tag_id: 3},
  {post_id: 283, tag_id: 12},
  {post_id: 284, tag_id: 3},
  {post_id: 284, tag_id: 12},
  {post_id: 285, tag_id: 3},
  {post_id: 285, tag_id: 12},
  {post_id: 286, tag_id: 3},
  {post_id: 286, tag_id: 12},
  {post_id: 287, tag_id: 3},
  {post_id: 287, tag_id: 12},
  {post_id: 288, tag_id: 3},
  {post_id: 288, tag_id: 12},
  {post_id: 289, tag_id: 3},
  {post_id: 289, tag_id: 12},
  {post_id: 290, tag_id: 3},
  {post_id: 290, tag_id: 12},
  {post_id: 291, tag_id: 3},
  {post_id: 291, tag_id: 12},
  {post_id: 292, tag_id: 3},
  {post_id: 292, tag_id: 12},
  {post_id: 293, tag_id: 3},
  {post_id: 293, tag_id: 12},
  {post_id: 294, tag_id: 3},
  {post_id: 294, tag_id: 12},
  {post_id: 295, tag_id: 3},
  {post_id: 295, tag_id: 12},
  {post_id: 296, tag_id: 3},
  {post_id: 296, tag_id: 12},
  {post_id: 297, tag_id: 3},
  {post_id: 297, tag_id: 12},
  {post_id: 298, tag_id: 3},
  {post_id: 298, tag_id: 12},
  {post_id: 299, tag_id: 3},
  {post_id: 299, tag_id: 12},
  {post_id: 300, tag_id: 3},
  {post_id: 300, tag_id: 12},
  {post_id: 301, tag_id: 3},
  {post_id: 301, tag_id: 12},
  {post_id: 302, tag_id: 3},
  {post_id: 302, tag_id: 12},
  {post_id: 303, tag_id: 3},
  {post_id: 303, tag_id: 12},
  {post_id: 304, tag_id: 3},
  {post_id: 304, tag_id: 12},
  {post_id: 305, tag_id: 3},
  {post_id: 305, tag_id: 12},
  {post_id: 306, tag_id: 3},
  {post_id: 306, tag_id: 12},
  {post_id: 307, tag_id: 3},
  {post_id: 307, tag_id: 12},
  {post_id: 308, tag_id: 3},
  {post_id: 308, tag_id: 12},
  {post_id: 309, tag_id: 3},
  {post_id: 309, tag_id: 12},
  {post_id: 310, tag_id: 3},
  {post_id: 310, tag_id: 12},
  {post_id: 311, tag_id: 3},
  {post_id: 311, tag_id: 12},
  {post_id: 312, tag_id: 3},
  {post_id: 312, tag_id: 12},
  {post_id: 313, tag_id: 3},
  {post_id: 313, tag_id: 12},
  {post_id: 314, tag_id: 3},
  {post_id: 314, tag_id: 12},
  {post_id: 315, tag_id: 3},
  {post_id: 315, tag_id: 12},
  {post_id: 316, tag_id: 3},
  {post_id: 316, tag_id: 12},
  {post_id: 317, tag_id: 3},
  {post_id: 317, tag_id: 12},
  {post_id: 318, tag_id: 13},
  {post_id: 318, tag_id: 14},
  {post_id: 318, tag_id: 15},
  {post_id: 318, tag_id: 16},
  {post_id: 319, tag_id: 17},
  {post_id: 319, tag_id: 18},
  {post_id: 319, tag_id: 19},
  {post_id: 320, tag_id: 20},
  {post_id: 320, tag_id: 21},
  {post_id: 321, tag_id: 13},
  {post_id: 321, tag_id: 14},
  {post_id: 321, tag_id: 15},
  {post_id: 321, tag_id: 16},
  {post_id: 322, tag_id: 22},
  {post_id: 323, tag_id: 23},
  {post_id: 324, tag_id: 23},
  {post_id: 324, tag_id: 24},
  {post_id: 325, tag_id: 22},
  {post_id: 326, tag_id: 23},
  {post_id: 326, tag_id: 24},
  {post_id: 327, tag_id: 25},
  {post_id: 328, tag_id: 13},
  {post_id: 328, tag_id: 14},
  {post_id: 329, tag_id: 26},
  {post_id: 329, tag_id: 13},
  {post_id: 329, tag_id: 14},
  {post_id: 330, tag_id: 27},
  {post_id: 331, tag_id: 25},
  {post_id: 332, tag_id: 25},
  {post_id: 333, tag_id: 17},
  {post_id: 334, tag_id: 27},
  {post_id: 335, tag_id: 23},
  {post_id: 335, tag_id: 25},
  {post_id: 337, tag_id: 28},
  {post_id: 338, tag_id: 27},
  {post_id: 338, tag_id: 19},
  {post_id: 339, tag_id: 26},
  {post_id: 339, tag_id: 29},
  {post_id: 340, tag_id: 24},
  {post_id: 341, tag_id: 24},
  {post_id: 343, tag_id: 30},
  {post_id: 343, tag_id: 17},
  {post_id: 343, tag_id: 25},
  {post_id: 344, tag_id: 24},
  {post_id: 346, tag_id: 23},
  {post_id: 346, tag_id: 24},
  {post_id: 347, tag_id: 31},
  {post_id: 348, tag_id: 28},
  {post_id: 350, tag_id: 17},
  {post_id: 350, tag_id: 19},
  {post_id: 352, tag_id: 22},
  {post_id: 357, tag_id: 29},
  {post_id: 357, tag_id: 20},
  {post_id: 358, tag_id: 17},
  {post_id: 358, tag_id: 19},
  {post_id: 359, tag_id: 17},
  {post_id: 359, tag_id: 19},
  {post_id: 360, tag_id: 17},
  {post_id: 360, tag_id: 27},
  {post_id: 361, tag_id: 31},
  {post_id: 362, tag_id: 29},
  {post_id: 363, tag_id: 23},
  {post_id: 363, tag_id: 24},
  {post_id: 364, tag_id: 22},
  {post_id: 364, tag_id: 28},
  {post_id: 365, tag_id: 22},
  {post_id: 365, tag_id: 28},
  {post_id: 366, tag_id: 20},
  {post_id: 367, tag_id: 26},
  {post_id: 367, tag_id: 29},
  {post_id: 368, tag_id: 26},
  {post_id: 368, tag_id: 29},
  {post_id: 369, tag_id: 22},
  {post_id: 370, tag_id: 22},
  {post_id: 370, tag_id: 18},
  {post_id: 371, tag_id: 22},
  {post_id: 371, tag_id: 18},
  {post_id: 372, tag_id: 27},
  {post_id: 372, tag_id: 32},
  {post_id: 373, tag_id: 27},
  {post_id: 374, tag_id: 23},
  {post_id: 374, tag_id: 22},
  {post_id: 375, tag_id: 25},
  {post_id: 376, tag_id: 23},
  {post_id: 376, tag_id: 25},
  {post_id: 377, tag_id: 33},
  {post_id: 378, tag_id: 33},
  {post_id: 379, tag_id: 13},
  {post_id: 379, tag_id: 14},
  {post_id: 379, tag_id: 15},
  {post_id: 380, tag_id: 27},
  {post_id: 381, tag_id: 32},
  {post_id: 382, tag_id: 14},
  {post_id: 383, tag_id: 26},
  {post_id: 383, tag_id: 13},
  {post_id: 384, tag_id: 17},
  {post_id: 385, tag_id: 14},
  {post_id: 386, tag_id: 17},
  {post_id: 386, tag_id: 32},
  {post_id: 386, tag_id: 14},
  {post_id: 386, tag_id: 31},
  {post_id: 387, tag_id: 18},
  {post_id: 387, tag_id: 31},
  {post_id: 388, tag_id: 26},
  {post_id: 388, tag_id: 13},
  {post_id: 389, tag_id: 17},
  {post_id: 389, tag_id: 27},
  {post_id: 390, tag_id: 17},
  {post_id: 390, tag_id: 33},
  {post_id: 391, tag_id: 17},
  {post_id: 391, tag_id: 27},
  {post_id: 392, tag_id: 17},
  {post_id: 392, tag_id: 27},
  {post_id: 393, tag_id: 17},
  {post_id: 394, tag_id: 17},
  {post_id: 395, tag_id: 26},
  {post_id: 395, tag_id: 13},
  {post_id: 396, tag_id: 26},
  {post_id: 396, tag_id: 13},
  {post_id: 397, tag_id: 27},
  {post_id: 397, tag_id: 31},
  {post_id: 398, tag_id: 26},
  {post_id: 398, tag_id: 13},
  {post_id: 399, tag_id: 26},
  {post_id: 399, tag_id: 13},
  {post_id: 400, tag_id: 26},
  {post_id: 400, tag_id: 13},
  {post_id: 401, tag_id: 26},
  {post_id: 401, tag_id: 13},
  {post_id: 402, tag_id: 26},
  {post_id: 402, tag_id: 13},
  {post_id: 403, tag_id: 13},
  {post_id: 403, tag_id: 22},
  {post_id: 404, tag_id: 26},
  {post_id: 404, tag_id: 13},
  {post_id: 405, tag_id: 26},
  {post_id: 405, tag_id: 14},
  {post_id: 406, tag_id: 26},
  {post_id: 406, tag_id: 17},
  {post_id: 406, tag_id: 13},
  {post_id: 407, tag_id: 26},
  {post_id: 407, tag_id: 17},
  {post_id: 407, tag_id: 13},
  {post_id: 408, tag_id: 26},
  {post_id: 408, tag_id: 13},
  {post_id: 409, tag_id: 26},
  {post_id: 409, tag_id: 14},
  {post_id: 409, tag_id: 29},
  {post_id: 410, tag_id: 26},
  {post_id: 410, tag_id: 14},
  {post_id: 411, tag_id: 26},
  {post_id: 411, tag_id: 13},
  {post_id: 412, tag_id: 26},
  {post_id: 412, tag_id: 13},
  {post_id: 413, tag_id: 26},
  {post_id: 413, tag_id: 13},
  {post_id: 414, tag_id: 26},
  {post_id: 414, tag_id: 13},
  {post_id: 415, tag_id: 27},
  {post_id: 415, tag_id: 31},
  {post_id: 416, tag_id: 26},
  {post_id: 416, tag_id: 27},
  {post_id: 417, tag_id: 26},
  {post_id: 417, tag_id: 27},
  {post_id: 418, tag_id: 26},
  {post_id: 418, tag_id: 23},
  {post_id: 418, tag_id: 29},
  {post_id: 419, tag_id: 32},
  {post_id: 419, tag_id: 31},
  {post_id: 420, tag_id: 22},
  {post_id: 421, tag_id: 27},
  {post_id: 421, tag_id: 31},
  {post_id: 422, tag_id: 17},
  {post_id: 422, tag_id: 32},
  {post_id: 423, tag_id: 32},
  {post_id: 424, tag_id: 17},
  {post_id: 424, tag_id: 18},
  {post_id: 425, tag_id: 27},
  {post_id: 425, tag_id: 31},
  {post_id: 426, tag_id: 22},
  {post_id: 426, tag_id: 18},
  {post_id: 427, tag_id: 17},
  {post_id: 427, tag_id: 23},
  {post_id: 427, tag_id: 29},
  {post_id: 427, tag_id: 27},
  {post_id: 428, tag_id: 17},
  {post_id: 428, tag_id: 29},
  {post_id: 429, tag_id: 22},
  {post_id: 430, tag_id: 22},
  {post_id: 431, tag_id: 17},
  {post_id: 431, tag_id: 19},
  {post_id: 432, tag_id: 17},
  {post_id: 432, tag_id: 18},
  {post_id: 433, tag_id: 17},
  {post_id: 433, tag_id: 32},
  {post_id: 434, tag_id: 17},
  {post_id: 434, tag_id: 32},
  {post_id: 434, tag_id: 25},
  {post_id: 435, tag_id: 32},
  {post_id: 436, tag_id: 23},
  {post_id: 436, tag_id: 18},
  {post_id: 436, tag_id: 31},
  {post_id: 437, tag_id: 17},
  {post_id: 437, tag_id: 18},
  {post_id: 437, tag_id: 28},
  {post_id: 438, tag_id: 17},
  {post_id: 438, tag_id: 19},
  {post_id: 439, tag_id: 17},
  {post_id: 440, tag_id: 27},
  {post_id: 440, tag_id: 31},
  {post_id: 441, tag_id: 29},
  {post_id: 441, tag_id: 31},
  {post_id: 442, tag_id: 27},
  {post_id: 443, tag_id: 24},
  {post_id: 443, tag_id: 19},
  {post_id: 444, tag_id: 31},
  {post_id: 445, tag_id: 24},
  {post_id: 445, tag_id: 31},
  {post_id: 446, tag_id: 17},
  {post_id: 446, tag_id: 24},
  {post_id: 447, tag_id: 24},
  {post_id: 447, tag_id: 31},
  {post_id: 448, tag_id: 17},
  {post_id: 448, tag_id: 27},
  {post_id: 449, tag_id: 17},
  {post_id: 449, tag_id: 27},
  {post_id: 450, tag_id: 17},
  {post_id: 450, tag_id: 27},
  {post_id: 451, tag_id: 22},
  {post_id: 451, tag_id: 18},
  {post_id: 452, tag_id: 32},
  {post_id: 452, tag_id: 24},
  {post_id: 453, tag_id: 17},
  {post_id: 454, tag_id: 31},
  {post_id: 455, tag_id: 17},
  {post_id: 455, tag_id: 28},
  {post_id: 456, tag_id: 17},
  {post_id: 456, tag_id: 28},
  {post_id: 457, tag_id: 17},
  {post_id: 457, tag_id: 33},
  {post_id: 458, tag_id: 17},
  {post_id: 459, tag_id: 30},
  {post_id: 459, tag_id: 17},
  {post_id: 459, tag_id: 27},
  {post_id: 460, tag_id: 32},
  {post_id: 461, tag_id: 32},
  {post_id: 462, tag_id: 24},
  {post_id: 462, tag_id: 19},
  {post_id: 463, tag_id: 23},
  {post_id: 463, tag_id: 31},
  {post_id: 464, tag_id: 17},
  {post_id: 465, tag_id: 32},
  {post_id: 466, tag_id: 32},
  {post_id: 467, tag_id: 17},
  {post_id: 467, tag_id: 33},
  {post_id: 468, tag_id: 27},
  {post_id: 468, tag_id: 32},
  {post_id: 468, tag_id: 33},
  {post_id: 468, tag_id: 31},
  {post_id: 469, tag_id: 24},
  {post_id: 469, tag_id: 31},
  {post_id: 470, tag_id: 17},
  {post_id: 470, tag_id: 29},
  {post_id: 470, tag_id: 18},
  {post_id: 471, tag_id: 17},
  {post_id: 472, tag_id: 17},
  {post_id: 472, tag_id: 32},
  {post_id: 473, tag_id: 17},
  {post_id: 473, tag_id: 32},
  {post_id: 474, tag_id: 31},
  {post_id: 475, tag_id: 32},
  {post_id: 475, tag_id: 23},
  {post_id: 476, tag_id: 23},
  {post_id: 477, tag_id: 17},
  {post_id: 477, tag_id: 19},
  {post_id: 478, tag_id: 17},
  {post_id: 478, tag_id: 19},
  {post_id: 479, tag_id: 17},
  {post_id: 479, tag_id: 19},
  {post_id: 480, tag_id: 27},
  {post_id: 480, tag_id: 31},
  {post_id: 481, tag_id: 17},
  {post_id: 482, tag_id: 23},
  {post_id: 482, tag_id: 18},
  {post_id: 482, tag_id: 31},
  {post_id: 483, tag_id: 24},
  {post_id: 483, tag_id: 19},
  {post_id: 484, tag_id: 18},
  {post_id: 484, tag_id: 31},
  {post_id: 485, tag_id: 17},
  {post_id: 485, tag_id: 18},
  {post_id: 486, tag_id: 17},
  {post_id: 486, tag_id: 18},
  {post_id: 487, tag_id: 22},
  {post_id: 488, tag_id: 22},
  {post_id: 489, tag_id: 30},
  {post_id: 489, tag_id: 22},
  {post_id: 489, tag_id: 34},
  {post_id: 490, tag_id: 32},
  {post_id: 490, tag_id: 31},
  {post_id: 491, tag_id: 22},
  {post_id: 492, tag_id: 29},
  {post_id: 492, tag_id: 31},
  {post_id: 493, tag_id: 22},
  {post_id: 493, tag_id: 18},
  {post_id: 494, tag_id: 17},
  {post_id: 494, tag_id: 23},
  {post_id: 494, tag_id: 18},
  {post_id: 495, tag_id: 32},
  {post_id: 495, tag_id: 31},
  {post_id: 496, tag_id: 17},
  {post_id: 496, tag_id: 18},
  {post_id: 497, tag_id: 17},
  {post_id: 497, tag_id: 18},
  {post_id: 498, tag_id: 31},
  {post_id: 499, tag_id: 24},
  {post_id: 499, tag_id: 31},
  {post_id: 500, tag_id: 24},
  {post_id: 500, tag_id: 31},
  {post_id: 501, tag_id: 17},
  {post_id: 501, tag_id: 18},
  {post_id: 502, tag_id: 27},
  {post_id: 502, tag_id: 32},
  {post_id: 502, tag_id: 31},
  {post_id: 503, tag_id: 24},
  {post_id: 504, tag_id: 24},
  {post_id: 504, tag_id: 31},
  {post_id: 505, tag_id: 24},
  {post_id: 506, tag_id: 31},
  {post_id: 507, tag_id: 31},
  {post_id: 508, tag_id: 30},
  {post_id: 508, tag_id: 17},
  {post_id: 508, tag_id: 19},
  {post_id: 509, tag_id: 23},
  {post_id: 509, tag_id: 18},
  {post_id: 509, tag_id: 31},
  {post_id: 510, tag_id: 22},
  {post_id: 510, tag_id: 24},
  {post_id: 511, tag_id: 17},
  {post_id: 511, tag_id: 23}
])
Tag.create!([
  {category: "algorithms", post_id: nil},
  {category: "data structures", post_id: nil},
  {category: "general", post_id: nil},
  {category: "HTML", post_id: nil},
  {category: "CSS", post_id: nil},
  {category: "javascript", post_id: nil},
  {category: "testing", post_id: nil},
  {category: "performance", post_id: nil},
  {category: "networking", post_id: nil},
  {category: "fun", post_id: nil},
  {category: "DOM", post_id: nil},
  {category: "non-technical", post_id: nil},
  {category: "Depth-first Search", post_id: nil},
  {category: "Breadth-first Search", post_id: nil},
  {category: "Graph", post_id: nil},
  {category: "Topological Sort", post_id: nil},
  {category: "Array", post_id: nil},
  {category: "Two Pointers", post_id: nil},
  {category: "Binary Search", post_id: nil},
  {category: "Data Structure", post_id: nil},
  {category: "Trie", post_id: nil},
  {category: "Linked List", post_id: nil},
  {category: "Hash Table", post_id: nil},
  {category: "Math", post_id: nil},
  {category: "Bit Manipulation", post_id: nil},
  {category: "Tree", post_id: nil},
  {category: "Dynamic Programming", post_id: nil},
  {category: "Sort", post_id: nil},
  {category: "Stack", post_id: nil},
  {category: "Divide and Conquer", post_id: nil},
  {category: "String", post_id: nil},
  {category: "Backtracking", post_id: nil},
  {category: "Greedy", post_id: nil},
  {category: "Heap", post_id: nil}
])
Tag::HABTM_Posts.create!([
  {post_id: 1, tag_id: 1},
  {post_id: 1, tag_id: 2},
  {post_id: 2, tag_id: 1},
  {post_id: 2, tag_id: 2},
  {post_id: 3, tag_id: 1},
  {post_id: 3, tag_id: 2},
  {post_id: 4, tag_id: 1},
  {post_id: 4, tag_id: 2},
  {post_id: 5, tag_id: 1},
  {post_id: 5, tag_id: 2},
  {post_id: 6, tag_id: 1},
  {post_id: 6, tag_id: 2},
  {post_id: 7, tag_id: 1},
  {post_id: 7, tag_id: 2},
  {post_id: 8, tag_id: 1},
  {post_id: 8, tag_id: 2},
  {post_id: 9, tag_id: 1},
  {post_id: 9, tag_id: 2},
  {post_id: 10, tag_id: 1},
  {post_id: 10, tag_id: 2},
  {post_id: 11, tag_id: 1},
  {post_id: 11, tag_id: 2},
  {post_id: 12, tag_id: 1},
  {post_id: 12, tag_id: 2},
  {post_id: 13, tag_id: 1},
  {post_id: 13, tag_id: 2},
  {post_id: 14, tag_id: 1},
  {post_id: 14, tag_id: 2},
  {post_id: 15, tag_id: 1},
  {post_id: 15, tag_id: 2},
  {post_id: 16, tag_id: 1},
  {post_id: 16, tag_id: 2},
  {post_id: 17, tag_id: 1},
  {post_id: 17, tag_id: 2},
  {post_id: 18, tag_id: 1},
  {post_id: 18, tag_id: 2},
  {post_id: 19, tag_id: 1},
  {post_id: 19, tag_id: 2},
  {post_id: 20, tag_id: 1},
  {post_id: 20, tag_id: 2},
  {post_id: 46, tag_id: 3},
  {post_id: 47, tag_id: 3},
  {post_id: 48, tag_id: 3},
  {post_id: 49, tag_id: 3},
  {post_id: 50, tag_id: 3},
  {post_id: 51, tag_id: 3},
  {post_id: 52, tag_id: 3},
  {post_id: 53, tag_id: 3},
  {post_id: 54, tag_id: 3},
  {post_id: 55, tag_id: 3},
  {post_id: 56, tag_id: 3},
  {post_id: 57, tag_id: 3},
  {post_id: 58, tag_id: 3},
  {post_id: 59, tag_id: 3},
  {post_id: 60, tag_id: 3},
  {post_id: 61, tag_id: 3},
  {post_id: 62, tag_id: 3},
  {post_id: 63, tag_id: 3},
  {post_id: 64, tag_id: 3},
  {post_id: 65, tag_id: 4},
  {post_id: 66, tag_id: 4},
  {post_id: 67, tag_id: 4},
  {post_id: 68, tag_id: 4},
  {post_id: 69, tag_id: 4},
  {post_id: 70, tag_id: 4},
  {post_id: 71, tag_id: 4},
  {post_id: 72, tag_id: 4},
  {post_id: 73, tag_id: 4},
  {post_id: 74, tag_id: 4},
  {post_id: 75, tag_id: 4},
  {post_id: 76, tag_id: 4},
  {post_id: 77, tag_id: 4},
  {post_id: 78, tag_id: 5},
  {post_id: 79, tag_id: 5},
  {post_id: 80, tag_id: 5},
  {post_id: 81, tag_id: 5},
  {post_id: 82, tag_id: 5},
  {post_id: 83, tag_id: 5},
  {post_id: 84, tag_id: 5},
  {post_id: 85, tag_id: 5},
  {post_id: 86, tag_id: 5},
  {post_id: 87, tag_id: 5},
  {post_id: 88, tag_id: 5},
  {post_id: 89, tag_id: 5},
  {post_id: 90, tag_id: 5},
  {post_id: 91, tag_id: 5},
  {post_id: 92, tag_id: 5},
  {post_id: 93, tag_id: 5},
  {post_id: 94, tag_id: 5},
  {post_id: 95, tag_id: 5},
  {post_id: 96, tag_id: 5},
  {post_id: 97, tag_id: 5},
  {post_id: 98, tag_id: 5},
  {post_id: 99, tag_id: 5},
  {post_id: 100, tag_id: 5},
  {post_id: 101, tag_id: 5},
  {post_id: 102, tag_id: 5},
  {post_id: 103, tag_id: 5},
  {post_id: 104, tag_id: 5},
  {post_id: 105, tag_id: 5},
  {post_id: 106, tag_id: 5},
  {post_id: 107, tag_id: 5},
  {post_id: 108, tag_id: 5},
  {post_id: 109, tag_id: 6},
  {post_id: 110, tag_id: 6},
  {post_id: 111, tag_id: 6},
  {post_id: 112, tag_id: 6},
  {post_id: 113, tag_id: 6},
  {post_id: 114, tag_id: 6},
  {post_id: 115, tag_id: 6},
  {post_id: 116, tag_id: 6},
  {post_id: 117, tag_id: 6},
  {post_id: 118, tag_id: 6},
  {post_id: 119, tag_id: 6},
  {post_id: 120, tag_id: 6},
  {post_id: 121, tag_id: 6},
  {post_id: 122, tag_id: 6},
  {post_id: 123, tag_id: 6},
  {post_id: 124, tag_id: 6},
  {post_id: 125, tag_id: 6},
  {post_id: 126, tag_id: 6},
  {post_id: 127, tag_id: 6},
  {post_id: 128, tag_id: 6},
  {post_id: 129, tag_id: 6},
  {post_id: 130, tag_id: 6},
  {post_id: 131, tag_id: 6},
  {post_id: 132, tag_id: 6},
  {post_id: 133, tag_id: 6},
  {post_id: 134, tag_id: 6},
  {post_id: 135, tag_id: 6},
  {post_id: 136, tag_id: 6},
  {post_id: 137, tag_id: 6},
  {post_id: 138, tag_id: 6},
  {post_id: 139, tag_id: 6},
  {post_id: 140, tag_id: 6},
  {post_id: 141, tag_id: 6},
  {post_id: 142, tag_id: 6},
  {post_id: 143, tag_id: 6},
  {post_id: 144, tag_id: 7},
  {post_id: 145, tag_id: 7},
  {post_id: 146, tag_id: 7},
  {post_id: 147, tag_id: 7},
  {post_id: 148, tag_id: 8},
  {post_id: 149, tag_id: 8},
  {post_id: 150, tag_id: 8},
  {post_id: 151, tag_id: 9},
  {post_id: 152, tag_id: 9},
  {post_id: 153, tag_id: 9},
  {post_id: 154, tag_id: 9},
  {post_id: 155, tag_id: 9},
  {post_id: 156, tag_id: 10},
  {post_id: 157, tag_id: 10},
  {post_id: 158, tag_id: 10},
  {post_id: 159, tag_id: 10},
  {post_id: 160, tag_id: 10},
  {post_id: 161, tag_id: 6},
  {post_id: 162, tag_id: 6},
  {post_id: 163, tag_id: 6},
  {post_id: 164, tag_id: 6},
  {post_id: 165, tag_id: 6},
  {post_id: 166, tag_id: 6},
  {post_id: 167, tag_id: 6},
  {post_id: 168, tag_id: 6},
  {post_id: 169, tag_id: 6},
  {post_id: 170, tag_id: 6},
  {post_id: 171, tag_id: 6},
  {post_id: 172, tag_id: 6},
  {post_id: 173, tag_id: 6},
  {post_id: 174, tag_id: 6},
  {post_id: 175, tag_id: 6},
  {post_id: 176, tag_id: 6},
  {post_id: 177, tag_id: 6},
  {post_id: 178, tag_id: 6},
  {post_id: 179, tag_id: 6},
  {post_id: 180, tag_id: 6},
  {post_id: 181, tag_id: 6},
  {post_id: 182, tag_id: 5},
  {post_id: 183, tag_id: 5},
  {post_id: 184, tag_id: 5},
  {post_id: 185, tag_id: 5},
  {post_id: 186, tag_id: 5},
  {post_id: 187, tag_id: 5},
  {post_id: 188, tag_id: 5},
  {post_id: 189, tag_id: 5},
  {post_id: 190, tag_id: 5},
  {post_id: 191, tag_id: 5},
  {post_id: 192, tag_id: 5},
  {post_id: 193, tag_id: 5},
  {post_id: 194, tag_id: 5},
  {post_id: 195, tag_id: 5},
  {post_id: 196, tag_id: 5},
  {post_id: 197, tag_id: 5},
  {post_id: 198, tag_id: 5},
  {post_id: 199, tag_id: 5},
  {post_id: 200, tag_id: 5},
  {post_id: 201, tag_id: 5},
  {post_id: 202, tag_id: 5},
  {post_id: 203, tag_id: 5},
  {post_id: 204, tag_id: 5},
  {post_id: 205, tag_id: 5},
  {post_id: 206, tag_id: 5},
  {post_id: 207, tag_id: 5},
  {post_id: 208, tag_id: 5},
  {post_id: 209, tag_id: 5},
  {post_id: 210, tag_id: 5},
  {post_id: 211, tag_id: 5},
  {post_id: 212, tag_id: 6},
  {post_id: 212, tag_id: 1},
  {post_id: 213, tag_id: 6},
  {post_id: 213, tag_id: 1},
  {post_id: 214, tag_id: 6},
  {post_id: 214, tag_id: 1},
  {post_id: 215, tag_id: 6},
  {post_id: 215, tag_id: 1},
  {post_id: 216, tag_id: 6},
  {post_id: 216, tag_id: 1},
  {post_id: 217, tag_id: 6},
  {post_id: 217, tag_id: 1},
  {post_id: 218, tag_id: 6},
  {post_id: 218, tag_id: 1},
  {post_id: 219, tag_id: 6},
  {post_id: 219, tag_id: 1},
  {post_id: 220, tag_id: 6},
  {post_id: 220, tag_id: 1},
  {post_id: 221, tag_id: 6},
  {post_id: 221, tag_id: 1},
  {post_id: 222, tag_id: 6},
  {post_id: 222, tag_id: 1},
  {post_id: 223, tag_id: 6},
  {post_id: 223, tag_id: 1},
  {post_id: 224, tag_id: 6},
  {post_id: 224, tag_id: 1},
  {post_id: 225, tag_id: 6},
  {post_id: 225, tag_id: 1},
  {post_id: 226, tag_id: 6},
  {post_id: 226, tag_id: 1},
  {post_id: 227, tag_id: 6},
  {post_id: 227, tag_id: 1},
  {post_id: 228, tag_id: 6},
  {post_id: 228, tag_id: 1},
  {post_id: 229, tag_id: 6},
  {post_id: 229, tag_id: 1},
  {post_id: 230, tag_id: 6},
  {post_id: 230, tag_id: 1},
  {post_id: 231, tag_id: 6},
  {post_id: 231, tag_id: 1},
  {post_id: 232, tag_id: 6},
  {post_id: 232, tag_id: 11},
  {post_id: 233, tag_id: 6},
  {post_id: 233, tag_id: 11},
  {post_id: 234, tag_id: 6},
  {post_id: 234, tag_id: 11},
  {post_id: 235, tag_id: 6},
  {post_id: 235, tag_id: 11},
  {post_id: 236, tag_id: 6},
  {post_id: 236, tag_id: 11},
  {post_id: 237, tag_id: 6},
  {post_id: 237, tag_id: 11},
  {post_id: 238, tag_id: 6},
  {post_id: 238, tag_id: 11},
  {post_id: 239, tag_id: 6},
  {post_id: 239, tag_id: 11},
  {post_id: 240, tag_id: 6},
  {post_id: 240, tag_id: 11},
  {post_id: 241, tag_id: 6},
  {post_id: 241, tag_id: 11},
  {post_id: 242, tag_id: 6},
  {post_id: 242, tag_id: 11},
  {post_id: 243, tag_id: 6},
  {post_id: 243, tag_id: 11},
  {post_id: 244, tag_id: 6},
  {post_id: 244, tag_id: 11},
  {post_id: 245, tag_id: 6},
  {post_id: 245, tag_id: 11},
  {post_id: 246, tag_id: 6},
  {post_id: 246, tag_id: 11},
  {post_id: 247, tag_id: 6},
  {post_id: 247, tag_id: 11},
  {post_id: 248, tag_id: 6},
  {post_id: 248, tag_id: 11},
  {post_id: 249, tag_id: 6},
  {post_id: 249, tag_id: 11},
  {post_id: 250, tag_id: 6},
  {post_id: 250, tag_id: 11},
  {post_id: 251, tag_id: 6},
  {post_id: 251, tag_id: 11},
  {post_id: 252, tag_id: 6},
  {post_id: 252, tag_id: 11},
  {post_id: 253, tag_id: 4},
  {post_id: 254, tag_id: 4},
  {post_id: 255, tag_id: 4},
  {post_id: 256, tag_id: 4},
  {post_id: 257, tag_id: 4},
  {post_id: 258, tag_id: 4},
  {post_id: 259, tag_id: 4},
  {post_id: 260, tag_id: 4},
  {post_id: 261, tag_id: 4},
  {post_id: 262, tag_id: 4},
  {post_id: 263, tag_id: 4},
  {post_id: 264, tag_id: 4},
  {post_id: 265, tag_id: 4},
  {post_id: 266, tag_id: 4},
  {post_id: 267, tag_id: 4},
  {post_id: 268, tag_id: 3},
  {post_id: 268, tag_id: 12},
  {post_id: 269, tag_id: 3},
  {post_id: 269, tag_id: 12},
  {post_id: 270, tag_id: 3},
  {post_id: 270, tag_id: 12},
  {post_id: 271, tag_id: 3},
  {post_id: 271, tag_id: 12},
  {post_id: 272, tag_id: 3},
  {post_id: 272, tag_id: 12},
  {post_id: 273, tag_id: 3},
  {post_id: 273, tag_id: 12},
  {post_id: 274, tag_id: 3},
  {post_id: 274, tag_id: 12},
  {post_id: 275, tag_id: 3},
  {post_id: 275, tag_id: 12},
  {post_id: 276, tag_id: 3},
  {post_id: 276, tag_id: 12},
  {post_id: 277, tag_id: 3},
  {post_id: 277, tag_id: 12},
  {post_id: 278, tag_id: 3},
  {post_id: 278, tag_id: 12},
  {post_id: 279, tag_id: 3},
  {post_id: 279, tag_id: 12},
  {post_id: 280, tag_id: 3},
  {post_id: 280, tag_id: 12},
  {post_id: 281, tag_id: 3},
  {post_id: 281, tag_id: 12},
  {post_id: 282, tag_id: 3},
  {post_id: 282, tag_id: 12},
  {post_id: 283, tag_id: 3},
  {post_id: 283, tag_id: 12},
  {post_id: 284, tag_id: 3},
  {post_id: 284, tag_id: 12},
  {post_id: 285, tag_id: 3},
  {post_id: 285, tag_id: 12},
  {post_id: 286, tag_id: 3},
  {post_id: 286, tag_id: 12},
  {post_id: 287, tag_id: 3},
  {post_id: 287, tag_id: 12},
  {post_id: 288, tag_id: 3},
  {post_id: 288, tag_id: 12},
  {post_id: 289, tag_id: 3},
  {post_id: 289, tag_id: 12},
  {post_id: 290, tag_id: 3},
  {post_id: 290, tag_id: 12},
  {post_id: 291, tag_id: 3},
  {post_id: 291, tag_id: 12},
  {post_id: 292, tag_id: 3},
  {post_id: 292, tag_id: 12},
  {post_id: 293, tag_id: 3},
  {post_id: 293, tag_id: 12},
  {post_id: 294, tag_id: 3},
  {post_id: 294, tag_id: 12},
  {post_id: 295, tag_id: 3},
  {post_id: 295, tag_id: 12},
  {post_id: 296, tag_id: 3},
  {post_id: 296, tag_id: 12},
  {post_id: 297, tag_id: 3},
  {post_id: 297, tag_id: 12},
  {post_id: 298, tag_id: 3},
  {post_id: 298, tag_id: 12},
  {post_id: 299, tag_id: 3},
  {post_id: 299, tag_id: 12},
  {post_id: 300, tag_id: 3},
  {post_id: 300, tag_id: 12},
  {post_id: 301, tag_id: 3},
  {post_id: 301, tag_id: 12},
  {post_id: 302, tag_id: 3},
  {post_id: 302, tag_id: 12},
  {post_id: 303, tag_id: 3},
  {post_id: 303, tag_id: 12},
  {post_id: 304, tag_id: 3},
  {post_id: 304, tag_id: 12},
  {post_id: 305, tag_id: 3},
  {post_id: 305, tag_id: 12},
  {post_id: 306, tag_id: 3},
  {post_id: 306, tag_id: 12},
  {post_id: 307, tag_id: 3},
  {post_id: 307, tag_id: 12},
  {post_id: 308, tag_id: 3},
  {post_id: 308, tag_id: 12},
  {post_id: 309, tag_id: 3},
  {post_id: 309, tag_id: 12},
  {post_id: 310, tag_id: 3},
  {post_id: 310, tag_id: 12},
  {post_id: 311, tag_id: 3},
  {post_id: 311, tag_id: 12},
  {post_id: 312, tag_id: 3},
  {post_id: 312, tag_id: 12},
  {post_id: 313, tag_id: 3},
  {post_id: 313, tag_id: 12},
  {post_id: 314, tag_id: 3},
  {post_id: 314, tag_id: 12},
  {post_id: 315, tag_id: 3},
  {post_id: 315, tag_id: 12},
  {post_id: 316, tag_id: 3},
  {post_id: 316, tag_id: 12},
  {post_id: 317, tag_id: 3},
  {post_id: 317, tag_id: 12},
  {post_id: 318, tag_id: 13},
  {post_id: 318, tag_id: 14},
  {post_id: 318, tag_id: 15},
  {post_id: 318, tag_id: 16},
  {post_id: 319, tag_id: 17},
  {post_id: 319, tag_id: 18},
  {post_id: 319, tag_id: 19},
  {post_id: 320, tag_id: 20},
  {post_id: 320, tag_id: 21},
  {post_id: 321, tag_id: 13},
  {post_id: 321, tag_id: 14},
  {post_id: 321, tag_id: 15},
  {post_id: 321, tag_id: 16},
  {post_id: 322, tag_id: 22},
  {post_id: 323, tag_id: 23},
  {post_id: 324, tag_id: 23},
  {post_id: 324, tag_id: 24},
  {post_id: 325, tag_id: 22},
  {post_id: 326, tag_id: 23},
  {post_id: 326, tag_id: 24},
  {post_id: 327, tag_id: 25},
  {post_id: 328, tag_id: 13},
  {post_id: 328, tag_id: 14},
  {post_id: 329, tag_id: 26},
  {post_id: 329, tag_id: 13},
  {post_id: 329, tag_id: 14},
  {post_id: 330, tag_id: 27},
  {post_id: 331, tag_id: 25},
  {post_id: 332, tag_id: 25},
  {post_id: 333, tag_id: 17},
  {post_id: 334, tag_id: 27},
  {post_id: 335, tag_id: 23},
  {post_id: 335, tag_id: 25},
  {post_id: 337, tag_id: 28},
  {post_id: 338, tag_id: 27},
  {post_id: 338, tag_id: 19},
  {post_id: 339, tag_id: 26},
  {post_id: 339, tag_id: 29},
  {post_id: 340, tag_id: 24},
  {post_id: 341, tag_id: 24},
  {post_id: 343, tag_id: 30},
  {post_id: 343, tag_id: 17},
  {post_id: 343, tag_id: 25},
  {post_id: 344, tag_id: 24},
  {post_id: 346, tag_id: 23},
  {post_id: 346, tag_id: 24},
  {post_id: 347, tag_id: 31},
  {post_id: 348, tag_id: 28},
  {post_id: 350, tag_id: 17},
  {post_id: 350, tag_id: 19},
  {post_id: 352, tag_id: 22},
  {post_id: 357, tag_id: 29},
  {post_id: 357, tag_id: 20},
  {post_id: 358, tag_id: 17},
  {post_id: 358, tag_id: 19},
  {post_id: 359, tag_id: 17},
  {post_id: 359, tag_id: 19},
  {post_id: 360, tag_id: 17},
  {post_id: 360, tag_id: 27},
  {post_id: 361, tag_id: 31},
  {post_id: 362, tag_id: 29},
  {post_id: 363, tag_id: 23},
  {post_id: 363, tag_id: 24},
  {post_id: 364, tag_id: 22},
  {post_id: 364, tag_id: 28},
  {post_id: 365, tag_id: 22},
  {post_id: 365, tag_id: 28},
  {post_id: 366, tag_id: 20},
  {post_id: 367, tag_id: 26},
  {post_id: 367, tag_id: 29},
  {post_id: 368, tag_id: 26},
  {post_id: 368, tag_id: 29},
  {post_id: 369, tag_id: 22},
  {post_id: 370, tag_id: 22},
  {post_id: 370, tag_id: 18},
  {post_id: 371, tag_id: 22},
  {post_id: 371, tag_id: 18},
  {post_id: 372, tag_id: 27},
  {post_id: 372, tag_id: 32},
  {post_id: 373, tag_id: 27},
  {post_id: 374, tag_id: 23},
  {post_id: 374, tag_id: 22},
  {post_id: 375, tag_id: 25},
  {post_id: 376, tag_id: 23},
  {post_id: 376, tag_id: 25},
  {post_id: 377, tag_id: 33},
  {post_id: 378, tag_id: 33},
  {post_id: 379, tag_id: 13},
  {post_id: 379, tag_id: 14},
  {post_id: 379, tag_id: 15},
  {post_id: 380, tag_id: 27},
  {post_id: 381, tag_id: 32},
  {post_id: 382, tag_id: 14},
  {post_id: 383, tag_id: 26},
  {post_id: 383, tag_id: 13},
  {post_id: 384, tag_id: 17},
  {post_id: 385, tag_id: 14},
  {post_id: 386, tag_id: 17},
  {post_id: 386, tag_id: 32},
  {post_id: 386, tag_id: 14},
  {post_id: 386, tag_id: 31},
  {post_id: 387, tag_id: 18},
  {post_id: 387, tag_id: 31},
  {post_id: 388, tag_id: 26},
  {post_id: 388, tag_id: 13},
  {post_id: 389, tag_id: 17},
  {post_id: 389, tag_id: 27},
  {post_id: 390, tag_id: 17},
  {post_id: 390, tag_id: 33},
  {post_id: 391, tag_id: 17},
  {post_id: 391, tag_id: 27},
  {post_id: 392, tag_id: 17},
  {post_id: 392, tag_id: 27},
  {post_id: 393, tag_id: 17},
  {post_id: 394, tag_id: 17},
  {post_id: 395, tag_id: 26},
  {post_id: 395, tag_id: 13},
  {post_id: 396, tag_id: 26},
  {post_id: 396, tag_id: 13},
  {post_id: 397, tag_id: 27},
  {post_id: 397, tag_id: 31},
  {post_id: 398, tag_id: 26},
  {post_id: 398, tag_id: 13},
  {post_id: 399, tag_id: 26},
  {post_id: 399, tag_id: 13},
  {post_id: 400, tag_id: 26},
  {post_id: 400, tag_id: 13},
  {post_id: 401, tag_id: 26},
  {post_id: 401, tag_id: 13},
  {post_id: 402, tag_id: 26},
  {post_id: 402, tag_id: 13},
  {post_id: 403, tag_id: 13},
  {post_id: 403, tag_id: 22},
  {post_id: 404, tag_id: 26},
  {post_id: 404, tag_id: 13},
  {post_id: 405, tag_id: 26},
  {post_id: 405, tag_id: 14},
  {post_id: 406, tag_id: 26},
  {post_id: 406, tag_id: 17},
  {post_id: 406, tag_id: 13},
  {post_id: 407, tag_id: 26},
  {post_id: 407, tag_id: 17},
  {post_id: 407, tag_id: 13},
  {post_id: 408, tag_id: 26},
  {post_id: 408, tag_id: 13},
  {post_id: 409, tag_id: 26},
  {post_id: 409, tag_id: 14},
  {post_id: 409, tag_id: 29},
  {post_id: 410, tag_id: 26},
  {post_id: 410, tag_id: 14},
  {post_id: 411, tag_id: 26},
  {post_id: 411, tag_id: 13},
  {post_id: 412, tag_id: 26},
  {post_id: 412, tag_id: 13},
  {post_id: 413, tag_id: 26},
  {post_id: 413, tag_id: 13},
  {post_id: 414, tag_id: 26},
  {post_id: 414, tag_id: 13},
  {post_id: 415, tag_id: 27},
  {post_id: 415, tag_id: 31},
  {post_id: 416, tag_id: 26},
  {post_id: 416, tag_id: 27},
  {post_id: 417, tag_id: 26},
  {post_id: 417, tag_id: 27},
  {post_id: 418, tag_id: 26},
  {post_id: 418, tag_id: 23},
  {post_id: 418, tag_id: 29},
  {post_id: 419, tag_id: 32},
  {post_id: 419, tag_id: 31},
  {post_id: 420, tag_id: 22},
  {post_id: 421, tag_id: 27},
  {post_id: 421, tag_id: 31},
  {post_id: 422, tag_id: 17},
  {post_id: 422, tag_id: 32},
  {post_id: 423, tag_id: 32},
  {post_id: 424, tag_id: 17},
  {post_id: 424, tag_id: 18},
  {post_id: 425, tag_id: 27},
  {post_id: 425, tag_id: 31},
  {post_id: 426, tag_id: 22},
  {post_id: 426, tag_id: 18},
  {post_id: 427, tag_id: 17},
  {post_id: 427, tag_id: 23},
  {post_id: 427, tag_id: 29},
  {post_id: 427, tag_id: 27},
  {post_id: 428, tag_id: 17},
  {post_id: 428, tag_id: 29},
  {post_id: 429, tag_id: 22},
  {post_id: 430, tag_id: 22},
  {post_id: 431, tag_id: 17},
  {post_id: 431, tag_id: 19},
  {post_id: 432, tag_id: 17},
  {post_id: 432, tag_id: 18},
  {post_id: 433, tag_id: 17},
  {post_id: 433, tag_id: 32},
  {post_id: 434, tag_id: 17},
  {post_id: 434, tag_id: 32},
  {post_id: 434, tag_id: 25},
  {post_id: 435, tag_id: 32},
  {post_id: 436, tag_id: 23},
  {post_id: 436, tag_id: 18},
  {post_id: 436, tag_id: 31},
  {post_id: 437, tag_id: 17},
  {post_id: 437, tag_id: 18},
  {post_id: 437, tag_id: 28},
  {post_id: 438, tag_id: 17},
  {post_id: 438, tag_id: 19},
  {post_id: 439, tag_id: 17},
  {post_id: 440, tag_id: 27},
  {post_id: 440, tag_id: 31},
  {post_id: 441, tag_id: 29},
  {post_id: 441, tag_id: 31},
  {post_id: 442, tag_id: 27},
  {post_id: 443, tag_id: 24},
  {post_id: 443, tag_id: 19},
  {post_id: 444, tag_id: 31},
  {post_id: 445, tag_id: 24},
  {post_id: 445, tag_id: 31},
  {post_id: 446, tag_id: 17},
  {post_id: 446, tag_id: 24},
  {post_id: 447, tag_id: 24},
  {post_id: 447, tag_id: 31},
  {post_id: 448, tag_id: 17},
  {post_id: 448, tag_id: 27},
  {post_id: 449, tag_id: 17},
  {post_id: 449, tag_id: 27},
  {post_id: 450, tag_id: 17},
  {post_id: 450, tag_id: 27},
  {post_id: 451, tag_id: 22},
  {post_id: 451, tag_id: 18},
  {post_id: 452, tag_id: 32},
  {post_id: 452, tag_id: 24},
  {post_id: 453, tag_id: 17},
  {post_id: 454, tag_id: 31},
  {post_id: 455, tag_id: 17},
  {post_id: 455, tag_id: 28},
  {post_id: 456, tag_id: 17},
  {post_id: 456, tag_id: 28},
  {post_id: 457, tag_id: 17},
  {post_id: 457, tag_id: 33},
  {post_id: 458, tag_id: 17},
  {post_id: 459, tag_id: 30},
  {post_id: 459, tag_id: 17},
  {post_id: 459, tag_id: 27},
  {post_id: 460, tag_id: 32},
  {post_id: 461, tag_id: 32},
  {post_id: 462, tag_id: 24},
  {post_id: 462, tag_id: 19},
  {post_id: 463, tag_id: 23},
  {post_id: 463, tag_id: 31},
  {post_id: 464, tag_id: 17},
  {post_id: 465, tag_id: 32},
  {post_id: 466, tag_id: 32},
  {post_id: 467, tag_id: 17},
  {post_id: 467, tag_id: 33},
  {post_id: 468, tag_id: 27},
  {post_id: 468, tag_id: 32},
  {post_id: 468, tag_id: 33},
  {post_id: 468, tag_id: 31},
  {post_id: 469, tag_id: 24},
  {post_id: 469, tag_id: 31},
  {post_id: 470, tag_id: 17},
  {post_id: 470, tag_id: 29},
  {post_id: 470, tag_id: 18},
  {post_id: 471, tag_id: 17},
  {post_id: 472, tag_id: 17},
  {post_id: 472, tag_id: 32},
  {post_id: 473, tag_id: 17},
  {post_id: 473, tag_id: 32},
  {post_id: 474, tag_id: 31},
  {post_id: 475, tag_id: 32},
  {post_id: 475, tag_id: 23},
  {post_id: 476, tag_id: 23},
  {post_id: 477, tag_id: 17},
  {post_id: 477, tag_id: 19},
  {post_id: 478, tag_id: 17},
  {post_id: 478, tag_id: 19},
  {post_id: 479, tag_id: 17},
  {post_id: 479, tag_id: 19},
  {post_id: 480, tag_id: 27},
  {post_id: 480, tag_id: 31},
  {post_id: 481, tag_id: 17},
  {post_id: 482, tag_id: 23},
  {post_id: 482, tag_id: 18},
  {post_id: 482, tag_id: 31},
  {post_id: 483, tag_id: 24},
  {post_id: 483, tag_id: 19},
  {post_id: 484, tag_id: 18},
  {post_id: 484, tag_id: 31},
  {post_id: 485, tag_id: 17},
  {post_id: 485, tag_id: 18},
  {post_id: 486, tag_id: 17},
  {post_id: 486, tag_id: 18},
  {post_id: 487, tag_id: 22},
  {post_id: 488, tag_id: 22},
  {post_id: 489, tag_id: 30},
  {post_id: 489, tag_id: 22},
  {post_id: 489, tag_id: 34},
  {post_id: 490, tag_id: 32},
  {post_id: 490, tag_id: 31},
  {post_id: 491, tag_id: 22},
  {post_id: 492, tag_id: 29},
  {post_id: 492, tag_id: 31},
  {post_id: 493, tag_id: 22},
  {post_id: 493, tag_id: 18},
  {post_id: 494, tag_id: 17},
  {post_id: 494, tag_id: 23},
  {post_id: 494, tag_id: 18},
  {post_id: 495, tag_id: 32},
  {post_id: 495, tag_id: 31},
  {post_id: 496, tag_id: 17},
  {post_id: 496, tag_id: 18},
  {post_id: 497, tag_id: 17},
  {post_id: 497, tag_id: 18},
  {post_id: 498, tag_id: 31},
  {post_id: 499, tag_id: 24},
  {post_id: 499, tag_id: 31},
  {post_id: 500, tag_id: 24},
  {post_id: 500, tag_id: 31},
  {post_id: 501, tag_id: 17},
  {post_id: 501, tag_id: 18},
  {post_id: 502, tag_id: 27},
  {post_id: 502, tag_id: 32},
  {post_id: 502, tag_id: 31},
  {post_id: 503, tag_id: 24},
  {post_id: 504, tag_id: 24},
  {post_id: 504, tag_id: 31},
  {post_id: 505, tag_id: 24},
  {post_id: 506, tag_id: 31},
  {post_id: 507, tag_id: 31},
  {post_id: 508, tag_id: 30},
  {post_id: 508, tag_id: 17},
  {post_id: 508, tag_id: 19},
  {post_id: 509, tag_id: 23},
  {post_id: 509, tag_id: 18},
  {post_id: 509, tag_id: 31},
  {post_id: 510, tag_id: 22},
  {post_id: 510, tag_id: 24},
  {post_id: 511, tag_id: 17},
  {post_id: 511, tag_id: 23},
  {post_id: 1, tag_id: 1},
  {post_id: 1, tag_id: 2},
  {post_id: 2, tag_id: 1},
  {post_id: 2, tag_id: 2},
  {post_id: 3, tag_id: 1},
  {post_id: 3, tag_id: 2},
  {post_id: 4, tag_id: 1},
  {post_id: 4, tag_id: 2},
  {post_id: 5, tag_id: 1},
  {post_id: 5, tag_id: 2},
  {post_id: 6, tag_id: 1},
  {post_id: 6, tag_id: 2},
  {post_id: 7, tag_id: 1},
  {post_id: 7, tag_id: 2},
  {post_id: 8, tag_id: 1},
  {post_id: 8, tag_id: 2},
  {post_id: 9, tag_id: 1},
  {post_id: 9, tag_id: 2},
  {post_id: 10, tag_id: 1},
  {post_id: 10, tag_id: 2},
  {post_id: 11, tag_id: 1},
  {post_id: 11, tag_id: 2},
  {post_id: 12, tag_id: 1},
  {post_id: 12, tag_id: 2},
  {post_id: 13, tag_id: 1},
  {post_id: 13, tag_id: 2},
  {post_id: 14, tag_id: 1},
  {post_id: 14, tag_id: 2},
  {post_id: 15, tag_id: 1},
  {post_id: 15, tag_id: 2},
  {post_id: 16, tag_id: 1},
  {post_id: 16, tag_id: 2},
  {post_id: 17, tag_id: 1},
  {post_id: 17, tag_id: 2},
  {post_id: 18, tag_id: 1},
  {post_id: 18, tag_id: 2},
  {post_id: 19, tag_id: 1},
  {post_id: 19, tag_id: 2},
  {post_id: 20, tag_id: 1},
  {post_id: 20, tag_id: 2},
  {post_id: 46, tag_id: 3},
  {post_id: 47, tag_id: 3},
  {post_id: 48, tag_id: 3},
  {post_id: 49, tag_id: 3},
  {post_id: 50, tag_id: 3},
  {post_id: 51, tag_id: 3},
  {post_id: 52, tag_id: 3},
  {post_id: 53, tag_id: 3},
  {post_id: 54, tag_id: 3},
  {post_id: 55, tag_id: 3},
  {post_id: 56, tag_id: 3},
  {post_id: 57, tag_id: 3},
  {post_id: 58, tag_id: 3},
  {post_id: 59, tag_id: 3},
  {post_id: 60, tag_id: 3},
  {post_id: 61, tag_id: 3},
  {post_id: 62, tag_id: 3},
  {post_id: 63, tag_id: 3},
  {post_id: 64, tag_id: 3},
  {post_id: 65, tag_id: 4},
  {post_id: 66, tag_id: 4},
  {post_id: 67, tag_id: 4},
  {post_id: 68, tag_id: 4},
  {post_id: 69, tag_id: 4},
  {post_id: 70, tag_id: 4},
  {post_id: 71, tag_id: 4},
  {post_id: 72, tag_id: 4},
  {post_id: 73, tag_id: 4},
  {post_id: 74, tag_id: 4},
  {post_id: 75, tag_id: 4},
  {post_id: 76, tag_id: 4},
  {post_id: 77, tag_id: 4},
  {post_id: 78, tag_id: 5},
  {post_id: 79, tag_id: 5},
  {post_id: 80, tag_id: 5},
  {post_id: 81, tag_id: 5},
  {post_id: 82, tag_id: 5},
  {post_id: 83, tag_id: 5},
  {post_id: 84, tag_id: 5},
  {post_id: 85, tag_id: 5},
  {post_id: 86, tag_id: 5},
  {post_id: 87, tag_id: 5},
  {post_id: 88, tag_id: 5},
  {post_id: 89, tag_id: 5},
  {post_id: 90, tag_id: 5},
  {post_id: 91, tag_id: 5},
  {post_id: 92, tag_id: 5},
  {post_id: 93, tag_id: 5},
  {post_id: 94, tag_id: 5},
  {post_id: 95, tag_id: 5},
  {post_id: 96, tag_id: 5},
  {post_id: 97, tag_id: 5},
  {post_id: 98, tag_id: 5},
  {post_id: 99, tag_id: 5},
  {post_id: 100, tag_id: 5},
  {post_id: 101, tag_id: 5},
  {post_id: 102, tag_id: 5},
  {post_id: 103, tag_id: 5},
  {post_id: 104, tag_id: 5},
  {post_id: 105, tag_id: 5},
  {post_id: 106, tag_id: 5},
  {post_id: 107, tag_id: 5},
  {post_id: 108, tag_id: 5},
  {post_id: 109, tag_id: 6},
  {post_id: 110, tag_id: 6},
  {post_id: 111, tag_id: 6},
  {post_id: 112, tag_id: 6},
  {post_id: 113, tag_id: 6},
  {post_id: 114, tag_id: 6},
  {post_id: 115, tag_id: 6},
  {post_id: 116, tag_id: 6},
  {post_id: 117, tag_id: 6},
  {post_id: 118, tag_id: 6},
  {post_id: 119, tag_id: 6},
  {post_id: 120, tag_id: 6},
  {post_id: 121, tag_id: 6},
  {post_id: 122, tag_id: 6},
  {post_id: 123, tag_id: 6},
  {post_id: 124, tag_id: 6},
  {post_id: 125, tag_id: 6},
  {post_id: 126, tag_id: 6},
  {post_id: 127, tag_id: 6},
  {post_id: 128, tag_id: 6},
  {post_id: 129, tag_id: 6},
  {post_id: 130, tag_id: 6},
  {post_id: 131, tag_id: 6},
  {post_id: 132, tag_id: 6},
  {post_id: 133, tag_id: 6},
  {post_id: 134, tag_id: 6},
  {post_id: 135, tag_id: 6},
  {post_id: 136, tag_id: 6},
  {post_id: 137, tag_id: 6},
  {post_id: 138, tag_id: 6},
  {post_id: 139, tag_id: 6},
  {post_id: 140, tag_id: 6},
  {post_id: 141, tag_id: 6},
  {post_id: 142, tag_id: 6},
  {post_id: 143, tag_id: 6},
  {post_id: 144, tag_id: 7},
  {post_id: 145, tag_id: 7},
  {post_id: 146, tag_id: 7},
  {post_id: 147, tag_id: 7},
  {post_id: 148, tag_id: 8},
  {post_id: 149, tag_id: 8},
  {post_id: 150, tag_id: 8},
  {post_id: 151, tag_id: 9},
  {post_id: 152, tag_id: 9},
  {post_id: 153, tag_id: 9},
  {post_id: 154, tag_id: 9},
  {post_id: 155, tag_id: 9},
  {post_id: 156, tag_id: 10},
  {post_id: 157, tag_id: 10},
  {post_id: 158, tag_id: 10},
  {post_id: 159, tag_id: 10},
  {post_id: 160, tag_id: 10},
  {post_id: 161, tag_id: 6},
  {post_id: 162, tag_id: 6},
  {post_id: 163, tag_id: 6},
  {post_id: 164, tag_id: 6},
  {post_id: 165, tag_id: 6},
  {post_id: 166, tag_id: 6},
  {post_id: 167, tag_id: 6},
  {post_id: 168, tag_id: 6},
  {post_id: 169, tag_id: 6},
  {post_id: 170, tag_id: 6},
  {post_id: 171, tag_id: 6},
  {post_id: 172, tag_id: 6},
  {post_id: 173, tag_id: 6},
  {post_id: 174, tag_id: 6},
  {post_id: 175, tag_id: 6},
  {post_id: 176, tag_id: 6},
  {post_id: 177, tag_id: 6},
  {post_id: 178, tag_id: 6},
  {post_id: 179, tag_id: 6},
  {post_id: 180, tag_id: 6},
  {post_id: 181, tag_id: 6},
  {post_id: 182, tag_id: 5},
  {post_id: 183, tag_id: 5},
  {post_id: 184, tag_id: 5},
  {post_id: 185, tag_id: 5},
  {post_id: 186, tag_id: 5},
  {post_id: 187, tag_id: 5},
  {post_id: 188, tag_id: 5},
  {post_id: 189, tag_id: 5},
  {post_id: 190, tag_id: 5},
  {post_id: 191, tag_id: 5},
  {post_id: 192, tag_id: 5},
  {post_id: 193, tag_id: 5},
  {post_id: 194, tag_id: 5},
  {post_id: 195, tag_id: 5},
  {post_id: 196, tag_id: 5},
  {post_id: 197, tag_id: 5},
  {post_id: 198, tag_id: 5},
  {post_id: 199, tag_id: 5},
  {post_id: 200, tag_id: 5},
  {post_id: 201, tag_id: 5},
  {post_id: 202, tag_id: 5},
  {post_id: 203, tag_id: 5},
  {post_id: 204, tag_id: 5},
  {post_id: 205, tag_id: 5},
  {post_id: 206, tag_id: 5},
  {post_id: 207, tag_id: 5},
  {post_id: 208, tag_id: 5},
  {post_id: 209, tag_id: 5},
  {post_id: 210, tag_id: 5},
  {post_id: 211, tag_id: 5},
  {post_id: 212, tag_id: 6},
  {post_id: 212, tag_id: 1},
  {post_id: 213, tag_id: 6},
  {post_id: 213, tag_id: 1},
  {post_id: 214, tag_id: 6},
  {post_id: 214, tag_id: 1},
  {post_id: 215, tag_id: 6},
  {post_id: 215, tag_id: 1},
  {post_id: 216, tag_id: 6},
  {post_id: 216, tag_id: 1},
  {post_id: 217, tag_id: 6},
  {post_id: 217, tag_id: 1},
  {post_id: 218, tag_id: 6},
  {post_id: 218, tag_id: 1},
  {post_id: 219, tag_id: 6},
  {post_id: 219, tag_id: 1},
  {post_id: 220, tag_id: 6},
  {post_id: 220, tag_id: 1},
  {post_id: 221, tag_id: 6},
  {post_id: 221, tag_id: 1},
  {post_id: 222, tag_id: 6},
  {post_id: 222, tag_id: 1},
  {post_id: 223, tag_id: 6},
  {post_id: 223, tag_id: 1},
  {post_id: 224, tag_id: 6},
  {post_id: 224, tag_id: 1},
  {post_id: 225, tag_id: 6},
  {post_id: 225, tag_id: 1},
  {post_id: 226, tag_id: 6},
  {post_id: 226, tag_id: 1},
  {post_id: 227, tag_id: 6},
  {post_id: 227, tag_id: 1},
  {post_id: 228, tag_id: 6},
  {post_id: 228, tag_id: 1},
  {post_id: 229, tag_id: 6},
  {post_id: 229, tag_id: 1},
  {post_id: 230, tag_id: 6},
  {post_id: 230, tag_id: 1},
  {post_id: 231, tag_id: 6},
  {post_id: 231, tag_id: 1},
  {post_id: 232, tag_id: 6},
  {post_id: 232, tag_id: 11},
  {post_id: 233, tag_id: 6},
  {post_id: 233, tag_id: 11},
  {post_id: 234, tag_id: 6},
  {post_id: 234, tag_id: 11},
  {post_id: 235, tag_id: 6},
  {post_id: 235, tag_id: 11},
  {post_id: 236, tag_id: 6},
  {post_id: 236, tag_id: 11},
  {post_id: 237, tag_id: 6},
  {post_id: 237, tag_id: 11},
  {post_id: 238, tag_id: 6},
  {post_id: 238, tag_id: 11},
  {post_id: 239, tag_id: 6},
  {post_id: 239, tag_id: 11},
  {post_id: 240, tag_id: 6},
  {post_id: 240, tag_id: 11},
  {post_id: 241, tag_id: 6},
  {post_id: 241, tag_id: 11},
  {post_id: 242, tag_id: 6},
  {post_id: 242, tag_id: 11},
  {post_id: 243, tag_id: 6},
  {post_id: 243, tag_id: 11},
  {post_id: 244, tag_id: 6},
  {post_id: 244, tag_id: 11},
  {post_id: 245, tag_id: 6},
  {post_id: 245, tag_id: 11},
  {post_id: 246, tag_id: 6},
  {post_id: 246, tag_id: 11},
  {post_id: 247, tag_id: 6},
  {post_id: 247, tag_id: 11},
  {post_id: 248, tag_id: 6},
  {post_id: 248, tag_id: 11},
  {post_id: 249, tag_id: 6},
  {post_id: 249, tag_id: 11},
  {post_id: 250, tag_id: 6},
  {post_id: 250, tag_id: 11},
  {post_id: 251, tag_id: 6},
  {post_id: 251, tag_id: 11},
  {post_id: 252, tag_id: 6},
  {post_id: 252, tag_id: 11},
  {post_id: 253, tag_id: 4},
  {post_id: 254, tag_id: 4},
  {post_id: 255, tag_id: 4},
  {post_id: 256, tag_id: 4},
  {post_id: 257, tag_id: 4},
  {post_id: 258, tag_id: 4},
  {post_id: 259, tag_id: 4},
  {post_id: 260, tag_id: 4},
  {post_id: 261, tag_id: 4},
  {post_id: 262, tag_id: 4},
  {post_id: 263, tag_id: 4},
  {post_id: 264, tag_id: 4},
  {post_id: 265, tag_id: 4},
  {post_id: 266, tag_id: 4},
  {post_id: 267, tag_id: 4},
  {post_id: 268, tag_id: 3},
  {post_id: 268, tag_id: 12},
  {post_id: 269, tag_id: 3},
  {post_id: 269, tag_id: 12},
  {post_id: 270, tag_id: 3},
  {post_id: 270, tag_id: 12},
  {post_id: 271, tag_id: 3},
  {post_id: 271, tag_id: 12},
  {post_id: 272, tag_id: 3},
  {post_id: 272, tag_id: 12},
  {post_id: 273, tag_id: 3},
  {post_id: 273, tag_id: 12},
  {post_id: 274, tag_id: 3},
  {post_id: 274, tag_id: 12},
  {post_id: 275, tag_id: 3},
  {post_id: 275, tag_id: 12},
  {post_id: 276, tag_id: 3},
  {post_id: 276, tag_id: 12},
  {post_id: 277, tag_id: 3},
  {post_id: 277, tag_id: 12},
  {post_id: 278, tag_id: 3},
  {post_id: 278, tag_id: 12},
  {post_id: 279, tag_id: 3},
  {post_id: 279, tag_id: 12},
  {post_id: 280, tag_id: 3},
  {post_id: 280, tag_id: 12},
  {post_id: 281, tag_id: 3},
  {post_id: 281, tag_id: 12},
  {post_id: 282, tag_id: 3},
  {post_id: 282, tag_id: 12},
  {post_id: 283, tag_id: 3},
  {post_id: 283, tag_id: 12},
  {post_id: 284, tag_id: 3},
  {post_id: 284, tag_id: 12},
  {post_id: 285, tag_id: 3},
  {post_id: 285, tag_id: 12},
  {post_id: 286, tag_id: 3},
  {post_id: 286, tag_id: 12},
  {post_id: 287, tag_id: 3},
  {post_id: 287, tag_id: 12},
  {post_id: 288, tag_id: 3},
  {post_id: 288, tag_id: 12},
  {post_id: 289, tag_id: 3},
  {post_id: 289, tag_id: 12},
  {post_id: 290, tag_id: 3},
  {post_id: 290, tag_id: 12},
  {post_id: 291, tag_id: 3},
  {post_id: 291, tag_id: 12},
  {post_id: 292, tag_id: 3},
  {post_id: 292, tag_id: 12},
  {post_id: 293, tag_id: 3},
  {post_id: 293, tag_id: 12},
  {post_id: 294, tag_id: 3},
  {post_id: 294, tag_id: 12},
  {post_id: 295, tag_id: 3},
  {post_id: 295, tag_id: 12},
  {post_id: 296, tag_id: 3},
  {post_id: 296, tag_id: 12},
  {post_id: 297, tag_id: 3},
  {post_id: 297, tag_id: 12},
  {post_id: 298, tag_id: 3},
  {post_id: 298, tag_id: 12},
  {post_id: 299, tag_id: 3},
  {post_id: 299, tag_id: 12},
  {post_id: 300, tag_id: 3},
  {post_id: 300, tag_id: 12},
  {post_id: 301, tag_id: 3},
  {post_id: 301, tag_id: 12},
  {post_id: 302, tag_id: 3},
  {post_id: 302, tag_id: 12},
  {post_id: 303, tag_id: 3},
  {post_id: 303, tag_id: 12},
  {post_id: 304, tag_id: 3},
  {post_id: 304, tag_id: 12},
  {post_id: 305, tag_id: 3},
  {post_id: 305, tag_id: 12},
  {post_id: 306, tag_id: 3},
  {post_id: 306, tag_id: 12},
  {post_id: 307, tag_id: 3},
  {post_id: 307, tag_id: 12},
  {post_id: 308, tag_id: 3},
  {post_id: 308, tag_id: 12},
  {post_id: 309, tag_id: 3},
  {post_id: 309, tag_id: 12},
  {post_id: 310, tag_id: 3},
  {post_id: 310, tag_id: 12},
  {post_id: 311, tag_id: 3},
  {post_id: 311, tag_id: 12},
  {post_id: 312, tag_id: 3},
  {post_id: 312, tag_id: 12},
  {post_id: 313, tag_id: 3},
  {post_id: 313, tag_id: 12},
  {post_id: 314, tag_id: 3},
  {post_id: 314, tag_id: 12},
  {post_id: 315, tag_id: 3},
  {post_id: 315, tag_id: 12},
  {post_id: 316, tag_id: 3},
  {post_id: 316, tag_id: 12},
  {post_id: 317, tag_id: 3},
  {post_id: 317, tag_id: 12},
  {post_id: 318, tag_id: 13},
  {post_id: 318, tag_id: 14},
  {post_id: 318, tag_id: 15},
  {post_id: 318, tag_id: 16},
  {post_id: 319, tag_id: 17},
  {post_id: 319, tag_id: 18},
  {post_id: 319, tag_id: 19},
  {post_id: 320, tag_id: 20},
  {post_id: 320, tag_id: 21},
  {post_id: 321, tag_id: 13},
  {post_id: 321, tag_id: 14},
  {post_id: 321, tag_id: 15},
  {post_id: 321, tag_id: 16},
  {post_id: 322, tag_id: 22},
  {post_id: 323, tag_id: 23},
  {post_id: 324, tag_id: 23},
  {post_id: 324, tag_id: 24},
  {post_id: 325, tag_id: 22},
  {post_id: 326, tag_id: 23},
  {post_id: 326, tag_id: 24},
  {post_id: 327, tag_id: 25},
  {post_id: 328, tag_id: 13},
  {post_id: 328, tag_id: 14},
  {post_id: 329, tag_id: 26},
  {post_id: 329, tag_id: 13},
  {post_id: 329, tag_id: 14},
  {post_id: 330, tag_id: 27},
  {post_id: 331, tag_id: 25},
  {post_id: 332, tag_id: 25},
  {post_id: 333, tag_id: 17},
  {post_id: 334, tag_id: 27},
  {post_id: 335, tag_id: 23},
  {post_id: 335, tag_id: 25},
  {post_id: 337, tag_id: 28},
  {post_id: 338, tag_id: 27},
  {post_id: 338, tag_id: 19},
  {post_id: 339, tag_id: 26},
  {post_id: 339, tag_id: 29},
  {post_id: 340, tag_id: 24},
  {post_id: 341, tag_id: 24},
  {post_id: 343, tag_id: 30},
  {post_id: 343, tag_id: 17},
  {post_id: 343, tag_id: 25},
  {post_id: 344, tag_id: 24},
  {post_id: 346, tag_id: 23},
  {post_id: 346, tag_id: 24},
  {post_id: 347, tag_id: 31},
  {post_id: 348, tag_id: 28},
  {post_id: 350, tag_id: 17},
  {post_id: 350, tag_id: 19},
  {post_id: 352, tag_id: 22},
  {post_id: 357, tag_id: 29},
  {post_id: 357, tag_id: 20},
  {post_id: 358, tag_id: 17},
  {post_id: 358, tag_id: 19},
  {post_id: 359, tag_id: 17},
  {post_id: 359, tag_id: 19},
  {post_id: 360, tag_id: 17},
  {post_id: 360, tag_id: 27},
  {post_id: 361, tag_id: 31},
  {post_id: 362, tag_id: 29},
  {post_id: 363, tag_id: 23},
  {post_id: 363, tag_id: 24},
  {post_id: 364, tag_id: 22},
  {post_id: 364, tag_id: 28},
  {post_id: 365, tag_id: 22},
  {post_id: 365, tag_id: 28},
  {post_id: 366, tag_id: 20},
  {post_id: 367, tag_id: 26},
  {post_id: 367, tag_id: 29},
  {post_id: 368, tag_id: 26},
  {post_id: 368, tag_id: 29},
  {post_id: 369, tag_id: 22},
  {post_id: 370, tag_id: 22},
  {post_id: 370, tag_id: 18},
  {post_id: 371, tag_id: 22},
  {post_id: 371, tag_id: 18},
  {post_id: 372, tag_id: 27},
  {post_id: 372, tag_id: 32},
  {post_id: 373, tag_id: 27},
  {post_id: 374, tag_id: 23},
  {post_id: 374, tag_id: 22},
  {post_id: 375, tag_id: 25},
  {post_id: 376, tag_id: 23},
  {post_id: 376, tag_id: 25},
  {post_id: 377, tag_id: 33},
  {post_id: 378, tag_id: 33},
  {post_id: 379, tag_id: 13},
  {post_id: 379, tag_id: 14},
  {post_id: 379, tag_id: 15},
  {post_id: 380, tag_id: 27},
  {post_id: 381, tag_id: 32},
  {post_id: 382, tag_id: 14},
  {post_id: 383, tag_id: 26},
  {post_id: 383, tag_id: 13},
  {post_id: 384, tag_id: 17},
  {post_id: 385, tag_id: 14},
  {post_id: 386, tag_id: 17},
  {post_id: 386, tag_id: 32},
  {post_id: 386, tag_id: 14},
  {post_id: 386, tag_id: 31},
  {post_id: 387, tag_id: 18},
  {post_id: 387, tag_id: 31},
  {post_id: 388, tag_id: 26},
  {post_id: 388, tag_id: 13},
  {post_id: 389, tag_id: 17},
  {post_id: 389, tag_id: 27},
  {post_id: 390, tag_id: 17},
  {post_id: 390, tag_id: 33},
  {post_id: 391, tag_id: 17},
  {post_id: 391, tag_id: 27},
  {post_id: 392, tag_id: 17},
  {post_id: 392, tag_id: 27},
  {post_id: 393, tag_id: 17},
  {post_id: 394, tag_id: 17},
  {post_id: 395, tag_id: 26},
  {post_id: 395, tag_id: 13},
  {post_id: 396, tag_id: 26},
  {post_id: 396, tag_id: 13},
  {post_id: 397, tag_id: 27},
  {post_id: 397, tag_id: 31},
  {post_id: 398, tag_id: 26},
  {post_id: 398, tag_id: 13},
  {post_id: 399, tag_id: 26},
  {post_id: 399, tag_id: 13},
  {post_id: 400, tag_id: 26},
  {post_id: 400, tag_id: 13},
  {post_id: 401, tag_id: 26},
  {post_id: 401, tag_id: 13},
  {post_id: 402, tag_id: 26},
  {post_id: 402, tag_id: 13},
  {post_id: 403, tag_id: 13},
  {post_id: 403, tag_id: 22},
  {post_id: 404, tag_id: 26},
  {post_id: 404, tag_id: 13},
  {post_id: 405, tag_id: 26},
  {post_id: 405, tag_id: 14},
  {post_id: 406, tag_id: 26},
  {post_id: 406, tag_id: 17},
  {post_id: 406, tag_id: 13},
  {post_id: 407, tag_id: 26},
  {post_id: 407, tag_id: 17},
  {post_id: 407, tag_id: 13},
  {post_id: 408, tag_id: 26},
  {post_id: 408, tag_id: 13},
  {post_id: 409, tag_id: 26},
  {post_id: 409, tag_id: 14},
  {post_id: 409, tag_id: 29},
  {post_id: 410, tag_id: 26},
  {post_id: 410, tag_id: 14},
  {post_id: 411, tag_id: 26},
  {post_id: 411, tag_id: 13},
  {post_id: 412, tag_id: 26},
  {post_id: 412, tag_id: 13},
  {post_id: 413, tag_id: 26},
  {post_id: 413, tag_id: 13},
  {post_id: 414, tag_id: 26},
  {post_id: 414, tag_id: 13},
  {post_id: 415, tag_id: 27},
  {post_id: 415, tag_id: 31},
  {post_id: 416, tag_id: 26},
  {post_id: 416, tag_id: 27},
  {post_id: 417, tag_id: 26},
  {post_id: 417, tag_id: 27},
  {post_id: 418, tag_id: 26},
  {post_id: 418, tag_id: 23},
  {post_id: 418, tag_id: 29},
  {post_id: 419, tag_id: 32},
  {post_id: 419, tag_id: 31},
  {post_id: 420, tag_id: 22},
  {post_id: 421, tag_id: 27},
  {post_id: 421, tag_id: 31},
  {post_id: 422, tag_id: 17},
  {post_id: 422, tag_id: 32},
  {post_id: 423, tag_id: 32},
  {post_id: 424, tag_id: 17},
  {post_id: 424, tag_id: 18},
  {post_id: 425, tag_id: 27},
  {post_id: 425, tag_id: 31},
  {post_id: 426, tag_id: 22},
  {post_id: 426, tag_id: 18},
  {post_id: 427, tag_id: 17},
  {post_id: 427, tag_id: 23},
  {post_id: 427, tag_id: 29},
  {post_id: 427, tag_id: 27},
  {post_id: 428, tag_id: 17},
  {post_id: 428, tag_id: 29},
  {post_id: 429, tag_id: 22},
  {post_id: 430, tag_id: 22},
  {post_id: 431, tag_id: 17},
  {post_id: 431, tag_id: 19},
  {post_id: 432, tag_id: 17},
  {post_id: 432, tag_id: 18},
  {post_id: 433, tag_id: 17},
  {post_id: 433, tag_id: 32},
  {post_id: 434, tag_id: 17},
  {post_id: 434, tag_id: 32},
  {post_id: 434, tag_id: 25},
  {post_id: 435, tag_id: 32},
  {post_id: 436, tag_id: 23},
  {post_id: 436, tag_id: 18},
  {post_id: 436, tag_id: 31},
  {post_id: 437, tag_id: 17},
  {post_id: 437, tag_id: 18},
  {post_id: 437, tag_id: 28},
  {post_id: 438, tag_id: 17},
  {post_id: 438, tag_id: 19},
  {post_id: 439, tag_id: 17},
  {post_id: 440, tag_id: 27},
  {post_id: 440, tag_id: 31},
  {post_id: 441, tag_id: 29},
  {post_id: 441, tag_id: 31},
  {post_id: 442, tag_id: 27},
  {post_id: 443, tag_id: 24},
  {post_id: 443, tag_id: 19},
  {post_id: 444, tag_id: 31},
  {post_id: 445, tag_id: 24},
  {post_id: 445, tag_id: 31},
  {post_id: 446, tag_id: 17},
  {post_id: 446, tag_id: 24},
  {post_id: 447, tag_id: 24},
  {post_id: 447, tag_id: 31},
  {post_id: 448, tag_id: 17},
  {post_id: 448, tag_id: 27},
  {post_id: 449, tag_id: 17},
  {post_id: 449, tag_id: 27},
  {post_id: 450, tag_id: 17},
  {post_id: 450, tag_id: 27},
  {post_id: 451, tag_id: 22},
  {post_id: 451, tag_id: 18},
  {post_id: 452, tag_id: 32},
  {post_id: 452, tag_id: 24},
  {post_id: 453, tag_id: 17},
  {post_id: 454, tag_id: 31},
  {post_id: 455, tag_id: 17},
  {post_id: 455, tag_id: 28},
  {post_id: 456, tag_id: 17},
  {post_id: 456, tag_id: 28},
  {post_id: 457, tag_id: 17},
  {post_id: 457, tag_id: 33},
  {post_id: 458, tag_id: 17},
  {post_id: 459, tag_id: 30},
  {post_id: 459, tag_id: 17},
  {post_id: 459, tag_id: 27},
  {post_id: 460, tag_id: 32},
  {post_id: 461, tag_id: 32},
  {post_id: 462, tag_id: 24},
  {post_id: 462, tag_id: 19},
  {post_id: 463, tag_id: 23},
  {post_id: 463, tag_id: 31},
  {post_id: 464, tag_id: 17},
  {post_id: 465, tag_id: 32},
  {post_id: 466, tag_id: 32},
  {post_id: 467, tag_id: 17},
  {post_id: 467, tag_id: 33},
  {post_id: 468, tag_id: 27},
  {post_id: 468, tag_id: 32},
  {post_id: 468, tag_id: 33},
  {post_id: 468, tag_id: 31},
  {post_id: 469, tag_id: 24},
  {post_id: 469, tag_id: 31},
  {post_id: 470, tag_id: 17},
  {post_id: 470, tag_id: 29},
  {post_id: 470, tag_id: 18},
  {post_id: 471, tag_id: 17},
  {post_id: 472, tag_id: 17},
  {post_id: 472, tag_id: 32},
  {post_id: 473, tag_id: 17},
  {post_id: 473, tag_id: 32},
  {post_id: 474, tag_id: 31},
  {post_id: 475, tag_id: 32},
  {post_id: 475, tag_id: 23},
  {post_id: 476, tag_id: 23},
  {post_id: 477, tag_id: 17},
  {post_id: 477, tag_id: 19},
  {post_id: 478, tag_id: 17},
  {post_id: 478, tag_id: 19},
  {post_id: 479, tag_id: 17},
  {post_id: 479, tag_id: 19},
  {post_id: 480, tag_id: 27},
  {post_id: 480, tag_id: 31},
  {post_id: 481, tag_id: 17},
  {post_id: 482, tag_id: 23},
  {post_id: 482, tag_id: 18},
  {post_id: 482, tag_id: 31},
  {post_id: 483, tag_id: 24},
  {post_id: 483, tag_id: 19},
  {post_id: 484, tag_id: 18},
  {post_id: 484, tag_id: 31},
  {post_id: 485, tag_id: 17},
  {post_id: 485, tag_id: 18},
  {post_id: 486, tag_id: 17},
  {post_id: 486, tag_id: 18},
  {post_id: 487, tag_id: 22},
  {post_id: 488, tag_id: 22},
  {post_id: 489, tag_id: 30},
  {post_id: 489, tag_id: 22},
  {post_id: 489, tag_id: 34},
  {post_id: 490, tag_id: 32},
  {post_id: 490, tag_id: 31},
  {post_id: 491, tag_id: 22},
  {post_id: 492, tag_id: 29},
  {post_id: 492, tag_id: 31},
  {post_id: 493, tag_id: 22},
  {post_id: 493, tag_id: 18},
  {post_id: 494, tag_id: 17},
  {post_id: 494, tag_id: 23},
  {post_id: 494, tag_id: 18},
  {post_id: 495, tag_id: 32},
  {post_id: 495, tag_id: 31},
  {post_id: 496, tag_id: 17},
  {post_id: 496, tag_id: 18},
  {post_id: 497, tag_id: 17},
  {post_id: 497, tag_id: 18},
  {post_id: 498, tag_id: 31},
  {post_id: 499, tag_id: 24},
  {post_id: 499, tag_id: 31},
  {post_id: 500, tag_id: 24},
  {post_id: 500, tag_id: 31},
  {post_id: 501, tag_id: 17},
  {post_id: 501, tag_id: 18},
  {post_id: 502, tag_id: 27},
  {post_id: 502, tag_id: 32},
  {post_id: 502, tag_id: 31},
  {post_id: 503, tag_id: 24},
  {post_id: 504, tag_id: 24},
  {post_id: 504, tag_id: 31},
  {post_id: 505, tag_id: 24},
  {post_id: 506, tag_id: 31},
  {post_id: 507, tag_id: 31},
  {post_id: 508, tag_id: 30},
  {post_id: 508, tag_id: 17},
  {post_id: 508, tag_id: 19},
  {post_id: 509, tag_id: 23},
  {post_id: 509, tag_id: 18},
  {post_id: 509, tag_id: 31},
  {post_id: 510, tag_id: 22},
  {post_id: 510, tag_id: 24},
  {post_id: 511, tag_id: 17},
  {post_id: 511, tag_id: 23}
])
